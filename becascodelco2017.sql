-- Script was generated by Devart dbForge Studio for MySQL, Version 6.0.128.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 21/12/17 8:26:39 AM
-- Server version: 5.5.41-MariaDB-log
-- Client version: 4.1

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

-- 
-- Set default database
--
USE becascodelco2017;

--
-- Definition for table ACCIONES
--
DROP TABLE IF EXISTS ACCIONES;
CREATE TABLE ACCIONES (
  IDACCION INT(11) NOT NULL,
  TIPO_ACCION VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDACCION)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 59
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table base64_data
--
DROP TABLE IF EXISTS base64_data;
CREATE TABLE base64_data (
  c CHAR(1) BINARY CHARACTER SET latin1 COLLATE latin1_bin DEFAULT NULL,
  val TINYINT(4) DEFAULT NULL
)
ENGINE = INNODB
AVG_ROW_LENGTH = 252
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table BITACORAS
--
DROP TABLE IF EXISTS BITACORAS;
CREATE TABLE BITACORAS (
  IDBITACORA INT(11) NOT NULL AUTO_INCREMENT,
  IDACCION INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  GLOSA_BITACORA VARCHAR(5000) DEFAULT NULL,
  IDUSUARIO INT(11) DEFAULT NULL,
  FECHA_BITACORA DATETIME DEFAULT NULL,
  PRIMARY KEY (IDBITACORA),
  INDEX FK_TIENE_ACC (IDACCION),
  INDEX FK_TIENE_BIT (IDPOSTULACION)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
AVG_ROW_LENGTH = 72
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table COMUNAS
--
DROP TABLE IF EXISTS COMUNAS;
CREATE TABLE COMUNAS (
  IDCOMUNAS INT(11) NOT NULL,
  IDPROVINCIAS INT(11) NOT NULL,
  COMUNA_NOMBRE VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (IDCOMUNAS),
  INDEX FK_TIENE_PROV (IDPROVINCIAS)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 24
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table CONTACTOS
--
DROP TABLE IF EXISTS CONTACTOS;
CREATE TABLE CONTACTOS (
  IDCONTACTO INT(11) NOT NULL AUTO_INCREMENT,
  IDPOSTULANTE INT(11) NOT NULL,
  CONTACTO_RUT VARCHAR(8) NOT NULL,
  CONTACTO_DV VARCHAR(1) NOT NULL,
  CONTACTO_NOMBRE VARCHAR(255) NOT NULL,
  CONTACTO_GLOSA VARCHAR(3000) NOT NULL,
  PRIMARY KEY (IDCONTACTO)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table EDUCACION
--
DROP TABLE IF EXISTS EDUCACION;
CREATE TABLE EDUCACION (
  IDEDUCACION INT(11) NOT NULL AUTO_INCREMENT,
  IDPONDEDUCACION INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  HIJOSEDSUP_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  TIPO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  RUT_POSTULANTE VARCHAR(12) DEFAULT NULL,
  DV_POSTULANTE VARCHAR(1) DEFAULT NULL,
  NOMBRE_POSTULANTE VARCHAR(255) DEFAULT NULL,
  PATERNO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  MATERNO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  ENSENA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  ANTENSENA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  PROMEDIONOTAS_POSTULANTE VARCHAR(5) DEFAULT NULL,
  ESTABLECIMIENTO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  CARRERA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  NACIMIENTO_POSTULANTE DATE DEFAULT NULL,
  SEXO_POSTULANTE VARCHAR(1) DEFAULT NULL,
  ARCHIVO_CONTRATO LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ1 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ2 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ3 LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_ALUMNO LONGBLOB DEFAULT NULL,
  ARCHIVO_CONC_NOTAS LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_NAC LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_MATRI LONGBLOB DEFAULT NULL,
  ARCHIVO_DECLARA LONGBLOB DEFAULT NULL,
  ARCHIVO_SEGUROCOMP LONGBLOB DEFAULT NULL,
  ACEPTA_EDUCACION TINYINT(1) DEFAULT NULL,
  PRIMARY KEY (IDEDUCACION),
  INDEX FK_PONDERA_ED (IDPONDEDUCACION),
  INDEX FK_TIENE_EDUCACION (IDPOSTULACION)
)
ENGINE = INNODB
AUTO_INCREMENT = 6002
AVG_ROW_LENGTH = 4021346
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table EDUCACION_M
--
DROP TABLE IF EXISTS EDUCACION_M;
CREATE TABLE EDUCACION_M (
  IDEDUCACION INT(11) NOT NULL AUTO_INCREMENT,
  IDPONDEDUCACION INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  HIJOSEDSUP_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  TIPO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  RUT_POSTULANTE VARCHAR(12) DEFAULT NULL,
  DV_POSTULANTE VARCHAR(1) DEFAULT NULL,
  NOMBRE_POSTULANTE VARCHAR(255) DEFAULT NULL,
  PATERNO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  MATERNO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  ENSENA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  ANTENSENA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  PROMEDIONOTAS_POSTULANTE VARCHAR(5) DEFAULT NULL,
  ESTABLECIMIENTO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  CARRERA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  NACIMIENTO_POSTULANTE DATE DEFAULT NULL,
  SEXO_POSTULANTE VARCHAR(1) DEFAULT NULL,
  ARCHIVO_CONTRATO LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ1 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ2 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ3 LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_ALUMNO LONGBLOB DEFAULT NULL,
  ARCHIVO_CONC_NOTAS LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_NAC LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_MATRI LONGBLOB DEFAULT NULL,
  ARCHIVO_DECLARA LONGBLOB DEFAULT NULL,
  ARCHIVO_SEGUROCOMP LONGBLOB DEFAULT NULL,
  ACEPTA_EDUCACION TINYINT(1) DEFAULT NULL,
  PRIMARY KEY (IDEDUCACION),
  INDEX FK_PONDERA_ED (IDPONDEDUCACION),
  INDEX FK_TIENE_EDUCACION (IDPOSTULACION)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
AVG_ROW_LENGTH = 4021346
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table EDUCACION_P
--
DROP TABLE IF EXISTS EDUCACION_P;
CREATE TABLE EDUCACION_P (
  IDEDUCACION INT(11) NOT NULL AUTO_INCREMENT,
  IDPONDEDUCACION INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  HIJOSEDSUP_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  TIPO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  RUT_POSTULANTE VARCHAR(12) DEFAULT NULL,
  DV_POSTULANTE VARCHAR(1) DEFAULT NULL,
  NOMBRE_POSTULANTE VARCHAR(255) DEFAULT NULL,
  PATERNO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  MATERNO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  ENSENA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  ANTENSENA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  PROMEDIONOTAS_POSTULANTE VARCHAR(5) DEFAULT NULL,
  ESTABLECIMIENTO_POSTULANTE VARCHAR(255) DEFAULT NULL,
  CARRERA_POSTULANTE VARCHAR(255) DEFAULT NULL,
  NACIMIENTO_POSTULANTE DATE DEFAULT NULL,
  SEXO_POSTULANTE VARCHAR(1) DEFAULT NULL,
  ARCHIVO_CONTRATO LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ1 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ2 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ3 LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_ALUMNO LONGBLOB DEFAULT NULL,
  ARCHIVO_CONC_NOTAS LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_NAC LONGBLOB DEFAULT NULL,
  ARCHIVO_CERT_MATRI LONGBLOB DEFAULT NULL,
  ARCHIVO_DECLARA LONGBLOB DEFAULT NULL,
  ARCHIVO_SEGUROCOMP LONGBLOB DEFAULT NULL,
  ACEPTA_EDUCACION TINYINT(1) DEFAULT NULL,
  PRIMARY KEY (IDEDUCACION),
  INDEX FK_PONDERA_ED (IDPONDEDUCACION),
  INDEX FK_TIENE_EDUCACION (IDPOSTULACION)
)
ENGINE = INNODB
AUTO_INCREMENT = 5983
AVG_ROW_LENGTH = 4021346
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table ESTADO_BECA
--
DROP TABLE IF EXISTS ESTADO_BECA;
CREATE TABLE ESTADO_BECA (
  IDESTADOBECA INT(11) NOT NULL,
  ESTADO_BECA VARCHAR(50) DEFAULT NULL,
  ESTADO_BECA_GLOSA VARCHAR(500) NOT NULL,
  PRIMARY KEY (IDESTADOBECA)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 86
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table ESTADO_USUARIO
--
DROP TABLE IF EXISTS ESTADO_USUARIO;
CREATE TABLE ESTADO_USUARIO (
  IDESTADOUSUARIO INT(11) NOT NULL,
  USUARIO_ESTADO VARCHAR(30) DEFAULT NULL,
  PRIMARY KEY (IDESTADOUSUARIO)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 39
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table GESTION
--
DROP TABLE IF EXISTS GESTION;
CREATE TABLE GESTION (
  IDGESTION INT(11) NOT NULL AUTO_INCREMENT,
  IDTIPOS INT(11) DEFAULT NULL,
  IDRESOLUCION INT(11) DEFAULT NULL,
  IDMEDIOS INT(11) DEFAULT NULL,
  IDPOSTULANTES INT(11) DEFAULT NULL,
  IDSUBTIPO INT(11) DEFAULT NULL,
  IDUSUARIO INT(11) DEFAULT NULL,
  IDORIGENPUBLICIDAD INT(11) DEFAULT NULL,
  FECHA_GESTION DATETIME DEFAULT NULL,
  CONTACTO_GESTION VARCHAR(150) DEFAULT NULL,
  FONO_GESTION VARCHAR(15) DEFAULT NULL,
  GLOSA_GESTION VARCHAR(5000) DEFAULT NULL,
  PRIMARY KEY (IDGESTION),
  INDEX FK_CREA_GEST (IDPOSTULANTES),
  INDEX FK_CREA_GESTION (IDUSUARIO),
  INDEX FK_TIENE_MEDIO (IDMEDIOS),
  INDEX FK_TIENE_ORG (IDORIGENPUBLICIDAD),
  INDEX FK_TIENE_RESL (IDRESOLUCION),
  INDEX FK_TIENE_SUBTIP (IDSUBTIPO),
  INDEX FK_TIENE_TIPO (IDTIPOS)
)
ENGINE = MYISAM
AUTO_INCREMENT = 103
AVG_ROW_LENGTH = 389
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table MEDIOS
--
DROP TABLE IF EXISTS MEDIOS;
CREATE TABLE MEDIOS (
  IDMEDIOS INT(11) NOT NULL,
  MEDIOS_NOMBRE VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDMEDIOS)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 59
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table OBSERVACIONES_QA
--
DROP TABLE IF EXISTS OBSERVACIONES_QA;
CREATE TABLE OBSERVACIONES_QA (
  IDOBSERVACIONES INT(11) NOT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  IDUSUARIO INT(11) DEFAULT NULL,
  IDTIPOBECA INT(11) DEFAULT NULL,
  PASO1 VARCHAR(5000) DEFAULT NULL,
  PASO2 VARCHAR(5000) DEFAULT NULL,
  PASO3 VARCHAR(5000) DEFAULT NULL,
  PASO4 VARCHAR(5000) DEFAULT NULL,
  PASO5 VARCHAR(5000) DEFAULT NULL,
  COMENTARIOS VARCHAR(5000) DEFAULT NULL,
  PRIMARY KEY (IDOBSERVACIONES),
  INDEX FK_AUDITAN (IDPOSTULACION),
  INDEX FK_HACE_OBS (IDUSUARIO),
  INDEX FK_TIENE_BECA_FIL (IDTIPOBECA)
)
ENGINE = MYISAM
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table ORIGEN_CREACION
--
DROP TABLE IF EXISTS ORIGEN_CREACION;
CREATE TABLE ORIGEN_CREACION (
  IDORIGEN INT(11) NOT NULL,
  ORIGEN_NOMBRE VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDORIGEN)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 59
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table ORIGEN_PUBLICITARIO
--
DROP TABLE IF EXISTS ORIGEN_PUBLICITARIO;
CREATE TABLE ORIGEN_PUBLICITARIO (
  IDORIGENPUBLICIDAD INT(11) NOT NULL,
  PUBLICIDAD_MEDIO VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDORIGENPUBLICIDAD)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 59
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table PERFIL_USUARIO
--
DROP TABLE IF EXISTS PERFIL_USUARIO;
CREATE TABLE PERFIL_USUARIO (
  IDPERFIL INT(11) NOT NULL,
  USUARIO_PERFIL VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDPERFIL)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 59
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table PONDERACION_EDUCACION
--
DROP TABLE IF EXISTS PONDERACION_EDUCACION;
CREATE TABLE PONDERACION_EDUCACION (
  IDPONDEDUCACION INT(11) NOT NULL AUTO_INCREMENT,
  OBS_PASO1 TEXT DEFAULT NULL,
  OBS_PASO2 TEXT DEFAULT NULL,
  OBS_PASO3 TEXT DEFAULT NULL,
  OBS_PASO4 TEXT DEFAULT NULL,
  OBS_PASO5 TEXT DEFAULT NULL,
  r1 INT(11) DEFAULT NULL,
  r2 INT(11) DEFAULT NULL,
  r3 INT(11) DEFAULT NULL,
  r4 INT(11) DEFAULT NULL,
  r5 INT(11) DEFAULT NULL,
  r6 INT(11) DEFAULT NULL,
  r7 INT(11) DEFAULT NULL,
  r8 INT(11) DEFAULT NULL,
  r9 INT(11) DEFAULT NULL,
  r10 INT(11) DEFAULT NULL,
  r11 INT(11) DEFAULT NULL,
  r12 INT(11) DEFAULT NULL,
  r13 INT(11) DEFAULT NULL,
  r14 INT(11) DEFAULT NULL,
  r15 INT(11) DEFAULT NULL,
  r16 INT(11) DEFAULT NULL,
  r17 INT(11) DEFAULT NULL,
  r18 INT(11) DEFAULT NULL,
  r19 INT(11) DEFAULT NULL,
  r20 INT(11) DEFAULT NULL,
  r21 INT(11) DEFAULT NULL,
  r22 INT(11) DEFAULT NULL,
  r23 INT(11) DEFAULT NULL,
  r24 INT(11) DEFAULT NULL,
  r25 INT(11) DEFAULT NULL,
  r26 INT(11) DEFAULT NULL,
  r27 INT(11) DEFAULT NULL,
  r28 INT(11) DEFAULT NULL,
  r29 INT(11) DEFAULT NULL,
  r30 INT(11) DEFAULT NULL,
  r31 INT(11) DEFAULT NULL,
  r32 INT(11) DEFAULT NULL,
  tr1 VARCHAR(300) DEFAULT NULL,
  tr2 VARCHAR(300) DEFAULT NULL,
  tr3 VARCHAR(300) DEFAULT NULL,
  tr4 VARCHAR(300) DEFAULT NULL,
  tr5 VARCHAR(300) DEFAULT NULL,
  tr6 VARCHAR(300) DEFAULT NULL,
  tr7 VARCHAR(300) DEFAULT NULL,
  tr8 VARCHAR(300) DEFAULT NULL,
  tr9 VARCHAR(300) DEFAULT NULL,
  tr10 VARCHAR(300) DEFAULT NULL,
  tr11 VARCHAR(300) DEFAULT NULL,
  tr12 VARCHAR(300) DEFAULT NULL,
  tr13 VARCHAR(300) DEFAULT NULL,
  tr14 VARCHAR(300) DEFAULT NULL,
  tr15 VARCHAR(300) DEFAULT NULL,
  tr16 VARCHAR(300) DEFAULT NULL,
  tr17 VARCHAR(300) DEFAULT NULL,
  tr18 VARCHAR(300) DEFAULT NULL,
  tr19 VARCHAR(300) DEFAULT NULL,
  tr20 VARCHAR(300) DEFAULT NULL,
  tr21 VARCHAR(300) DEFAULT NULL,
  tr22 VARCHAR(300) DEFAULT NULL,
  tr23 VARCHAR(300) DEFAULT NULL,
  tr24 VARCHAR(300) DEFAULT NULL,
  tr25 VARCHAR(300) DEFAULT NULL,
  tr26 VARCHAR(300) DEFAULT NULL,
  tr27 VARCHAR(300) DEFAULT NULL,
  tr28 VARCHAR(300) DEFAULT NULL,
  tr29 VARCHAR(300) DEFAULT NULL,
  tr30 VARCHAR(300) DEFAULT NULL,
  tr31 VARCHAR(300) DEFAULT NULL,
  tr32 VARCHAR(300) DEFAULT NULL,
  ponderacion VARCHAR(5) DEFAULT NULL,
  fecha_mod DATETIME DEFAULT NULL,
  agente VARCHAR(100) DEFAULT NULL,
  ponderacion_2 VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (IDPONDEDUCACION)
)
ENGINE = MYISAM
AUTO_INCREMENT = 9414
AVG_ROW_LENGTH = 338
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table PONDERACION_VIVIENDA
--
DROP TABLE IF EXISTS PONDERACION_VIVIENDA;
CREATE TABLE PONDERACION_VIVIENDA (
  IDPONDVIVIENDA INT(11) NOT NULL AUTO_INCREMENT,
  OBS_PASO1 TEXT DEFAULT NULL,
  OBS_PASO2 TEXT DEFAULT NULL,
  OBS_PASO3 TEXT DEFAULT NULL,
  OBS_PASO4 TEXT DEFAULT NULL,
  OBS_PASO5 TEXT DEFAULT NULL,
  r1 INT(11) DEFAULT NULL,
  r2 INT(11) DEFAULT NULL,
  r3 INT(11) DEFAULT NULL,
  r4 INT(11) DEFAULT NULL,
  r5 INT(11) DEFAULT NULL,
  r6 INT(11) DEFAULT NULL,
  r7 INT(11) DEFAULT NULL,
  r8 INT(11) DEFAULT NULL,
  r9 INT(11) DEFAULT NULL,
  r10 INT(11) DEFAULT NULL,
  r11 INT(11) DEFAULT NULL,
  r12 INT(11) DEFAULT NULL,
  r13 INT(11) DEFAULT NULL,
  r14 INT(11) DEFAULT NULL,
  r15 INT(11) DEFAULT NULL,
  r16 INT(11) DEFAULT NULL,
  r17 INT(11) DEFAULT NULL,
  r18 INT(11) DEFAULT NULL,
  r19 INT(11) DEFAULT NULL,
  r20 INT(11) DEFAULT NULL,
  r21 INT(11) DEFAULT NULL,
  r22 INT(11) DEFAULT NULL,
  r23 INT(11) DEFAULT NULL,
  r24 INT(11) DEFAULT NULL,
  r25 INT(11) DEFAULT NULL,
  r26 INT(11) DEFAULT NULL,
  r27 INT(11) DEFAULT NULL,
  r28 INT(11) DEFAULT NULL,
  r29 INT(11) DEFAULT NULL,
  r30 INT(11) DEFAULT NULL,
  r31 INT(11) DEFAULT NULL,
  r32 INT(11) DEFAULT NULL,
  r33 INT(11) DEFAULT NULL,
  tr1 VARCHAR(300) DEFAULT NULL,
  tr2 VARCHAR(300) DEFAULT NULL,
  tr3 VARCHAR(300) DEFAULT NULL,
  tr4 VARCHAR(300) DEFAULT NULL,
  tr5 VARCHAR(300) DEFAULT NULL,
  tr6 VARCHAR(300) DEFAULT NULL,
  tr7 VARCHAR(300) DEFAULT NULL,
  tr8 VARCHAR(300) DEFAULT NULL,
  tr9 VARCHAR(300) DEFAULT NULL,
  tr10 VARCHAR(300) DEFAULT NULL,
  tr11 VARCHAR(300) DEFAULT NULL,
  tr12 VARCHAR(300) DEFAULT NULL,
  tr13 VARCHAR(300) DEFAULT NULL,
  tr14 VARCHAR(300) DEFAULT NULL,
  tr15 VARCHAR(300) DEFAULT NULL,
  tr16 VARCHAR(300) DEFAULT NULL,
  tr17 VARCHAR(300) DEFAULT NULL,
  tr18 VARCHAR(300) DEFAULT NULL,
  tr19 VARCHAR(300) DEFAULT NULL,
  tr20 VARCHAR(300) DEFAULT NULL,
  tr21 VARCHAR(300) DEFAULT NULL,
  tr22 VARCHAR(300) DEFAULT NULL,
  tr23 VARCHAR(300) DEFAULT NULL,
  tr24 VARCHAR(300) DEFAULT NULL,
  tr25 VARCHAR(300) DEFAULT NULL,
  tr26 VARCHAR(300) DEFAULT NULL,
  tr27 VARCHAR(300) DEFAULT NULL,
  tr28 VARCHAR(300) DEFAULT NULL,
  tr29 VARCHAR(300) DEFAULT NULL,
  tr30 VARCHAR(300) DEFAULT NULL,
  tr31 VARCHAR(300) DEFAULT NULL,
  tr32 VARCHAR(300) DEFAULT NULL,
  tr33 VARCHAR(300) DEFAULT NULL,
  ponderacion VARCHAR(5) DEFAULT NULL,
  fecha_mod DATETIME DEFAULT NULL,
  agente VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (IDPONDVIVIENDA)
)
ENGINE = MYISAM
AUTO_INCREMENT = 5758
AVG_ROW_LENGTH = 338
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table PONDERACION_VIVIENDA_M
--
DROP TABLE IF EXISTS PONDERACION_VIVIENDA_M;
CREATE TABLE PONDERACION_VIVIENDA_M (
  IDPONDVIVIENDA INT(11) NOT NULL AUTO_INCREMENT,
  OBS_PASO1 TEXT DEFAULT NULL,
  OBS_PASO2 TEXT DEFAULT NULL,
  OBS_PASO3 TEXT DEFAULT NULL,
  OBS_PASO4 TEXT DEFAULT NULL,
  OBS_PASO5 TEXT DEFAULT NULL,
  r1 INT(11) DEFAULT NULL,
  r2 INT(11) DEFAULT NULL,
  r3 INT(11) DEFAULT NULL,
  r4 INT(11) DEFAULT NULL,
  r5 INT(11) DEFAULT NULL,
  r6 INT(11) DEFAULT NULL,
  r7 INT(11) DEFAULT NULL,
  r8 INT(11) DEFAULT NULL,
  r9 INT(11) DEFAULT NULL,
  r10 INT(11) DEFAULT NULL,
  r11 INT(11) DEFAULT NULL,
  r12 INT(11) DEFAULT NULL,
  r13 INT(11) DEFAULT NULL,
  r14 INT(11) DEFAULT NULL,
  r15 INT(11) DEFAULT NULL,
  r16 INT(11) DEFAULT NULL,
  r17 INT(11) DEFAULT NULL,
  r18 INT(11) DEFAULT NULL,
  r19 INT(11) DEFAULT NULL,
  r20 INT(11) DEFAULT NULL,
  r21 INT(11) DEFAULT NULL,
  r22 INT(11) DEFAULT NULL,
  r23 INT(11) DEFAULT NULL,
  r24 INT(11) DEFAULT NULL,
  r25 INT(11) DEFAULT NULL,
  r26 INT(11) DEFAULT NULL,
  r27 INT(11) DEFAULT NULL,
  r28 INT(11) DEFAULT NULL,
  r29 INT(11) DEFAULT NULL,
  r30 INT(11) DEFAULT NULL,
  r31 INT(11) DEFAULT NULL,
  r32 INT(11) DEFAULT NULL,
  r33 INT(11) DEFAULT NULL,
  tr1 VARCHAR(300) DEFAULT NULL,
  tr2 VARCHAR(300) DEFAULT NULL,
  tr3 VARCHAR(300) DEFAULT NULL,
  tr4 VARCHAR(300) DEFAULT NULL,
  tr5 VARCHAR(300) DEFAULT NULL,
  tr6 VARCHAR(300) DEFAULT NULL,
  tr7 VARCHAR(300) DEFAULT NULL,
  tr8 VARCHAR(300) DEFAULT NULL,
  tr9 VARCHAR(300) DEFAULT NULL,
  tr10 VARCHAR(300) DEFAULT NULL,
  tr11 VARCHAR(300) DEFAULT NULL,
  tr12 VARCHAR(300) DEFAULT NULL,
  tr13 VARCHAR(300) DEFAULT NULL,
  tr14 VARCHAR(300) DEFAULT NULL,
  tr15 VARCHAR(300) DEFAULT NULL,
  tr16 VARCHAR(300) DEFAULT NULL,
  tr17 VARCHAR(300) DEFAULT NULL,
  tr18 VARCHAR(300) DEFAULT NULL,
  tr19 VARCHAR(300) DEFAULT NULL,
  tr20 VARCHAR(300) DEFAULT NULL,
  tr21 VARCHAR(300) DEFAULT NULL,
  tr22 VARCHAR(300) DEFAULT NULL,
  tr23 VARCHAR(300) DEFAULT NULL,
  tr24 VARCHAR(300) DEFAULT NULL,
  tr25 VARCHAR(300) DEFAULT NULL,
  tr26 VARCHAR(300) DEFAULT NULL,
  tr27 VARCHAR(300) DEFAULT NULL,
  tr28 VARCHAR(300) DEFAULT NULL,
  tr29 VARCHAR(300) DEFAULT NULL,
  tr30 VARCHAR(300) DEFAULT NULL,
  tr31 VARCHAR(300) DEFAULT NULL,
  tr32 VARCHAR(300) DEFAULT NULL,
  tr33 VARCHAR(300) DEFAULT NULL,
  ponderacion VARCHAR(5) DEFAULT NULL,
  fecha_mod DATETIME DEFAULT NULL,
  agente VARCHAR(100) DEFAULT NULL,
  PRIMARY KEY (IDPONDVIVIENDA)
)
ENGINE = MYISAM
AUTO_INCREMENT = 1
AVG_ROW_LENGTH = 338
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table POSTULACION_FINAL
--
DROP TABLE IF EXISTS POSTULACION_FINAL;
CREATE TABLE POSTULACION_FINAL (
  ID DOUBLE(10, 3) DEFAULT NULL,
  `ESTADO FINAL` VARCHAR(255) DEFAULT NULL,
  MENSAJE VARCHAR(255) DEFAULT NULL
)
ENGINE = INNODB
AVG_ROW_LENGTH = 264
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table POSTULACIONES_WEB
--
DROP TABLE IF EXISTS POSTULACIONES_WEB;
CREATE TABLE POSTULACIONES_WEB (
  IDPOSTULACION INT(11) NOT NULL AUTO_INCREMENT,
  IDESTADOBECA INT(11) NOT NULL,
  IDTIPOBECA INT(11) NOT NULL,
  RUT_EMPRESA VARCHAR(12) DEFAULT NULL,
  DV_EMPRESA VARCHAR(1) DEFAULT NULL,
  TIPO_EMPRESA VARCHAR(255) NOT NULL,
  RAZONSOCIAL VARCHAR(255) DEFAULT NULL,
  CORREO_EMPRESA VARCHAR(255) NOT NULL,
  FONO_EMPRESA VARCHAR(255) NOT NULL,
  CONTRATO VARCHAR(255) DEFAULT NULL,
  FECHA_CONTRATO DATE DEFAULT NULL,
  DIVISION VARCHAR(255) DEFAULT NULL,
  RUT_TRABAJADOR VARCHAR(12) DEFAULT NULL,
  DV_TRABAJADOR VARCHAR(1) DEFAULT NULL,
  NOMBRE_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  PATERNO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  MATERNO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  ESTADO_CIVIL VARCHAR(255) NOT NULL,
  FECHA_NACIMIENTO DATE DEFAULT NULL,
  SEXO VARCHAR(1) DEFAULT NULL,
  DIRECCION VARCHAR(255) DEFAULT NULL,
  NUM_DIRECCION VARCHAR(255) DEFAULT NULL,
  DEPTO_DIRECCION VARCHAR(255) DEFAULT NULL,
  VILLA_DIRECCION VARCHAR(255) DEFAULT NULL,
  CORREO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  FONO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  CELU_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  REGION_TRABAJADOR INT(11) DEFAULT NULL,
  COMUNA_TRABAJADOR INT(11) DEFAULT NULL,
  RENTA_TRABAJADOR INT(11) DEFAULT NULL,
  INTEGRANTES INT(11) NOT NULL,
  FECHA_POSTULACION DATE DEFAULT NULL,
  IDEVALUADOR INT(11) DEFAULT NULL,
  FECHA_MODIFICACION DATETIME DEFAULT NULL,
  FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (IDPOSTULACION),
  INDEX FK_TIENE_BECA (IDTIPOBECA),
  INDEX FK_TIENE_ESTADO_POST (IDESTADOBECA)
)
ENGINE = INNODB
AUTO_INCREMENT = 18874
AVG_ROW_LENGTH = 518
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table POSTULACIONES_WEB_M
--
DROP TABLE IF EXISTS POSTULACIONES_WEB_M;
CREATE TABLE POSTULACIONES_WEB_M (
  IDPOSTULACION INT(11) NOT NULL AUTO_INCREMENT,
  IDESTADOBECA INT(11) NOT NULL,
  IDTIPOBECA INT(11) NOT NULL,
  RUT_EMPRESA VARCHAR(12) DEFAULT NULL,
  DV_EMPRESA VARCHAR(1) DEFAULT NULL,
  TIPO_EMPRESA VARCHAR(255) NOT NULL,
  RAZONSOCIAL VARCHAR(255) DEFAULT NULL,
  CORREO_EMPRESA VARCHAR(255) NOT NULL,
  FONO_EMPRESA VARCHAR(255) NOT NULL,
  CONTRATO VARCHAR(255) DEFAULT NULL,
  FECHA_CONTRATO DATE DEFAULT NULL,
  DIVISION VARCHAR(255) DEFAULT NULL,
  RUT_TRABAJADOR VARCHAR(12) DEFAULT NULL,
  DV_TRABAJADOR VARCHAR(1) DEFAULT NULL,
  NOMBRE_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  PATERNO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  MATERNO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  ESTADO_CIVIL VARCHAR(255) NOT NULL,
  FECHA_NACIMIENTO DATE DEFAULT NULL,
  SEXO VARCHAR(1) DEFAULT NULL,
  DIRECCION VARCHAR(255) DEFAULT NULL,
  NUM_DIRECCION VARCHAR(255) DEFAULT NULL,
  DEPTO_DIRECCION VARCHAR(255) DEFAULT NULL,
  VILLA_DIRECCION VARCHAR(255) DEFAULT NULL,
  CORREO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  FONO_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  CELU_TRABAJADOR VARCHAR(255) DEFAULT NULL,
  REGION_TRABAJADOR INT(11) DEFAULT NULL,
  COMUNA_TRABAJADOR INT(11) DEFAULT NULL,
  RENTA_TRABAJADOR INT(11) DEFAULT NULL,
  INTEGRANTES INT(11) NOT NULL,
  FECHA_POSTULACION DATE DEFAULT NULL,
  IDEVALUADOR INT(11) DEFAULT NULL,
  FECHA_MODIFICACION DATETIME DEFAULT NULL,
  FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (IDPOSTULACION),
  INDEX FK_TIENE_BECA (IDTIPOBECA),
  INDEX FK_TIENE_ESTADO_POST (IDESTADOBECA)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
AVG_ROW_LENGTH = 518
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table POSTULANTES
--
DROP TABLE IF EXISTS POSTULANTES;
CREATE TABLE POSTULANTES (
  IDPOSTULANTES INT(11) NOT NULL,
  IDORIGEN INT(11) NOT NULL,
  POSTULANTE_RUT VARCHAR(12) DEFAULT NULL,
  POSTULANTE_FECHANAC DATETIME DEFAULT NULL,
  POSTULANTE_NOMBRES VARCHAR(200) DEFAULT NULL,
  POSTULANTE_CORREO VARCHAR(200) DEFAULT NULL,
  POSTULANTE_FONO VARCHAR(20) DEFAULT NULL,
  POSTULANTE_CELULAR VARCHAR(20) DEFAULT NULL,
  PRIMARY KEY (IDPOSTULANTES),
  INDEX FK_VIENE_DE (IDORIGEN)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 472
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table PROVINCIAS
--
DROP TABLE IF EXISTS PROVINCIAS;
CREATE TABLE PROVINCIAS (
  IDPROVINCIAS INT(11) NOT NULL,
  IDREGIONES INT(11) DEFAULT NULL,
  PROVINCIA_NOMBRE VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDPROVINCIAS),
  INDEX FK_TIENE_REG (IDREGIONES)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 24
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table REGIONES
--
DROP TABLE IF EXISTS REGIONES;
CREATE TABLE REGIONES (
  IDREGIONES INT(11) NOT NULL,
  REGION_NOMBRE VARCHAR(50) DEFAULT NULL,
  REGION_NUMERO VARCHAR(5) NOT NULL,
  PRIMARY KEY (IDREGIONES)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 31
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table RESOLUCION
--
DROP TABLE IF EXISTS RESOLUCION;
CREATE TABLE RESOLUCION (
  IDRESOLUCION INT(11) NOT NULL,
  IDSUBTIPO INT(11) NOT NULL,
  RESOLUCION_NOMBRE VARCHAR(300) DEFAULT NULL,
  PRIMARY KEY (IDRESOLUCION),
  INDEX FK_RESOL_DE (IDSUBTIPO)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 37
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table RESULTADOS_ESTUDIOS_2017
--
DROP TABLE IF EXISTS RESULTADOS_ESTUDIOS_2017;
CREATE TABLE RESULTADOS_ESTUDIOS_2017 (
  IDPOST INT(11) NOT NULL DEFAULT 0,
  ESTADO VARCHAR(255) DEFAULT NULL,
  RUT_T VARCHAR(255) DEFAULT NULL,
  RUT_P VARCHAR(255) DEFAULT NULL,
  PONDERACION VARCHAR(255) DEFAULT NULL,
  RANKING VARCHAR(4) DEFAULT NULL,
  ESTADO_ADJ VARCHAR(255) DEFAULT NULL,
  GLOSA VARCHAR(3000) DEFAULT NULL,
  PRIMARY KEY (IDPOST)
)
ENGINE = INNODB
AVG_ROW_LENGTH = 454
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table RESULTADOS_VIVIENDA_2017
--
DROP TABLE IF EXISTS RESULTADOS_VIVIENDA_2017;
CREATE TABLE RESULTADOS_VIVIENDA_2017 (
  IDPOS INT(11) DEFAULT NULL,
  IDVIV INT(11) DEFAULT NULL,
  ESTADO VARCHAR(255) DEFAULT NULL,
  RUT_T VARCHAR(255) DEFAULT NULL,
  `NOMBRE TRABAJADOR` VARCHAR(255) DEFAULT NULL,
  `OBSERVACION FINAL` VARCHAR(255) DEFAULT NULL,
  PONDERACION VARCHAR(255) DEFAULT NULL,
  RANCKING VARCHAR(255) DEFAULT NULL,
  `ESTADO FINAL` VARCHAR(255) DEFAULT NULL,
  ESTADO_ADJ VARCHAR(255) DEFAULT NULL,
  GLOSA VARCHAR(255) DEFAULT NULL
)
ENGINE = INNODB
AVG_ROW_LENGTH = 368
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table SUBTIPOS
--
DROP TABLE IF EXISTS SUBTIPOS;
CREATE TABLE SUBTIPOS (
  IDSUBTIPO INT(11) NOT NULL,
  IDTIPOS INT(11) NOT NULL,
  SUBTIPO_NOMBRE VARCHAR(150) DEFAULT NULL,
  PRIMARY KEY (IDSUBTIPO),
  INDEX FK_ASIGNA_DE (IDTIPOS)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 48
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table TIPO_BECA
--
DROP TABLE IF EXISTS TIPO_BECA;
CREATE TABLE TIPO_BECA (
  IDTIPOBECA INT(11) NOT NULL,
  TIPO_BECA VARCHAR(50) DEFAULT NULL,
  PRIMARY KEY (IDTIPOBECA)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 20
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table TIPOS
--
DROP TABLE IF EXISTS TIPOS;
CREATE TABLE TIPOS (
  IDTIPOS INT(11) NOT NULL,
  TIPOS_NOMBRE VARCHAR(120) DEFAULT NULL,
  PRIMARY KEY (IDTIPOS)
)
ENGINE = MYISAM
AVG_ROW_LENGTH = 38
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table USUARIOS
--
DROP TABLE IF EXISTS USUARIOS;
CREATE TABLE USUARIOS (
  IDUSUARIO INT(11) NOT NULL AUTO_INCREMENT,
  IDPERFIL INT(11) DEFAULT NULL,
  IDESTADOUSUARIO INT(11) DEFAULT NULL,
  USUARIO_NOMBRE VARCHAR(100) DEFAULT NULL,
  USUARIO_LOGIN VARCHAR(15) DEFAULT NULL,
  USUARIO_CLAVE VARCHAR(8) DEFAULT NULL,
  USUARIO_AREA VARCHAR(30) DEFAULT NULL,
  USUARIO_RUT VARCHAR(10) DEFAULT NULL,
  USUARIO_EMAIL VARCHAR(50) DEFAULT NULL,
  USUARIO_DISPONIBLECHAT VARCHAR(3) DEFAULT NULL,
  USUARIO_KEEPALIVE INT(11) DEFAULT NULL,
  PRIMARY KEY (IDUSUARIO),
  INDEX FK_TIENE_ESTA (IDESTADOUSUARIO),
  INDEX FK_TIENE_PERF (IDPERFIL)
)
ENGINE = MYISAM
AUTO_INCREMENT = 89
AVG_ROW_LENGTH = 79
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table VIVIENDA
--
DROP TABLE IF EXISTS VIVIENDA;
CREATE TABLE VIVIENDA (
  IDVIVIENDA INT(11) NOT NULL AUTO_INCREMENT,
  IDPONDVIVIENDA INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  ACEPTA_VIVIENDA TINYINT(1) DEFAULT NULL,
  DESTINO_FONDO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_DIRECCION VARCHAR(255) DEFAULT NULL,
  VIVIENDA_NUMERO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_DEPTO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_VILLA VARCHAR(255) DEFAULT NULL,
  VIVIENDA_COMUNA INT(11) DEFAULT NULL,
  VIVIENDA_REGION INT(11) DEFAULT NULL,
  ARCHIVO_CONTRATO LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ1 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ2 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ3 LONGBLOB DEFAULT NULL,
  ARCHIVO_PROMESA LONGBLOB DEFAULT NULL,
  ARCHIVO_PROPIEDAD LONGBLOB DEFAULT NULL,
  ARCHIVO_DEUDA LONGBLOB DEFAULT NULL,
  ARCHIVO_DECLARACION LONGBLOB DEFAULT NULL,
  TIPO_DOCUMENTO VARCHAR(255) DEFAULT NULL,
  ARCHIVO_PROPIEDADBR LONGBLOB DEFAULT NULL,
  PRIMARY KEY (IDVIVIENDA),
  INDEX FK_PONDERA_VIV (IDPONDVIVIENDA),
  INDEX FK_TIENE_VIVIENDA (IDPOSTULACION)
)
ENGINE = INNODB
AUTO_INCREMENT = 4446
AVG_ROW_LENGTH = 3472101
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table VIVIENDA_M
--
DROP TABLE IF EXISTS VIVIENDA_M;
CREATE TABLE VIVIENDA_M (
  IDVIVIENDA INT(11) NOT NULL AUTO_INCREMENT,
  IDPONDVIVIENDA INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  ACEPTA_VIVIENDA TINYINT(1) DEFAULT NULL,
  DESTINO_FONDO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_DIRECCION VARCHAR(255) DEFAULT NULL,
  VIVIENDA_NUMERO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_DEPTO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_VILLA VARCHAR(255) DEFAULT NULL,
  VIVIENDA_COMUNA INT(11) DEFAULT NULL,
  VIVIENDA_REGION INT(11) DEFAULT NULL,
  ARCHIVO_CONTRATO LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ1 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ2 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ3 LONGBLOB DEFAULT NULL,
  ARCHIVO_PROMESA LONGBLOB DEFAULT NULL,
  ARCHIVO_PROPIEDAD LONGBLOB DEFAULT NULL,
  ARCHIVO_DEUDA LONGBLOB DEFAULT NULL,
  ARCHIVO_DECLARACION LONGBLOB DEFAULT NULL,
  TIPO_DOCUMENTO VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (IDVIVIENDA),
  INDEX FK_PONDERA_VIV (IDPONDVIVIENDA),
  INDEX FK_TIENE_VIVIENDA (IDPOSTULACION)
)
ENGINE = INNODB
AUTO_INCREMENT = 1
AVG_ROW_LENGTH = 3393600
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

--
-- Definition for table VIVIENDA_P
--
DROP TABLE IF EXISTS VIVIENDA_P;
CREATE TABLE VIVIENDA_P (
  IDVIVIENDA INT(11) NOT NULL AUTO_INCREMENT,
  IDPONDVIVIENDA INT(11) DEFAULT NULL,
  IDPOSTULACION INT(11) DEFAULT NULL,
  ACEPTA_VIVIENDA TINYINT(1) DEFAULT NULL,
  DESTINO_FONDO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_DIRECCION VARCHAR(255) DEFAULT NULL,
  VIVIENDA_NUMERO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_DEPTO VARCHAR(255) DEFAULT NULL,
  VIVIENDA_VILLA VARCHAR(255) DEFAULT NULL,
  VIVIENDA_COMUNA INT(11) DEFAULT NULL,
  VIVIENDA_REGION INT(11) DEFAULT NULL,
  ARCHIVO_CONTRATO LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ1 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ2 LONGBLOB DEFAULT NULL,
  ARCHIVO_LIQ3 LONGBLOB DEFAULT NULL,
  ARCHIVO_PROMESA LONGBLOB DEFAULT NULL,
  ARCHIVO_PROPIEDAD LONGBLOB DEFAULT NULL,
  ARCHIVO_DEUDA LONGBLOB DEFAULT NULL,
  ARCHIVO_DECLARACION LONGBLOB DEFAULT NULL,
  TIPO_DOCUMENTO VARCHAR(255) DEFAULT NULL,
  ARCHIVO_PROPIEDADBR LONGBLOB DEFAULT NULL,
  PRIMARY KEY (IDVIVIENDA),
  INDEX FK_PONDERA_VIV (IDPONDVIVIENDA),
  INDEX FK_TIENE_VIVIENDA (IDPOSTULACION)
)
ENGINE = INNODB
AUTO_INCREMENT = 4446
AVG_ROW_LENGTH = 3472101
CHARACTER SET latin1
COLLATE latin1_swedish_ci;

DELIMITER $$

--
-- Definition for procedure crear_evaluacion_qa
--
DROP PROCEDURE IF EXISTS crear_evaluacion_qa$$
CREATE DEFINER = 'root'@'127.0.0.1'
PROCEDURE crear_evaluacion_qa(
  IN kvidpostulacion int
)
BEGIN
declare llave int;
declare idx int;
declare aux int;
 
    SELECT IDTIPOBECA INTO llave
	  FROM POSTULACIONES_WEB
	 WHERE IDPOSTULACION = kvIDPOSTULACION;
	 
    IF llave = 1 THEN
     -- select 1;
       select IDPONDVIVIENDA into aux from VIVIENDA WHERE IDPOSTULACION = kvidpostulacion;
       IF IFNULL(aux,0) = 0  THEN
	           INSERT INTO PONDERACION_VIVIENDA (IDPONDVIVIENDA) VALUES (NULL);
		       SELECT MAX(IDPONDVIVIENDA) into idx FROM PONDERACION_VIVIENDA;
		       UPDATE VIVIENDA SET IDPONDVIVIENDA = idx WHERE IDPOSTULACION = kvidpostulacion;
	   END IF;
	END IF;
	
    IF llave = 2 THEN   
       select IDPONDEDUCACION into aux from EDUCACION WHERE IDPOSTULACION = kvidpostulacion;
       IF ISNULL(aux) THEN
          INSERT INTO PONDERACION_EDUCACION (IDPONDEDUCACION) VALUES (NULL);
          SELECT MAX(IDPONDEDUCACION) into idx FROM PONDERACION_EDUCACION;
          UPDATE EDUCACION SET IDPONDEDUCACION = idx WHERE IDPOSTULACION = kvidpostulacion;
       END IF;
	END IF;
	

END
$$

--
-- Definition for procedure itiss_ACCIONES_del
--
DROP PROCEDURE IF EXISTS itiss_ACCIONES_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ACCIONES_del(pkIDACCION int(11))
BEGIN
	DELETE FROM ACCIONES
	 WHERE IDACCION = pkIDACCION;
END
$$

--
-- Definition for procedure itiss_ACCIONES_lst
--
DROP PROCEDURE IF EXISTS itiss_ACCIONES_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ACCIONES_lst()
BEGIN
	SELECT IDACCION,
	       TIPO_ACCION
	  FROM ACCIONES;
END
$$

--
-- Definition for procedure itiss_ACCIONES_sel
--
DROP PROCEDURE IF EXISTS itiss_ACCIONES_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ACCIONES_sel(pkIDACCION int(11))
BEGIN
	SELECT IDACCION,
	       TIPO_ACCION
	  FROM ACCIONES
	 WHERE IDACCION = pkIDACCION;
END
$$

--
-- Definition for procedure itiss_ACCIONES_upd
--
DROP PROCEDURE IF EXISTS itiss_ACCIONES_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ACCIONES_upd(kvIDACCION int(11),
	kvTIPO_ACCION varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM ACCIONES
	 WHERE IDACCION = kvIDACCION;
	IF lcount = 0 THEN
		INSERT INTO ACCIONES(IDACCION,
				TIPO_ACCION)
		VALUES (kvIDACCION,
				kvTIPO_ACCION);
	ELSE
		UPDATE ACCIONES
		SET IDACCION = kvIDACCION,
			TIPO_ACCION = kvTIPO_ACCION
		WHERE IDACCION = kvIDACCION;
	END IF;
END
$$

--
-- Definition for procedure itiss_ARCHIVOS_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_ARCHIVOS_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ARCHIVOS_CHAT_del(pkIDARCHIVO int(11))
BEGIN
	DELETE FROM ARCHIVOS_CHAT
	 WHERE IDARCHIVO = pkIDARCHIVO;
END
$$

--
-- Definition for procedure itiss_ARCHIVOS_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_ARCHIVOS_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ARCHIVOS_CHAT_lst()
BEGIN
	SELECT IDARCHIVO,
	       ARCHIVOCHAT_NOMBRE,
	       ARCHIVOCHAT_MENSAJE,
	       ARCHIVOCHAT_USUARIO,
	       ARCHIVOCHAT_CONVOID,
	       ARCHIVOCHAT_TIEMPO,
	       ARCHIVOCHAT_CLASE
	  FROM ARCHIVOS_CHAT;
END
$$

--
-- Definition for procedure itiss_ARCHIVOS_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_ARCHIVOS_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ARCHIVOS_CHAT_sel(pkIDARCHIVO int(11))
BEGIN
	SELECT IDARCHIVO,
	       ARCHIVOCHAT_NOMBRE,
	       ARCHIVOCHAT_MENSAJE,
	       ARCHIVOCHAT_USUARIO,
	       ARCHIVOCHAT_CONVOID,
	       ARCHIVOCHAT_TIEMPO,
	       ARCHIVOCHAT_CLASE
	  FROM ARCHIVOS_CHAT
	 WHERE IDARCHIVO = pkIDARCHIVO;
END
$$

--
-- Definition for procedure itiss_ARCHIVOS_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_ARCHIVOS_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ARCHIVOS_CHAT_upd(kvIDARCHIVO int(11),
	kvARCHIVOCHAT_NOMBRE varchar(100),
	kvARCHIVOCHAT_MENSAJE varchar(2000),
	kvARCHIVOCHAT_USUARIO varchar(100),
	kvARCHIVOCHAT_CONVOID int(11),
	kvARCHIVOCHAT_TIEMPO varchar(100),
	kvARCHIVOCHAT_CLASE varchar(20))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM ARCHIVOS_CHAT
	 WHERE IDARCHIVO = kvIDARCHIVO;
	IF lcount = 0 THEN
		INSERT INTO ARCHIVOS_CHAT(IDARCHIVO,
				ARCHIVOCHAT_NOMBRE,
				ARCHIVOCHAT_MENSAJE,
				ARCHIVOCHAT_USUARIO,
				ARCHIVOCHAT_CONVOID,
				ARCHIVOCHAT_TIEMPO,
				ARCHIVOCHAT_CLASE)
		VALUES (kvIDARCHIVO,
				kvARCHIVOCHAT_NOMBRE,
				kvARCHIVOCHAT_MENSAJE,
				kvARCHIVOCHAT_USUARIO,
				kvARCHIVOCHAT_CONVOID,
				kvARCHIVOCHAT_TIEMPO,
				kvARCHIVOCHAT_CLASE);
	ELSE
		UPDATE ARCHIVOS_CHAT
		SET IDARCHIVO = kvIDARCHIVO,
			ARCHIVOCHAT_NOMBRE = kvARCHIVOCHAT_NOMBRE,
			ARCHIVOCHAT_MENSAJE = kvARCHIVOCHAT_MENSAJE,
			ARCHIVOCHAT_USUARIO = kvARCHIVOCHAT_USUARIO,
			ARCHIVOCHAT_CONVOID = kvARCHIVOCHAT_CONVOID,
			ARCHIVOCHAT_TIEMPO = kvARCHIVOCHAT_TIEMPO,
			ARCHIVOCHAT_CLASE = kvARCHIVOCHAT_CLASE
		WHERE IDARCHIVO = kvIDARCHIVO;
	END IF;
END
$$

--
-- Definition for procedure itiss_BITACORAS_del
--
DROP PROCEDURE IF EXISTS itiss_BITACORAS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_BITACORAS_del(pkIDBITACORA int(11))
BEGIN
	DELETE FROM BITACORAS
	 WHERE IDBITACORA = pkIDBITACORA;
END
$$

--
-- Definition for procedure itiss_BITACORAS_lst
--
DROP PROCEDURE IF EXISTS itiss_BITACORAS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_BITACORAS_lst()
BEGIN
	SELECT IDBITACORA,
	       IDACCION,
	       IDPOSTULACION,
	       GLOSA_BITACORA
	  FROM BITACORAS;
END
$$

--
-- Definition for procedure itiss_BITACORAS_sel
--
DROP PROCEDURE IF EXISTS itiss_BITACORAS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_BITACORAS_sel(pkIDBITACORA int(11))
BEGIN
	SELECT IDBITACORA,
	       IDACCION,
	       IDPOSTULACION,
	       GLOSA_BITACORA
	  FROM BITACORAS
	 WHERE IDBITACORA = pkIDBITACORA;
END
$$

--
-- Definition for procedure itiss_BITACORAS_upd
--
DROP PROCEDURE IF EXISTS itiss_BITACORAS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_BITACORAS_upd(kvIDBITACORA int(11),
	kvIDACCION int(11),
	kvIDPOSTULACION int(11),
	kvGLOSA_BITACORA varchar(5000))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM BITACORAS
	 WHERE IDBITACORA = kvIDBITACORA;
	IF lcount = 0 THEN
		INSERT INTO BITACORAS(IDBITACORA,
				IDACCION,
				IDPOSTULACION,
				GLOSA_BITACORA)
		VALUES (kvIDBITACORA,
				kvIDACCION,
				kvIDPOSTULACION,
				kvGLOSA_BITACORA);
	ELSE
		UPDATE BITACORAS
		SET IDBITACORA = kvIDBITACORA,
			IDACCION = kvIDACCION,
			IDPOSTULACION = kvIDPOSTULACION,
			GLOSA_BITACORA = kvGLOSA_BITACORA
		WHERE IDBITACORA = kvIDBITACORA;
	END IF;
END
$$

--
-- Definition for procedure itiss_CABLES_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_CABLES_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CABLES_CHAT_del(pkIDCABLESCHAT int(11))
BEGIN
	DELETE FROM CABLES_CHAT
	 WHERE IDCABLESCHAT = pkIDCABLESCHAT;
END
$$

--
-- Definition for procedure itiss_CABLES_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_CABLES_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CABLES_CHAT_lst()
BEGIN
	SELECT IDCABLESCHAT,
	       CABLESCHAT_NOMBRE,
	       CABLESCHAT_EMAIL,
	       CABLESCHAT_TRANSCRIPCION,
	       CABLESCHAT_FECHA
	  FROM CABLES_CHAT;
END
$$

--
-- Definition for procedure itiss_CABLES_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_CABLES_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CABLES_CHAT_sel(pkIDCABLESCHAT int(11))
BEGIN
	SELECT IDCABLESCHAT,
	       CABLESCHAT_NOMBRE,
	       CABLESCHAT_EMAIL,
	       CABLESCHAT_TRANSCRIPCION,
	       CABLESCHAT_FECHA
	  FROM CABLES_CHAT
	 WHERE IDCABLESCHAT = pkIDCABLESCHAT;
END
$$

--
-- Definition for procedure itiss_CABLES_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_CABLES_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CABLES_CHAT_upd(kvIDCABLESCHAT int(11),
	kvCABLESCHAT_NOMBRE varchar(100),
	kvCABLESCHAT_EMAIL varchar(100),
	kvCABLESCHAT_TRANSCRIPCION varchar(10000),
	kvCABLESCHAT_FECHA varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM CABLES_CHAT
	 WHERE IDCABLESCHAT = kvIDCABLESCHAT;
	IF lcount = 0 THEN
		INSERT INTO CABLES_CHAT(IDCABLESCHAT,
				CABLESCHAT_NOMBRE,
				CABLESCHAT_EMAIL,
				CABLESCHAT_TRANSCRIPCION,
				CABLESCHAT_FECHA)
		VALUES (kvIDCABLESCHAT,
				kvCABLESCHAT_NOMBRE,
				kvCABLESCHAT_EMAIL,
				kvCABLESCHAT_TRANSCRIPCION,
				kvCABLESCHAT_FECHA);
	ELSE
		UPDATE CABLES_CHAT
		SET IDCABLESCHAT = kvIDCABLESCHAT,
			CABLESCHAT_NOMBRE = kvCABLESCHAT_NOMBRE,
			CABLESCHAT_EMAIL = kvCABLESCHAT_EMAIL,
			CABLESCHAT_TRANSCRIPCION = kvCABLESCHAT_TRANSCRIPCION,
			CABLESCHAT_FECHA = kvCABLESCHAT_FECHA
		WHERE IDCABLESCHAT = kvIDCABLESCHAT;
	END IF;
END
$$

--
-- Definition for procedure itiss_COMUNAS_del
--
DROP PROCEDURE IF EXISTS itiss_COMUNAS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_COMUNAS_del(pkIDCOMUNAS int(11))
BEGIN
	DELETE FROM COMUNAS
	 WHERE IDCOMUNAS = pkIDCOMUNAS;
END
$$

--
-- Definition for procedure itiss_COMUNAS_lst
--
DROP PROCEDURE IF EXISTS itiss_COMUNAS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_COMUNAS_lst()
BEGIN
	SELECT IDCOMUNAS,
	       IDPROVINCIAS,
	       COMUNA_NOMBRE
	  FROM COMUNAS;
END
$$

--
-- Definition for procedure itiss_COMUNAS_sel
--
DROP PROCEDURE IF EXISTS itiss_COMUNAS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_COMUNAS_sel(pkIDCOMUNAS int(11))
BEGIN
	SELECT IDCOMUNAS,
	       IDPROVINCIAS,
	       COMUNA_NOMBRE
	  FROM COMUNAS
	 WHERE IDCOMUNAS = pkIDCOMUNAS;
END
$$

--
-- Definition for procedure itiss_COMUNAS_upd
--
DROP PROCEDURE IF EXISTS itiss_COMUNAS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_COMUNAS_upd(kvIDCOMUNAS int(11),
	kvIDPROVINCIAS int(11),
	kvCOMUNA_NOMBRE varchar(100))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM COMUNAS
	 WHERE IDCOMUNAS = kvIDCOMUNAS;
	IF lcount = 0 THEN
		INSERT INTO COMUNAS(IDCOMUNAS,
				IDPROVINCIAS,
				COMUNA_NOMBRE)
		VALUES (kvIDCOMUNAS,
				kvIDPROVINCIAS,
				kvCOMUNA_NOMBRE);
	ELSE
		UPDATE COMUNAS
		SET IDCOMUNAS = kvIDCOMUNAS,
			IDPROVINCIAS = kvIDPROVINCIAS,
			COMUNA_NOMBRE = kvCOMUNA_NOMBRE
		WHERE IDCOMUNAS = kvIDCOMUNAS;
	END IF;
END
$$

--
-- Definition for procedure itiss_CONFIGURACION_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_CONFIGURACION_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONFIGURACION_CHAT_del(pkIDCONFCHAT int(11))
BEGIN
	DELETE FROM CONFIGURACION_CHAT
	 WHERE IDCONFCHAT = pkIDCONFCHAT;
END
$$

--
-- Definition for procedure itiss_CONFIGURACION_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_CONFIGURACION_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONFIGURACION_CHAT_lst()
BEGIN
	SELECT IDCONFCHAT,
	       CONFCHAT_EMAIL,
	       CONFCHAT_CLIENTEREF,
	       CONFCHAT_ADMINREF,
	       CONFCHAT_CONVOREF,
	       CONFCHAT_INACTIVO,
	       CONFCHAT_FIN,
	       CONFCHAT_REMOVER,
	       CONFCHAT_TITULO,
	       CONFCHAT_NODISPMENSAJE,
	       CONFCHAT_INICIOMENSAJE,
	       CONFCHAT_BIENVENIDA,
	       CONFCHAT_DEJAMENSAJE,
	       CONFCHAT_GRACIASMENSAJE
	  FROM CONFIGURACION_CHAT;
END
$$

--
-- Definition for procedure itiss_CONFIGURACION_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_CONFIGURACION_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONFIGURACION_CHAT_sel(pkIDCONFCHAT int(11))
BEGIN
	SELECT IDCONFCHAT,
	       CONFCHAT_EMAIL,
	       CONFCHAT_CLIENTEREF,
	       CONFCHAT_ADMINREF,
	       CONFCHAT_CONVOREF,
	       CONFCHAT_INACTIVO,
	       CONFCHAT_FIN,
	       CONFCHAT_REMOVER,
	       CONFCHAT_TITULO,
	       CONFCHAT_NODISPMENSAJE,
	       CONFCHAT_INICIOMENSAJE,
	       CONFCHAT_BIENVENIDA,
	       CONFCHAT_DEJAMENSAJE,
	       CONFCHAT_GRACIASMENSAJE
	  FROM CONFIGURACION_CHAT
	 WHERE IDCONFCHAT = pkIDCONFCHAT;
END
$$

--
-- Definition for procedure itiss_CONFIGURACION_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_CONFIGURACION_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONFIGURACION_CHAT_upd(kvIDCONFCHAT int(11),
	kvCONFCHAT_EMAIL varchar(200),
	kvCONFCHAT_CLIENTEREF int(11),
	kvCONFCHAT_ADMINREF int(11),
	kvCONFCHAT_CONVOREF int(11),
	kvCONFCHAT_INACTIVO int(11),
	kvCONFCHAT_FIN int(11),
	kvCONFCHAT_REMOVER int(11),
	kvCONFCHAT_TITULO varchar(200),
	kvCONFCHAT_NODISPMENSAJE varchar(1000),
	kvCONFCHAT_INICIOMENSAJE varchar(1000),
	kvCONFCHAT_BIENVENIDA varchar(500),
	kvCONFCHAT_DEJAMENSAJE varchar(1000),
	kvCONFCHAT_GRACIASMENSAJE varchar(1000))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM CONFIGURACION_CHAT
	 WHERE IDCONFCHAT = kvIDCONFCHAT;
	IF lcount = 0 THEN
		INSERT INTO CONFIGURACION_CHAT(IDCONFCHAT,
				CONFCHAT_EMAIL,
				CONFCHAT_CLIENTEREF,
				CONFCHAT_ADMINREF,
				CONFCHAT_CONVOREF,
				CONFCHAT_INACTIVO,
				CONFCHAT_FIN,
				CONFCHAT_REMOVER,
				CONFCHAT_TITULO,
				CONFCHAT_NODISPMENSAJE,
				CONFCHAT_INICIOMENSAJE,
				CONFCHAT_BIENVENIDA,
				CONFCHAT_DEJAMENSAJE,
				CONFCHAT_GRACIASMENSAJE)
		VALUES (kvIDCONFCHAT,
				kvCONFCHAT_EMAIL,
				kvCONFCHAT_CLIENTEREF,
				kvCONFCHAT_ADMINREF,
				kvCONFCHAT_CONVOREF,
				kvCONFCHAT_INACTIVO,
				kvCONFCHAT_FIN,
				kvCONFCHAT_REMOVER,
				kvCONFCHAT_TITULO,
				kvCONFCHAT_NODISPMENSAJE,
				kvCONFCHAT_INICIOMENSAJE,
				kvCONFCHAT_BIENVENIDA,
				kvCONFCHAT_DEJAMENSAJE,
				kvCONFCHAT_GRACIASMENSAJE);
	ELSE
		UPDATE CONFIGURACION_CHAT
		SET IDCONFCHAT = kvIDCONFCHAT,
			CONFCHAT_EMAIL = kvCONFCHAT_EMAIL,
			CONFCHAT_CLIENTEREF = kvCONFCHAT_CLIENTEREF,
			CONFCHAT_ADMINREF = kvCONFCHAT_ADMINREF,
			CONFCHAT_CONVOREF = kvCONFCHAT_CONVOREF,
			CONFCHAT_INACTIVO = kvCONFCHAT_INACTIVO,
			CONFCHAT_FIN = kvCONFCHAT_FIN,
			CONFCHAT_REMOVER = kvCONFCHAT_REMOVER,
			CONFCHAT_TITULO = kvCONFCHAT_TITULO,
			CONFCHAT_NODISPMENSAJE = kvCONFCHAT_NODISPMENSAJE,
			CONFCHAT_INICIOMENSAJE = kvCONFCHAT_INICIOMENSAJE,
			CONFCHAT_BIENVENIDA = kvCONFCHAT_BIENVENIDA,
			CONFCHAT_DEJAMENSAJE = kvCONFCHAT_DEJAMENSAJE,
			CONFCHAT_GRACIASMENSAJE = kvCONFCHAT_GRACIASMENSAJE
		WHERE IDCONFCHAT = kvIDCONFCHAT;
	END IF;
END
$$

--
-- Definition for procedure itiss_CONVERSACIONES_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_CONVERSACIONES_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONVERSACIONES_CHAT_del(pkIDCONVERSACIONCHAT int(11))
BEGIN
	DELETE FROM CONVERSACIONES_CHAT
	 WHERE IDCONVERSACIONCHAT = pkIDCONVERSACIONCHAT;
END
$$

--
-- Definition for procedure itiss_CONVERSACIONES_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_CONVERSACIONES_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONVERSACIONES_CHAT_lst()
BEGIN
	SELECT IDCONVERSACIONCHAT,
	       CONVERSACIONCHAT_NOMBRE,
	       CONVERSACIONCHAT_MENSAJE,
	       CONVERSACIONCHAT_USUARIO,
	       CONVERSACIONCHAT_CONVOID,
	       CONVERSACIONCHAT_TIEMPO,
	       CONVERSACIONCHAT_CLASE
	  FROM CONVERSACIONES_CHAT;
END
$$

--
-- Definition for procedure itiss_CONVERSACIONES_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_CONVERSACIONES_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONVERSACIONES_CHAT_sel(pkIDCONVERSACIONCHAT int(11))
BEGIN
	SELECT IDCONVERSACIONCHAT,
	       CONVERSACIONCHAT_NOMBRE,
	       CONVERSACIONCHAT_MENSAJE,
	       CONVERSACIONCHAT_USUARIO,
	       CONVERSACIONCHAT_CONVOID,
	       CONVERSACIONCHAT_TIEMPO,
	       CONVERSACIONCHAT_CLASE
	  FROM CONVERSACIONES_CHAT
	 WHERE IDCONVERSACIONCHAT = pkIDCONVERSACIONCHAT;
END
$$

--
-- Definition for procedure itiss_CONVERSACIONES_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_CONVERSACIONES_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_CONVERSACIONES_CHAT_upd(kvIDCONVERSACIONCHAT int(11),
	kvCONVERSACIONCHAT_NOMBRE varchar(100),
	kvCONVERSACIONCHAT_MENSAJE varchar(2000),
	kvCONVERSACIONCHAT_USUARIO varchar(100),
	kvCONVERSACIONCHAT_CONVOID int(11),
	kvCONVERSACIONCHAT_TIEMPO varchar(100),
	kvCONVERSACIONCHAT_CLASE varchar(20))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM CONVERSACIONES_CHAT
	 WHERE IDCONVERSACIONCHAT = kvIDCONVERSACIONCHAT;
	IF lcount = 0 THEN
		INSERT INTO CONVERSACIONES_CHAT(IDCONVERSACIONCHAT,
				CONVERSACIONCHAT_NOMBRE,
				CONVERSACIONCHAT_MENSAJE,
				CONVERSACIONCHAT_USUARIO,
				CONVERSACIONCHAT_CONVOID,
				CONVERSACIONCHAT_TIEMPO,
				CONVERSACIONCHAT_CLASE)
		VALUES (kvIDCONVERSACIONCHAT,
				kvCONVERSACIONCHAT_NOMBRE,
				kvCONVERSACIONCHAT_MENSAJE,
				kvCONVERSACIONCHAT_USUARIO,
				kvCONVERSACIONCHAT_CONVOID,
				kvCONVERSACIONCHAT_TIEMPO,
				kvCONVERSACIONCHAT_CLASE);
	ELSE
		UPDATE CONVERSACIONES_CHAT
		SET IDCONVERSACIONCHAT = kvIDCONVERSACIONCHAT,
			CONVERSACIONCHAT_NOMBRE = kvCONVERSACIONCHAT_NOMBRE,
			CONVERSACIONCHAT_MENSAJE = kvCONVERSACIONCHAT_MENSAJE,
			CONVERSACIONCHAT_USUARIO = kvCONVERSACIONCHAT_USUARIO,
			CONVERSACIONCHAT_CONVOID = kvCONVERSACIONCHAT_CONVOID,
			CONVERSACIONCHAT_TIEMPO = kvCONVERSACIONCHAT_TIEMPO,
			CONVERSACIONCHAT_CLASE = kvCONVERSACIONCHAT_CLASE
		WHERE IDCONVERSACIONCHAT = kvIDCONVERSACIONCHAT;
	END IF;
END
$$

--
-- Definition for procedure itiss_EDUCACION_del
--
DROP PROCEDURE IF EXISTS itiss_EDUCACION_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_EDUCACION_del(pkIDEDUCACION int(11))
BEGIN
	DELETE FROM EDUCACION
	 WHERE IDEDUCACION = pkIDEDUCACION;
END
$$

--
-- Definition for procedure itiss_EDUCACION_lst
--
DROP PROCEDURE IF EXISTS itiss_EDUCACION_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_EDUCACION_lst()
BEGIN
	SELECT IDEDUCACION,
	       IDPONDEDUCACION,
	       IDPOSTULACION,
	       HIJOSEDSUP_TRABAJADOR,
	       TIPO_POSTULANTE,
	       RUT_POSTULANTE,
	       DV_POSTULANTE,
	       NOMBRE_POSTULANTE,
	       PATERNO_POSTULANTE,
	       MATERNO_POSTULANTE,
	       ENSENA_POSTULANTE,
	       ANTENSENA_POSTULANTE,
	       PROMEDIONOTAS_POSTULANTE,
	       ESTABLECIMIENTO_POSTULANTE,
	       CARRERA_POSTULANTE,
	       NACIMIENTO_POSTULANTE,
	       SEXO_POSTULANTE,
	       ARCHIVO_CONTRATO,
	       ARCHIVO_LIQ1,
	       ARCHIVO_LIQ2,
	       ARCHIVO_LIQ3,
	       ARCHIVO_CERT_ALUMNO,
	       ARCHIVO_CONC_NOTAS,
	       ARCHIVO_CERT_NAC,
	       ARCHIVO_CERT_MATRI,
	       ARCHIVO_DECLARA,
	       ARCHIVO_SEGUROCOMP,
	       ACEPTA_EDUCACION
	  FROM EDUCACION;
END
$$

--
-- Definition for procedure itiss_EDUCACION_sel
--
DROP PROCEDURE IF EXISTS itiss_EDUCACION_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_EDUCACION_sel(pkIDEDUCACION int(11))
BEGIN
	SELECT IDEDUCACION,
	       IDPONDEDUCACION,
	       IDPOSTULACION,
	       HIJOSEDSUP_TRABAJADOR,
	       TIPO_POSTULANTE,
	       RUT_POSTULANTE,
	       DV_POSTULANTE,
	       NOMBRE_POSTULANTE,
	       PATERNO_POSTULANTE,
	       MATERNO_POSTULANTE,
	       ENSENA_POSTULANTE,
	       ANTENSENA_POSTULANTE,
	       PROMEDIONOTAS_POSTULANTE,
	       ESTABLECIMIENTO_POSTULANTE,
	       CARRERA_POSTULANTE,
	       NACIMIENTO_POSTULANTE,
	       SEXO_POSTULANTE,
	       ARCHIVO_CONTRATO,
	       ARCHIVO_LIQ1,
	       ARCHIVO_LIQ2,
	       ARCHIVO_LIQ3,
	       ARCHIVO_CERT_ALUMNO,
	       ARCHIVO_CONC_NOTAS,
	       ARCHIVO_CERT_NAC,
	       ARCHIVO_CERT_MATRI,
	       ARCHIVO_DECLARA,
	       ARCHIVO_SEGUROCOMP,
	       ACEPTA_EDUCACION
	  FROM EDUCACION
	 WHERE IDEDUCACION = pkIDEDUCACION;
END
$$

--
-- Definition for procedure itiss_EDUCACION_upd
--
DROP PROCEDURE IF EXISTS itiss_EDUCACION_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_EDUCACION_upd(
  IN   kvIDEDUCACION                 int,
  IN   kvIDPONDEDUCACION             int,
  IN   kvIDPOSTULACION               int,
  IN   kvHIJOSEDSUP_TRABAJADOR       varchar(255),
  IN   kvTIPO_POSTULANTE             varchar(255),
  IN   kvRUT_POSTULANTE              varchar(12),
  IN   kvDV_POSTULANTE               varchar(1),
  IN   kvNOMBRE_POSTULANTE           varchar(255),
  IN   kvPATERNO_POSTULANTE          varchar(255),
  IN   kvMATERNO_POSTULANTE          varchar(255),
  IN   kvENSENA_POSTULANTE           varchar(255),
  IN   kvANTENSENA_POSTULANTE        varchar(255),
  IN   kvPROMEDIONOTAS_POSTULANTE    varchar(5),
  IN   kvESTABLECIMIENTO_POSTULANTE  varchar(255),
  IN   kvCARRERA_POSTULANTE          varchar(255),
  IN   kvNACIMIENTO_POSTULANTE       date,
  IN   kvSEXO_POSTULANTE             varchar(1),
  IN   kvARCHIVO_CONTRATO            longblob,
  IN   kvARCHIVO_LIQ1                longblob,
  IN   kvARCHIVO_LIQ2                longblob,
  IN   kvARCHIVO_LIQ3                longblob,
  IN   kvARCHIVO_CERT_ALUMNO         longblob,
  IN   kvARCHIVO_CONC_NOTAS          longblob,
  IN   kvARCHIVO_CERT_NAC            longblob,
  IN   kvARCHIVO_CERT_MATRI          longblob,
  IN   kvARCHIVO_DECLARA             longblob,
  IN   kvARCHIVO_SEGUROCOMP          longblob,
  IN   kvACEPTA_EDUCACION            tinyint(1),
  OUT  resultado                     int
)
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM EDUCACION
	 WHERE IDEDUCACION = kvIDEDUCACION;
	IF lcount = 0 THEN
		INSERT INTO EDUCACION(IDEDUCACION,
				IDPONDEDUCACION,
				IDPOSTULACION,
				HIJOSEDSUP_TRABAJADOR,
				TIPO_POSTULANTE,
				RUT_POSTULANTE,
				DV_POSTULANTE,
				NOMBRE_POSTULANTE,
				PATERNO_POSTULANTE,
				MATERNO_POSTULANTE,
				ENSENA_POSTULANTE,
				ANTENSENA_POSTULANTE,
				PROMEDIONOTAS_POSTULANTE,
				ESTABLECIMIENTO_POSTULANTE,
				CARRERA_POSTULANTE,
				NACIMIENTO_POSTULANTE,
				SEXO_POSTULANTE,
				ARCHIVO_CONTRATO,
				ARCHIVO_LIQ1,
				ARCHIVO_LIQ2,
				ARCHIVO_LIQ3,
				ARCHIVO_CERT_ALUMNO,
				ARCHIVO_CONC_NOTAS,
				ARCHIVO_CERT_NAC,
				ARCHIVO_CERT_MATRI,
				ARCHIVO_DECLARA,
				ARCHIVO_SEGUROCOMP,
				ACEPTA_EDUCACION)
		VALUES (kvIDEDUCACION,
				kvIDPONDEDUCACION,
				kvIDPOSTULACION,
				kvHIJOSEDSUP_TRABAJADOR,
				kvTIPO_POSTULANTE,
				kvRUT_POSTULANTE,
				kvDV_POSTULANTE,
				kvNOMBRE_POSTULANTE,
				kvPATERNO_POSTULANTE,
				kvMATERNO_POSTULANTE,
				kvENSENA_POSTULANTE,
				kvANTENSENA_POSTULANTE,
				kvPROMEDIONOTAS_POSTULANTE,
				kvESTABLECIMIENTO_POSTULANTE,
				kvCARRERA_POSTULANTE,
				kvNACIMIENTO_POSTULANTE,
				kvSEXO_POSTULANTE,
				kvARCHIVO_CONTRATO,
				kvARCHIVO_LIQ1,
				kvARCHIVO_LIQ2,
				kvARCHIVO_LIQ3,
				kvARCHIVO_CERT_ALUMNO,
				kvARCHIVO_CONC_NOTAS,
				kvARCHIVO_CERT_NAC,
				kvARCHIVO_CERT_MATRI,
				kvARCHIVO_DECLARA,
				kvARCHIVO_SEGUROCOMP,
				kvACEPTA_EDUCACION);
				set resultado = 1;
	ELSE
		UPDATE EDUCACION
		SET HIJOSEDSUP_TRABAJADOR = COALESCE(kvHIJOSEDSUP_TRABAJADOR,HIJOSEDSUP_TRABAJADOR),
			TIPO_POSTULANTE = COALESCE(kvTIPO_POSTULANTE,TIPO_POSTULANTE),
			RUT_POSTULANTE = COALESCE(kvRUT_POSTULANTE,RUT_POSTULANTE),
			DV_POSTULANTE = COALESCE(kvDV_POSTULANTE,DV_POSTULANTE),
			NOMBRE_POSTULANTE = COALESCE(kvNOMBRE_POSTULANTE,NOMBRE_POSTULANTE),
			PATERNO_POSTULANTE = COALESCE(kvPATERNO_POSTULANTE,PATERNO_POSTULANTE),
			MATERNO_POSTULANTE = COALESCE(kvMATERNO_POSTULANTE,MATERNO_POSTULANTE),
			ENSENA_POSTULANTE = COALESCE(kvENSENA_POSTULANTE,ENSENA_POSTULANTE),
			ANTENSENA_POSTULANTE = COALESCE(kvANTENSENA_POSTULANTE,ANTENSENA_POSTULANTE),
			PROMEDIONOTAS_POSTULANTE = COALESCE(kvPROMEDIONOTAS_POSTULANTE,PROMEDIONOTAS_POSTULANTE),
			ESTABLECIMIENTO_POSTULANTE = COALESCE(kvESTABLECIMIENTO_POSTULANTE,ESTABLECIMIENTO_POSTULANTE),
			CARRERA_POSTULANTE = COALESCE(kvCARRERA_POSTULANTE,CARRERA_POSTULANTE),
			NACIMIENTO_POSTULANTE = COALESCE(kvNACIMIENTO_POSTULANTE,NACIMIENTO_POSTULANTE),
			SEXO_POSTULANTE = COALESCE(kvSEXO_POSTULANTE,SEXO_POSTULANTE),
			ARCHIVO_CONTRATO = COALESCE(kvARCHIVO_CONTRATO,ARCHIVO_CONTRATO),
			ARCHIVO_LIQ1 = COALESCE(kvARCHIVO_LIQ1,ARCHIVO_LIQ1),
			ARCHIVO_LIQ2 = COALESCE(kvARCHIVO_LIQ2,ARCHIVO_LIQ2),
			ARCHIVO_LIQ3 = COALESCE(kvARCHIVO_LIQ3,ARCHIVO_LIQ3),
			ARCHIVO_CERT_ALUMNO = COALESCE(kvARCHIVO_CERT_ALUMNO,ARCHIVO_CERT_ALUMNO),
			ARCHIVO_CONC_NOTAS = COALESCE(kvARCHIVO_CONC_NOTAS,ARCHIVO_CONC_NOTAS),
			ARCHIVO_CERT_NAC = COALESCE(kvARCHIVO_CERT_NAC,ARCHIVO_CERT_NAC),
			ARCHIVO_CERT_MATRI = COALESCE(kvARCHIVO_CERT_MATRI,ARCHIVO_CERT_MATRI),
			ARCHIVO_DECLARA = COALESCE(kvARCHIVO_DECLARA,ARCHIVO_DECLARA),
			ARCHIVO_SEGUROCOMP = COALESCE(kvARCHIVO_SEGUROCOMP,ARCHIVO_SEGUROCOMP),
			ACEPTA_EDUCACION = COALESCE(kvACEPTA_EDUCACION,ACEPTA_EDUCACION)
		WHERE IDEDUCACION = kvIDEDUCACION;
		set resultado = 2;
	END IF;
END
$$

--
-- Definition for procedure itiss_ESTADO_BECA_del
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_BECA_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_BECA_del(pkIDESTADOBECA int(11))
BEGIN
	DELETE FROM ESTADO_BECA
	 WHERE IDESTADOBECA = pkIDESTADOBECA;
END
$$

--
-- Definition for procedure itiss_ESTADO_BECA_lst
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_BECA_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_BECA_lst()
BEGIN
	SELECT IDESTADOBECA,
	       ESTADO_BECA
	  FROM ESTADO_BECA;
END
$$

--
-- Definition for procedure itiss_ESTADO_BECA_sel
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_BECA_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_BECA_sel(pkIDESTADOBECA int(11))
BEGIN
	SELECT IDESTADOBECA,
	       ESTADO_BECA
	  FROM ESTADO_BECA
	 WHERE IDESTADOBECA = pkIDESTADOBECA;
END
$$

--
-- Definition for procedure itiss_ESTADO_BECA_upd
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_BECA_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_BECA_upd(kvIDESTADOBECA int(11),
	kvESTADO_BECA varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM ESTADO_BECA
	 WHERE IDESTADOBECA = kvIDESTADOBECA;
	IF lcount = 0 THEN
		INSERT INTO ESTADO_BECA(IDESTADOBECA,
				ESTADO_BECA)
		VALUES (kvIDESTADOBECA,
				kvESTADO_BECA);
	ELSE
		UPDATE ESTADO_BECA
		SET IDESTADOBECA = kvIDESTADOBECA,
			ESTADO_BECA = kvESTADO_BECA
		WHERE IDESTADOBECA = kvIDESTADOBECA;
	END IF;
END
$$

--
-- Definition for procedure itiss_ESTADO_USUARIO_del
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_USUARIO_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_USUARIO_del(pkIDESTADOUSUARIO int(11))
BEGIN
	DELETE FROM ESTADO_USUARIO
	 WHERE IDESTADOUSUARIO = pkIDESTADOUSUARIO;
END
$$

--
-- Definition for procedure itiss_ESTADO_USUARIO_lst
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_USUARIO_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_USUARIO_lst()
BEGIN
	SELECT IDESTADOUSUARIO,
	       USUARIO_ESTADO
	  FROM ESTADO_USUARIO;
END
$$

--
-- Definition for procedure itiss_ESTADO_USUARIO_sel
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_USUARIO_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_USUARIO_sel(pkIDESTADOUSUARIO int(11))
BEGIN
	SELECT IDESTADOUSUARIO,
	       USUARIO_ESTADO
	  FROM ESTADO_USUARIO
	 WHERE IDESTADOUSUARIO = pkIDESTADOUSUARIO;
END
$$

--
-- Definition for procedure itiss_ESTADO_USUARIO_upd
--
DROP PROCEDURE IF EXISTS itiss_ESTADO_USUARIO_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ESTADO_USUARIO_upd(kvIDESTADOUSUARIO int(11),
	kvUSUARIO_ESTADO varchar(30))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM ESTADO_USUARIO
	 WHERE IDESTADOUSUARIO = kvIDESTADOUSUARIO;
	IF lcount = 0 THEN
		INSERT INTO ESTADO_USUARIO(IDESTADOUSUARIO,
				USUARIO_ESTADO)
		VALUES (kvIDESTADOUSUARIO,
				kvUSUARIO_ESTADO);
	ELSE
		UPDATE ESTADO_USUARIO
		SET IDESTADOUSUARIO = kvIDESTADOUSUARIO,
			USUARIO_ESTADO = kvUSUARIO_ESTADO
		WHERE IDESTADOUSUARIO = kvIDESTADOUSUARIO;
	END IF;
END
$$

--
-- Definition for procedure itiss_GESTION_del
--
DROP PROCEDURE IF EXISTS itiss_GESTION_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_GESTION_del(pkIDGESTION int(11))
BEGIN
	DELETE FROM GESTION
	 WHERE IDGESTION = pkIDGESTION;
END
$$

--
-- Definition for procedure itiss_GESTION_lst
--
DROP PROCEDURE IF EXISTS itiss_GESTION_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_GESTION_lst()
BEGIN
	SELECT IDGESTION,
	       IDTIPOS,
	       IDRESOLUCION,
	       IDMEDIOS,
	       IDPOSTULANTES,
	       IDSUBTIPO,
	       IDUSUARIO,
	       IDORIGENPUBLICIDAD,
	       FECHA_GESTION,
	       CONTACTO_GESTION,
	       FONO_GESTION,
	       GLOSA_GESTION
	  FROM GESTION;
END
$$

--
-- Definition for procedure itiss_GESTION_sel
--
DROP PROCEDURE IF EXISTS itiss_GESTION_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_GESTION_sel(pkIDGESTION int(11))
BEGIN
	SELECT IDGESTION,
	       IDTIPOS,
	       IDRESOLUCION,
	       IDMEDIOS,
	       IDPOSTULANTES,
	       IDSUBTIPO,
	       IDUSUARIO,
	       IDORIGENPUBLICIDAD,
	       FECHA_GESTION,
	       CONTACTO_GESTION,
	       FONO_GESTION,
	       GLOSA_GESTION
	  FROM GESTION
	 WHERE IDGESTION = pkIDGESTION;
END
$$

--
-- Definition for procedure itiss_GESTION_upd
--
DROP PROCEDURE IF EXISTS itiss_GESTION_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_GESTION_upd(kvIDGESTION int(11),
	kvIDTIPOS int(11),
	kvIDRESOLUCION int(11),
	kvIDMEDIOS int(11),
	kvIDPOSTULANTES int(11),
	kvIDSUBTIPO int(11),
	kvIDUSUARIO int(11),
	kvIDORIGENPUBLICIDAD int(11),
	kvFECHA_GESTION datetime,
	kvCONTACTO_GESTION varchar(150),
	kvFONO_GESTION varchar(15),
	kvGLOSA_GESTION varchar(5000))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM GESTION
	 WHERE IDGESTION = kvIDGESTION;
	IF lcount = 0 THEN
		INSERT INTO GESTION(IDGESTION,
				IDTIPOS,
				IDRESOLUCION,
				IDMEDIOS,
				IDPOSTULANTES,
				IDSUBTIPO,
				IDUSUARIO,
				IDORIGENPUBLICIDAD,
				FECHA_GESTION,
				CONTACTO_GESTION,
				FONO_GESTION,
				GLOSA_GESTION)
		VALUES (kvIDGESTION,
				kvIDTIPOS,
				kvIDRESOLUCION,
				kvIDMEDIOS,
				kvIDPOSTULANTES,
				kvIDSUBTIPO,
				kvIDUSUARIO,
				kvIDORIGENPUBLICIDAD,
				kvFECHA_GESTION,
				kvCONTACTO_GESTION,
				kvFONO_GESTION,
				kvGLOSA_GESTION);
	ELSE
		UPDATE GESTION
		SET IDGESTION = kvIDGESTION,
			IDTIPOS = kvIDTIPOS,
			IDRESOLUCION = kvIDRESOLUCION,
			IDMEDIOS = kvIDMEDIOS,
			IDPOSTULANTES = kvIDPOSTULANTES,
			IDSUBTIPO = kvIDSUBTIPO,
			IDUSUARIO = kvIDUSUARIO,
			IDORIGENPUBLICIDAD = kvIDORIGENPUBLICIDAD,
			FECHA_GESTION = kvFECHA_GESTION,
			CONTACTO_GESTION = kvCONTACTO_GESTION,
			FONO_GESTION = kvFONO_GESTION,
			GLOSA_GESTION = kvGLOSA_GESTION
		WHERE IDGESTION = kvIDGESTION;
	END IF;
END
$$

--
-- Definition for procedure itiss_MEDIOS_del
--
DROP PROCEDURE IF EXISTS itiss_MEDIOS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_MEDIOS_del(pkIDMEDIOS int(11))
BEGIN
	DELETE FROM MEDIOS
	 WHERE IDMEDIOS = pkIDMEDIOS;
END
$$

--
-- Definition for procedure itiss_MEDIOS_lst
--
DROP PROCEDURE IF EXISTS itiss_MEDIOS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_MEDIOS_lst()
BEGIN
	SELECT IDMEDIOS,
	       MEDIOS_NOMBRE
	  FROM MEDIOS;
END
$$

--
-- Definition for procedure itiss_MEDIOS_sel
--
DROP PROCEDURE IF EXISTS itiss_MEDIOS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_MEDIOS_sel(pkIDMEDIOS int(11))
BEGIN
	SELECT IDMEDIOS,
	       MEDIOS_NOMBRE
	  FROM MEDIOS
	 WHERE IDMEDIOS = pkIDMEDIOS;
END
$$

--
-- Definition for procedure itiss_MEDIOS_upd
--
DROP PROCEDURE IF EXISTS itiss_MEDIOS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_MEDIOS_upd(kvIDMEDIOS int(11),
	kvMEDIOS_NOMBRE varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM MEDIOS
	 WHERE IDMEDIOS = kvIDMEDIOS;
	IF lcount = 0 THEN
		INSERT INTO MEDIOS(IDMEDIOS,
				MEDIOS_NOMBRE)
		VALUES (kvIDMEDIOS,
				kvMEDIOS_NOMBRE);
	ELSE
		UPDATE MEDIOS
		SET IDMEDIOS = kvIDMEDIOS,
			MEDIOS_NOMBRE = kvMEDIOS_NOMBRE
		WHERE IDMEDIOS = kvIDMEDIOS;
	END IF;
END
$$

--
-- Definition for procedure itiss_OBSERVACIONES_QA_del
--
DROP PROCEDURE IF EXISTS itiss_OBSERVACIONES_QA_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_OBSERVACIONES_QA_del(pkIDOBSERVACIONES int(11))
BEGIN
	DELETE FROM OBSERVACIONES_QA
	 WHERE IDOBSERVACIONES = pkIDOBSERVACIONES;
END
$$

--
-- Definition for procedure itiss_OBSERVACIONES_QA_lst
--
DROP PROCEDURE IF EXISTS itiss_OBSERVACIONES_QA_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_OBSERVACIONES_QA_lst()
BEGIN
	SELECT IDOBSERVACIONES,
	       IDPOSTULACION,
	       IDUSUARIO,
	       IDTIPOBECA,
	       PASO1,
	       PASO2,
	       PASO3,
	       PASO4,
	       PASO5,
	       COMENTARIOS
	  FROM OBSERVACIONES_QA;
END
$$

--
-- Definition for procedure itiss_OBSERVACIONES_QA_sel
--
DROP PROCEDURE IF EXISTS itiss_OBSERVACIONES_QA_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_OBSERVACIONES_QA_sel(pkIDOBSERVACIONES int(11))
BEGIN
	SELECT IDOBSERVACIONES,
	       IDPOSTULACION,
	       IDUSUARIO,
	       IDTIPOBECA,
	       PASO1,
	       PASO2,
	       PASO3,
	       PASO4,
	       PASO5,
	       COMENTARIOS
	  FROM OBSERVACIONES_QA
	 WHERE IDOBSERVACIONES = pkIDOBSERVACIONES;
END
$$

--
-- Definition for procedure itiss_OBSERVACIONES_QA_upd
--
DROP PROCEDURE IF EXISTS itiss_OBSERVACIONES_QA_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_OBSERVACIONES_QA_upd(kvIDOBSERVACIONES int(11),
	kvIDPOSTULACION int(11),
	kvIDUSUARIO int(11),
	kvIDTIPOBECA int(11),
	kvPASO1 varchar(5000),
	kvPASO2 varchar(5000),
	kvPASO3 varchar(5000),
	kvPASO4 varchar(5000),
	kvPASO5 varchar(5000),
	kvCOMENTARIOS varchar(5000))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM OBSERVACIONES_QA
	 WHERE IDOBSERVACIONES = kvIDOBSERVACIONES;
	IF lcount = 0 THEN
		INSERT INTO OBSERVACIONES_QA(IDOBSERVACIONES,
				IDPOSTULACION,
				IDUSUARIO,
				IDTIPOBECA,
				PASO1,
				PASO2,
				PASO3,
				PASO4,
				PASO5,
				COMENTARIOS)
		VALUES (kvIDOBSERVACIONES,
				kvIDPOSTULACION,
				kvIDUSUARIO,
				kvIDTIPOBECA,
				kvPASO1,
				kvPASO2,
				kvPASO3,
				kvPASO4,
				kvPASO5,
				kvCOMENTARIOS);
	ELSE
		UPDATE OBSERVACIONES_QA
		SET IDOBSERVACIONES = kvIDOBSERVACIONES,
			IDPOSTULACION = kvIDPOSTULACION,
			IDUSUARIO = kvIDUSUARIO,
			IDTIPOBECA = kvIDTIPOBECA,
			PASO1 = kvPASO1,
			PASO2 = kvPASO2,
			PASO3 = kvPASO3,
			PASO4 = kvPASO4,
			PASO5 = kvPASO5,
			COMENTARIOS = kvCOMENTARIOS
		WHERE IDOBSERVACIONES = kvIDOBSERVACIONES;
	END IF;
END
$$

--
-- Definition for procedure itiss_ORIGEN_CREACION_del
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_CREACION_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_CREACION_del(pkIDORIGEN int(11))
BEGIN
	DELETE FROM ORIGEN_CREACION
	 WHERE IDORIGEN = pkIDORIGEN;
END
$$

--
-- Definition for procedure itiss_ORIGEN_CREACION_lst
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_CREACION_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_CREACION_lst()
BEGIN
	SELECT IDORIGEN,
	       ORIGEN_NOMBRE
	  FROM ORIGEN_CREACION;
END
$$

--
-- Definition for procedure itiss_ORIGEN_CREACION_sel
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_CREACION_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_CREACION_sel(pkIDORIGEN int(11))
BEGIN
	SELECT IDORIGEN,
	       ORIGEN_NOMBRE
	  FROM ORIGEN_CREACION
	 WHERE IDORIGEN = pkIDORIGEN;
END
$$

--
-- Definition for procedure itiss_ORIGEN_CREACION_upd
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_CREACION_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_CREACION_upd(kvIDORIGEN int(11),
	kvORIGEN_NOMBRE varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM ORIGEN_CREACION
	 WHERE IDORIGEN = kvIDORIGEN;
	IF lcount = 0 THEN
		INSERT INTO ORIGEN_CREACION(IDORIGEN,
				ORIGEN_NOMBRE)
		VALUES (kvIDORIGEN,
				kvORIGEN_NOMBRE);
	ELSE
		UPDATE ORIGEN_CREACION
		SET IDORIGEN = kvIDORIGEN,
			ORIGEN_NOMBRE = kvORIGEN_NOMBRE
		WHERE IDORIGEN = kvIDORIGEN;
	END IF;
END
$$

--
-- Definition for procedure itiss_ORIGEN_PUBLICITARIO_del
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_PUBLICITARIO_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_PUBLICITARIO_del(pkIDORIGENPUBLICIDAD int(11))
BEGIN
	DELETE FROM ORIGEN_PUBLICITARIO
	 WHERE IDORIGENPUBLICIDAD = pkIDORIGENPUBLICIDAD;
END
$$

--
-- Definition for procedure itiss_ORIGEN_PUBLICITARIO_lst
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_PUBLICITARIO_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_PUBLICITARIO_lst()
BEGIN
	SELECT IDORIGENPUBLICIDAD,
	       PUBLICIDAD_MEDIO
	  FROM ORIGEN_PUBLICITARIO;
END
$$

--
-- Definition for procedure itiss_ORIGEN_PUBLICITARIO_sel
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_PUBLICITARIO_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_PUBLICITARIO_sel(pkIDORIGENPUBLICIDAD int(11))
BEGIN
	SELECT IDORIGENPUBLICIDAD,
	       PUBLICIDAD_MEDIO
	  FROM ORIGEN_PUBLICITARIO
	 WHERE IDORIGENPUBLICIDAD = pkIDORIGENPUBLICIDAD;
END
$$

--
-- Definition for procedure itiss_ORIGEN_PUBLICITARIO_upd
--
DROP PROCEDURE IF EXISTS itiss_ORIGEN_PUBLICITARIO_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_ORIGEN_PUBLICITARIO_upd(kvIDORIGENPUBLICIDAD int(11),
	kvPUBLICIDAD_MEDIO varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM ORIGEN_PUBLICITARIO
	 WHERE IDORIGENPUBLICIDAD = kvIDORIGENPUBLICIDAD;
	IF lcount = 0 THEN
		INSERT INTO ORIGEN_PUBLICITARIO(IDORIGENPUBLICIDAD,
				PUBLICIDAD_MEDIO)
		VALUES (kvIDORIGENPUBLICIDAD,
				kvPUBLICIDAD_MEDIO);
	ELSE
		UPDATE ORIGEN_PUBLICITARIO
		SET IDORIGENPUBLICIDAD = kvIDORIGENPUBLICIDAD,
			PUBLICIDAD_MEDIO = kvPUBLICIDAD_MEDIO
		WHERE IDORIGENPUBLICIDAD = kvIDORIGENPUBLICIDAD;
	END IF;
END
$$

--
-- Definition for procedure itiss_PERFIL_USUARIO_del
--
DROP PROCEDURE IF EXISTS itiss_PERFIL_USUARIO_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PERFIL_USUARIO_del(pkIDPERFIL int(11))
BEGIN
	DELETE FROM PERFIL_USUARIO
	 WHERE IDPERFIL = pkIDPERFIL;
END
$$

--
-- Definition for procedure itiss_PERFIL_USUARIO_lst
--
DROP PROCEDURE IF EXISTS itiss_PERFIL_USUARIO_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PERFIL_USUARIO_lst()
BEGIN
	SELECT IDPERFIL,
	       USUARIO_PERFIL
	  FROM PERFIL_USUARIO;
END
$$

--
-- Definition for procedure itiss_PERFIL_USUARIO_sel
--
DROP PROCEDURE IF EXISTS itiss_PERFIL_USUARIO_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PERFIL_USUARIO_sel(pkIDPERFIL int(11))
BEGIN
	SELECT IDPERFIL,
	       USUARIO_PERFIL
	  FROM PERFIL_USUARIO
	 WHERE IDPERFIL = pkIDPERFIL;
END
$$

--
-- Definition for procedure itiss_PERFIL_USUARIO_upd
--
DROP PROCEDURE IF EXISTS itiss_PERFIL_USUARIO_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PERFIL_USUARIO_upd(kvIDPERFIL int(11),
	kvUSUARIO_PERFIL varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM PERFIL_USUARIO
	 WHERE IDPERFIL = kvIDPERFIL;
	IF lcount = 0 THEN
		INSERT INTO PERFIL_USUARIO(IDPERFIL,
				USUARIO_PERFIL)
		VALUES (kvIDPERFIL,
				kvUSUARIO_PERFIL);
	ELSE
		UPDATE PERFIL_USUARIO
		SET IDPERFIL = kvIDPERFIL,
			USUARIO_PERFIL = kvUSUARIO_PERFIL
		WHERE IDPERFIL = kvIDPERFIL;
	END IF;
END
$$

--
-- Definition for procedure itiss_PONDERACION_EDUCACION_del
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_EDUCACION_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_EDUCACION_del(pkIDPONDEDUCACION int(11))
BEGIN
	DELETE FROM PONDERACION_EDUCACION
	 WHERE IDPONDEDUCACION = pkIDPONDEDUCACION;
END
$$

--
-- Definition for procedure itiss_PONDERACION_EDUCACION_lst
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_EDUCACION_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_EDUCACION_lst()
BEGIN
	SELECT IDPONDEDUCACION
	  FROM PONDERACION_EDUCACION;
END
$$

--
-- Definition for procedure itiss_PONDERACION_EDUCACION_sel
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_EDUCACION_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_EDUCACION_sel(pkIDPONDEDUCACION int(11))
BEGIN
	SELECT IDPONDEDUCACION
	  FROM PONDERACION_EDUCACION
	 WHERE IDPONDEDUCACION = pkIDPONDEDUCACION;
END
$$

--
-- Definition for procedure itiss_PONDERACION_EDUCACION_upd
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_EDUCACION_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_EDUCACION_upd(	kvIDPONDEDUCACION int(11))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM PONDERACION_EDUCACION
	 WHERE IDPONDEDUCACION = kvIDPONDEDUCACION;
	IF lcount = 0 THEN
		INSERT INTO PONDERACION_EDUCACION(				IDPONDEDUCACION)
		VALUES (				kvIDPONDEDUCACION);
	ELSE
		UPDATE PONDERACION_EDUCACION
		SET 			IDPONDEDUCACION = kvIDPONDEDUCACION
		WHERE IDPONDEDUCACION = kvIDPONDEDUCACION;
	END IF;
END
$$

--
-- Definition for procedure itiss_PONDERACION_VIVIENDA_del
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_VIVIENDA_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_VIVIENDA_del(pkIDPONDVIVIENDA int(11))
BEGIN
	DELETE FROM PONDERACION_VIVIENDA
	 WHERE IDPONDVIVIENDA = pkIDPONDVIVIENDA;
END
$$

--
-- Definition for procedure itiss_PONDERACION_VIVIENDA_lst
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_VIVIENDA_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_VIVIENDA_lst()
BEGIN
	SELECT IDPONDVIVIENDA
	  FROM PONDERACION_VIVIENDA;
END
$$

--
-- Definition for procedure itiss_PONDERACION_VIVIENDA_sel
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_VIVIENDA_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_VIVIENDA_sel(pkIDPONDVIVIENDA int(11))
BEGIN
	SELECT IDPONDVIVIENDA
	  FROM PONDERACION_VIVIENDA
	 WHERE IDPONDVIVIENDA = pkIDPONDVIVIENDA;
END
$$

--
-- Definition for procedure itiss_PONDERACION_VIVIENDA_upd
--
DROP PROCEDURE IF EXISTS itiss_PONDERACION_VIVIENDA_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PONDERACION_VIVIENDA_upd(	kvIDPONDVIVIENDA int(11))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM PONDERACION_VIVIENDA
	 WHERE IDPONDVIVIENDA = kvIDPONDVIVIENDA;
	IF lcount = 0 THEN
		INSERT INTO PONDERACION_VIVIENDA(				IDPONDVIVIENDA)
		VALUES (				kvIDPONDVIVIENDA);
	ELSE
		UPDATE PONDERACION_VIVIENDA
		SET 			IDPONDVIVIENDA = kvIDPONDVIVIENDA
		WHERE IDPONDVIVIENDA = kvIDPONDVIVIENDA;
	END IF;
END
$$

--
-- Definition for procedure itiss_POSTULACIONES_WEB_del
--
DROP PROCEDURE IF EXISTS itiss_POSTULACIONES_WEB_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULACIONES_WEB_del(pkIDPOSTULACION int(11))
BEGIN
	DELETE FROM POSTULACIONES_WEB
	 WHERE IDPOSTULACION = pkIDPOSTULACION;
END
$$

--
-- Definition for procedure itiss_POSTULACIONES_WEB_lst
--
DROP PROCEDURE IF EXISTS itiss_POSTULACIONES_WEB_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULACIONES_WEB_lst()
BEGIN
	SELECT IDPOSTULACION,
	       IDESTADOBECA,
	       IDTIPOBECA,
	       RUT_EMPRESA,
	       DV_EMPRESA,
	       RAZONSOCIAL,
	       CONTRATO,
	       FECHA_CONTRATO,
	       DIVISION,
	       RUT_TRABAJADOR,
	       DV_TRABAJADOR,
	       NOMBRE_TRABAJADOR,
	       PATERNO_TRABAJADOR,
	       MATERNO_TRABAJADOR,
	       FECHA_NACIMIENTO,
	       SEXO,
	       DIRECCION,
	       NUM_DIRECCION,
	       DEPTO_DIRECCION,
	       VILLA_DIRECCION,
	       CORREO_TRABAJADOR,
	       FONO_TRABAJADOR,
	       CELU_TRABAJADOR,
	       REGION_TRABAJADOR,
	       COMUNA_TRABAJADOR,
	       PROVINCIA_TRABAJADOR,
	       RENTA_TRABAJADOR
	  FROM POSTULACIONES_WEB;
END
$$

--
-- Definition for procedure itiss_POSTULACIONES_WEB_sel
--
DROP PROCEDURE IF EXISTS itiss_POSTULACIONES_WEB_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULACIONES_WEB_sel(pkIDPOSTULACION int(11))
BEGIN
	SELECT IDPOSTULACION,
	       IDESTADOBECA,
	       IDTIPOBECA,
	       RUT_EMPRESA,
	       DV_EMPRESA,
	       RAZONSOCIAL,
	       CONTRATO,
	       FECHA_CONTRATO,
	       DIVISION,
	       RUT_TRABAJADOR,
	       DV_TRABAJADOR,
	       NOMBRE_TRABAJADOR,
	       PATERNO_TRABAJADOR,
	       MATERNO_TRABAJADOR,
	       FECHA_NACIMIENTO,
	       SEXO,
	       DIRECCION,
	       NUM_DIRECCION,
	       DEPTO_DIRECCION,
	       VILLA_DIRECCION,
	       CORREO_TRABAJADOR,
	       FONO_TRABAJADOR,
	       CELU_TRABAJADOR,
	       REGION_TRABAJADOR,
	       COMUNA_TRABAJADOR,
	       PROVINCIA_TRABAJADOR,
	       RENTA_TRABAJADOR
	  FROM POSTULACIONES_WEB
	 WHERE IDPOSTULACION = pkIDPOSTULACION;
END
$$

--
-- Definition for procedure itiss_POSTULACIONES_WEB_upd
--
DROP PROCEDURE IF EXISTS itiss_POSTULACIONES_WEB_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULACIONES_WEB_upd(
  IN   `kvIDPOSTULACION`       int,
  IN   `kvIDESTADOBECA`        int,
  IN   `kvIDTIPOBECA`          int,
  IN   `kvRUT_EMPRESA`         varchar(12),
  IN   `kvDV_EMPRESA`          varchar(1),
  IN   `kvRAZONSOCIAL`         varchar(255),
  IN   `kvCONTRATO`            varchar(255),
  IN   `kvFECHA_CONTRATO`      date,
  IN   `kvDIVISION`            varchar(255),
  IN   `kvRUT_TRABAJADOR`      varchar(12),
  IN   `kvDV_TRABAJADOR`       varchar(1),
  IN   `kvNOMBRE_TRABAJADOR`   varchar(255),
  IN   `kvPATERNO_TRABAJADOR`  varchar(255),
  IN   `kvMATERNO_TRABAJADOR`  varchar(255),
  IN   `kvFECHA_NACIMIENTO`    date,
  IN   `kvSEXO`                varchar(1),
  IN   `kvDIRECCION`           varchar(255),
  IN   `kvNUM_DIRECCION`       varchar(255),
  IN   `kvDEPTO_DIRECCION`     varchar(255),
  IN   `kvVILLA_DIRECCION`     varchar(255),
  IN   `kvCORREO_TRABAJADOR`   varchar(255),
  IN   `kvFONO_TRABAJADOR`     varchar(255),
  IN   `kvCELU_TRABAJADOR`     varchar(255),
  IN   `kvREGION_TRABAJADOR`   int,
  IN   `kvCOMUNA_TRABAJADOR`   int,
  IN   `kvRENTA_TRABAJADOR`    int,
  IN   `kvESTADO_CIVIL`        varchar(255),
  IN   `kvINTEGRANTES`         int,
  IN   `kvTIPO_EMPRESA`        varchar(255),
  IN   `kvCORREO_EMPRESA`      varchar(255),
  IN   `kvFONO_EMPRESA`        varchar(255),
  OUT  `resultado`             int
)
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM POSTULACIONES_WEB
	 WHERE IDPOSTULACION = kvIDPOSTULACION AND IDTIPOBECA = kvIDTIPOBECA;
	IF lcount = 0 THEN
		INSERT INTO POSTULACIONES_WEB(IDPOSTULACION,
				IDESTADOBECA,
				IDTIPOBECA,
				RUT_EMPRESA,
				DV_EMPRESA,
				RAZONSOCIAL,
				CONTRATO,
				FECHA_CONTRATO,
				DIVISION,
				RUT_TRABAJADOR,
				DV_TRABAJADOR,
				NOMBRE_TRABAJADOR,
				PATERNO_TRABAJADOR,
				MATERNO_TRABAJADOR,
				FECHA_NACIMIENTO,
				SEXO,
				DIRECCION,
				NUM_DIRECCION,
				DEPTO_DIRECCION,
				VILLA_DIRECCION,
				CORREO_TRABAJADOR,
				FONO_TRABAJADOR,
				CELU_TRABAJADOR,
				REGION_TRABAJADOR,
				COMUNA_TRABAJADOR,
				RENTA_TRABAJADOR)
		VALUES (NULL,
				kvIDESTADOBECA,
				kvIDTIPOBECA,
				kvRUT_EMPRESA,
				kvDV_EMPRESA,
				kvRAZONSOCIAL,
				kvCONTRATO,
				kvFECHA_CONTRATO,
				kvDIVISION,
				kvRUT_TRABAJADOR,
				kvDV_TRABAJADOR,
				kvNOMBRE_TRABAJADOR,
				kvPATERNO_TRABAJADOR,
				kvMATERNO_TRABAJADOR,
				kvFECHA_NACIMIENTO,
				kvSEXO,
				kvDIRECCION,
				kvNUM_DIRECCION,
				kvDEPTO_DIRECCION,
				kvVILLA_DIRECCION,
				kvCORREO_TRABAJADOR,
				kvFONO_TRABAJADOR,
				kvCELU_TRABAJADOR,
				kvREGION_TRABAJADOR,
				kvCOMUNA_TRABAJADOR,
				kvRENTA_TRABAJADOR);
				set resultado = 1;
	ELSE
		UPDATE POSTULACIONES_WEB
		SET IDESTADOBECA =  COALESCE(kvIDESTADOBECA,IDESTADOBECA),
			RUT_EMPRESA =  COALESCE(kvRUT_EMPRESA,RUT_EMPRESA),
			DV_EMPRESA =  COALESCE(kvDV_EMPRESA,DV_EMPRESA),
			RAZONSOCIAL =  COALESCE(kvRAZONSOCIAL,RAZONSOCIAL),
			CONTRATO =  COALESCE(kvCONTRATO,CONTRATO),
			FECHA_CONTRATO =  COALESCE(kvFECHA_CONTRATO,FECHA_CONTRATO),
			DIVISION =  COALESCE(kvDIVISION,DIVISION),
			RUT_TRABAJADOR = COALESCE(kvRUT_TRABAJADOR, RUT_TRABAJADOR),
			DV_TRABAJADOR = COALESCE(kvDV_TRABAJADOR, DV_TRABAJADOR),
			NOMBRE_TRABAJADOR =  COALESCE(kvNOMBRE_TRABAJADOR,NOMBRE_TRABAJADOR),
			PATERNO_TRABAJADOR =  COALESCE(kvPATERNO_TRABAJADOR,PATERNO_TRABAJADOR),
			MATERNO_TRABAJADOR =  COALESCE(kvMATERNO_TRABAJADOR,MATERNO_TRABAJADOR),
			FECHA_NACIMIENTO =  COALESCE(kvFECHA_NACIMIENTO,FECHA_NACIMIENTO),
			SEXO =  COALESCE(kvSEXO,SEXO),
			DIRECCION =  COALESCE(kvDIRECCION,DIRECCION),
			NUM_DIRECCION =  COALESCE(kvNUM_DIRECCION,NUM_DIRECCION),
			DEPTO_DIRECCION =  COALESCE(kvDEPTO_DIRECCION,DEPTO_DIRECCION),
			VILLA_DIRECCION =  COALESCE(kvVILLA_DIRECCION,VILLA_DIRECCION),
			CORREO_TRABAJADOR =  COALESCE(kvCORREO_TRABAJADOR,CORREO_TRABAJADOR),
			FONO_TRABAJADOR =  COALESCE(kvFONO_TRABAJADOR,FONO_TRABAJADOR),
			CELU_TRABAJADOR =  COALESCE(kvCELU_TRABAJADOR,CELU_TRABAJADOR),
			REGION_TRABAJADOR =  COALESCE(kvREGION_TRABAJADOR,REGION_TRABAJADOR),
			COMUNA_TRABAJADOR =  COALESCE(kvCOMUNA_TRABAJADOR,COMUNA_TRABAJADOR),
			RENTA_TRABAJADOR =  COALESCE(kvRENTA_TRABAJADOR,RENTA_TRABAJADOR),
			ESTADO_CIVIL =  COALESCE(kvESTADO_CIVIL,ESTADO_CIVIL),
			TIPO_EMPRESA =  COALESCE(kvTIPO_EMPRESA,TIPO_EMPRESA),
			CORREO_EMPRESA =  COALESCE(kvCORREO_EMPRESA,CORREO_EMPRESA),
			FONO_EMPRESA =  COALESCE(kvFONO_EMPRESA,FONO_EMPRESA),
			INTEGRANTES =  COALESCE(kvINTEGRANTES,INTEGRANTES)
		WHERE IDPOSTULACION = kvIDPOSTULACION;
		set resultado = 2;
	END IF;
END
$$

--
-- Definition for procedure itiss_POSTULANTES_del
--
DROP PROCEDURE IF EXISTS itiss_POSTULANTES_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULANTES_del(pkIDPOSTULANTES int(11))
BEGIN
	DELETE FROM POSTULANTES
	 WHERE IDPOSTULANTES = pkIDPOSTULANTES;
END
$$

--
-- Definition for procedure itiss_POSTULANTES_lst
--
DROP PROCEDURE IF EXISTS itiss_POSTULANTES_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULANTES_lst()
BEGIN
	SELECT IDPOSTULANTES,
	       IDORIGEN,
	       POSTULANTE_RUT,
	       POSTULANTE_FECHANAC,
	       POSTULANTE_NOMBRES,
	       POSTULANTE_CORREO,
	       POSTULANTE_FONO,
	       POSTULANTE_CELULAR
	  FROM POSTULANTES;
END
$$

--
-- Definition for procedure itiss_POSTULANTES_sel
--
DROP PROCEDURE IF EXISTS itiss_POSTULANTES_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULANTES_sel(pkIDPOSTULANTES int(11))
BEGIN
	SELECT IDPOSTULANTES,
	       IDORIGEN,
	       POSTULANTE_RUT,
	       POSTULANTE_FECHANAC,
	       POSTULANTE_NOMBRES,
	       POSTULANTE_CORREO,
	       POSTULANTE_FONO,
	       POSTULANTE_CELULAR
	  FROM POSTULANTES
	 WHERE IDPOSTULANTES = pkIDPOSTULANTES;
END
$$

--
-- Definition for procedure itiss_POSTULANTES_upd
--
DROP PROCEDURE IF EXISTS itiss_POSTULANTES_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_POSTULANTES_upd(kvIDPOSTULANTES int(11),
	kvIDORIGEN int(11),
	kvPOSTULANTE_RUT varchar(12),
	kvPOSTULANTE_FECHANAC datetime,
	kvPOSTULANTE_NOMBRES varchar(200),
	kvPOSTULANTE_CORREO varchar(200),
	kvPOSTULANTE_FONO varchar(20),
	kvPOSTULANTE_CELULAR varchar(20))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM POSTULANTES
	 WHERE IDPOSTULANTES = kvIDPOSTULANTES;
	IF lcount = 0 THEN
		INSERT INTO POSTULANTES(IDPOSTULANTES,
				IDORIGEN,
				POSTULANTE_RUT,
				POSTULANTE_FECHANAC,
				POSTULANTE_NOMBRES,
				POSTULANTE_CORREO,
				POSTULANTE_FONO,
				POSTULANTE_CELULAR)
		VALUES (kvIDPOSTULANTES,
				kvIDORIGEN,
				kvPOSTULANTE_RUT,
				kvPOSTULANTE_FECHANAC,
				kvPOSTULANTE_NOMBRES,
				kvPOSTULANTE_CORREO,
				kvPOSTULANTE_FONO,
				kvPOSTULANTE_CELULAR);
	ELSE
		UPDATE POSTULANTES
		SET IDPOSTULANTES = kvIDPOSTULANTES,
			IDORIGEN = kvIDORIGEN,
			POSTULANTE_RUT = kvPOSTULANTE_RUT,
			POSTULANTE_FECHANAC = kvPOSTULANTE_FECHANAC,
			POSTULANTE_NOMBRES = kvPOSTULANTE_NOMBRES,
			POSTULANTE_CORREO = kvPOSTULANTE_CORREO,
			POSTULANTE_FONO = kvPOSTULANTE_FONO,
			POSTULANTE_CELULAR = kvPOSTULANTE_CELULAR
		WHERE IDPOSTULANTES = kvIDPOSTULANTES;
	END IF;
END
$$

--
-- Definition for procedure itiss_PROVINCIAS_del
--
DROP PROCEDURE IF EXISTS itiss_PROVINCIAS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PROVINCIAS_del(pkIDPROVINCIAS int(11))
BEGIN
	DELETE FROM PROVINCIAS
	 WHERE IDPROVINCIAS = pkIDPROVINCIAS;
END
$$

--
-- Definition for procedure itiss_PROVINCIAS_lst
--
DROP PROCEDURE IF EXISTS itiss_PROVINCIAS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PROVINCIAS_lst()
BEGIN
	SELECT IDPROVINCIAS,
	       IDREGIONES,
	       PROVINCIA_NOMBRE
	  FROM PROVINCIAS;
END
$$

--
-- Definition for procedure itiss_PROVINCIAS_sel
--
DROP PROCEDURE IF EXISTS itiss_PROVINCIAS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PROVINCIAS_sel(pkIDPROVINCIAS int(11))
BEGIN
	SELECT IDPROVINCIAS,
	       IDREGIONES,
	       PROVINCIA_NOMBRE
	  FROM PROVINCIAS
	 WHERE IDPROVINCIAS = pkIDPROVINCIAS;
END
$$

--
-- Definition for procedure itiss_PROVINCIAS_upd
--
DROP PROCEDURE IF EXISTS itiss_PROVINCIAS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_PROVINCIAS_upd(kvIDPROVINCIAS int(11),
	kvIDREGIONES int(11),
	kvPROVINCIA_NOMBRE varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM PROVINCIAS
	 WHERE IDPROVINCIAS = kvIDPROVINCIAS;
	IF lcount = 0 THEN
		INSERT INTO PROVINCIAS(IDPROVINCIAS,
				IDREGIONES,
				PROVINCIA_NOMBRE)
		VALUES (kvIDPROVINCIAS,
				kvIDREGIONES,
				kvPROVINCIA_NOMBRE);
	ELSE
		UPDATE PROVINCIAS
		SET IDPROVINCIAS = kvIDPROVINCIAS,
			IDREGIONES = kvIDREGIONES,
			PROVINCIA_NOMBRE = kvPROVINCIA_NOMBRE
		WHERE IDPROVINCIAS = kvIDPROVINCIAS;
	END IF;
END
$$

--
-- Definition for procedure itiss_REGIONES_del
--
DROP PROCEDURE IF EXISTS itiss_REGIONES_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_REGIONES_del(pkIDREGIONES int(11))
BEGIN
	DELETE FROM REGIONES
	 WHERE IDREGIONES = pkIDREGIONES;
END
$$

--
-- Definition for procedure itiss_REGIONES_lst
--
DROP PROCEDURE IF EXISTS itiss_REGIONES_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_REGIONES_lst()
BEGIN
	SELECT IDREGIONES,
	       REGION_NOMBRE,
	       REGION_NUMERO
	  FROM REGIONES;
END
$$

--
-- Definition for procedure itiss_REGIONES_sel
--
DROP PROCEDURE IF EXISTS itiss_REGIONES_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_REGIONES_sel(pkIDREGIONES int(11))
BEGIN
	SELECT IDREGIONES,
	       REGION_NOMBRE,
	       REGION_NUMERO
	  FROM REGIONES
	 WHERE IDREGIONES = pkIDREGIONES;
END
$$

--
-- Definition for procedure itiss_REGIONES_upd
--
DROP PROCEDURE IF EXISTS itiss_REGIONES_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_REGIONES_upd(kvIDREGIONES int(11),
	kvREGION_NOMBRE varchar(50),
	kvREGION_NUMERO varchar(5))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM REGIONES
	 WHERE IDREGIONES = kvIDREGIONES;
	IF lcount = 0 THEN
		INSERT INTO REGIONES(IDREGIONES,
				REGION_NOMBRE,
				REGION_NUMERO)
		VALUES (kvIDREGIONES,
				kvREGION_NOMBRE,
				kvREGION_NUMERO);
	ELSE
		UPDATE REGIONES
		SET IDREGIONES = kvIDREGIONES,
			REGION_NOMBRE = kvREGION_NOMBRE,
			REGION_NUMERO = kvREGION_NUMERO
		WHERE IDREGIONES = kvIDREGIONES;
	END IF;
END
$$

--
-- Definition for procedure itiss_RESOLUCION_del
--
DROP PROCEDURE IF EXISTS itiss_RESOLUCION_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESOLUCION_del(pkIDRESOLUCION int(11))
BEGIN
	DELETE FROM RESOLUCION
	 WHERE IDRESOLUCION = pkIDRESOLUCION;
END
$$

--
-- Definition for procedure itiss_RESOLUCION_lst
--
DROP PROCEDURE IF EXISTS itiss_RESOLUCION_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESOLUCION_lst()
BEGIN
	SELECT IDRESOLUCION,
	       IDSUBTIPO,
	       RESOLUCION_NOMBRE
	  FROM RESOLUCION;
END
$$

--
-- Definition for procedure itiss_RESOLUCION_sel
--
DROP PROCEDURE IF EXISTS itiss_RESOLUCION_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESOLUCION_sel(pkIDRESOLUCION int(11))
BEGIN
	SELECT IDRESOLUCION,
	       IDSUBTIPO,
	       RESOLUCION_NOMBRE
	  FROM RESOLUCION
	 WHERE IDRESOLUCION = pkIDRESOLUCION;
END
$$

--
-- Definition for procedure itiss_RESOLUCION_upd
--
DROP PROCEDURE IF EXISTS itiss_RESOLUCION_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESOLUCION_upd(kvIDRESOLUCION int(11),
	kvIDSUBTIPO int(11),
	kvRESOLUCION_NOMBRE varchar(300))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM RESOLUCION
	 WHERE IDRESOLUCION = kvIDRESOLUCION;
	IF lcount = 0 THEN
		INSERT INTO RESOLUCION(IDRESOLUCION,
				IDSUBTIPO,
				RESOLUCION_NOMBRE)
		VALUES (kvIDRESOLUCION,
				kvIDSUBTIPO,
				kvRESOLUCION_NOMBRE);
	ELSE
		UPDATE RESOLUCION
		SET IDRESOLUCION = kvIDRESOLUCION,
			IDSUBTIPO = kvIDSUBTIPO,
			RESOLUCION_NOMBRE = kvRESOLUCION_NOMBRE
		WHERE IDRESOLUCION = kvIDRESOLUCION;
	END IF;
END
$$

--
-- Definition for procedure itiss_RESPUESTAS_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_RESPUESTAS_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESPUESTAS_CHAT_del(pkIDRESPUESTASCHAT int(11))
BEGIN
	DELETE FROM RESPUESTAS_CHAT
	 WHERE IDRESPUESTASCHAT = pkIDRESPUESTASCHAT;
END
$$

--
-- Definition for procedure itiss_RESPUESTAS_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_RESPUESTAS_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESPUESTAS_CHAT_lst()
BEGIN
	SELECT IDRESPUESTASCHAT,
	       RESPUESTACHAT_TITULO,
	       RESPUESTACHAT_MENSAJE
	  FROM RESPUESTAS_CHAT;
END
$$

--
-- Definition for procedure itiss_RESPUESTAS_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_RESPUESTAS_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESPUESTAS_CHAT_sel(pkIDRESPUESTASCHAT int(11))
BEGIN
	SELECT IDRESPUESTASCHAT,
	       RESPUESTACHAT_TITULO,
	       RESPUESTACHAT_MENSAJE
	  FROM RESPUESTAS_CHAT
	 WHERE IDRESPUESTASCHAT = pkIDRESPUESTASCHAT;
END
$$

--
-- Definition for procedure itiss_RESPUESTAS_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_RESPUESTAS_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_RESPUESTAS_CHAT_upd(kvIDRESPUESTASCHAT int(11),
	kvRESPUESTACHAT_TITULO varchar(200),
	kvRESPUESTACHAT_MENSAJE varchar(3000))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM RESPUESTAS_CHAT
	 WHERE IDRESPUESTASCHAT = kvIDRESPUESTASCHAT;
	IF lcount = 0 THEN
		INSERT INTO RESPUESTAS_CHAT(IDRESPUESTASCHAT,
				RESPUESTACHAT_TITULO,
				RESPUESTACHAT_MENSAJE)
		VALUES (kvIDRESPUESTASCHAT,
				kvRESPUESTACHAT_TITULO,
				kvRESPUESTACHAT_MENSAJE);
	ELSE
		UPDATE RESPUESTAS_CHAT
		SET IDRESPUESTASCHAT = kvIDRESPUESTASCHAT,
			RESPUESTACHAT_TITULO = kvRESPUESTACHAT_TITULO,
			RESPUESTACHAT_MENSAJE = kvRESPUESTACHAT_MENSAJE
		WHERE IDRESPUESTASCHAT = kvIDRESPUESTASCHAT;
	END IF;
END
$$

--
-- Definition for procedure itiss_SESSION_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_SESSION_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SESSION_CHAT_del(pkIDSESSIONCHAT int(11))
BEGIN
	DELETE FROM SESSION_CHAT
	 WHERE IDSESSIONCHAT = pkIDSESSIONCHAT;
END
$$

--
-- Definition for procedure itiss_SESSION_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_SESSION_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SESSION_CHAT_lst()
BEGIN
	SELECT IDSESSIONCHAT,
	       SESSIONCHAT_USUARIOID,
	       SESSIONCHAT_CONVOID,
	       SESSIONCHAT_INICIADO,
	       SESSIONCHAT_ESTADO,
	       SESSIONCHAT_FINALIZADO,
	       SESSIONCHAT_ACTUALIZADO,
	       SESSIONCHAT_CONTESTADO,
	       SESSIONCHAT_CONTACTO,
	       SESSIONCHAT_OCULTO
	  FROM SESSION_CHAT;
END
$$

--
-- Definition for procedure itiss_SESSION_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_SESSION_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SESSION_CHAT_sel(pkIDSESSIONCHAT int(11))
BEGIN
	SELECT IDSESSIONCHAT,
	       SESSIONCHAT_USUARIOID,
	       SESSIONCHAT_CONVOID,
	       SESSIONCHAT_INICIADO,
	       SESSIONCHAT_ESTADO,
	       SESSIONCHAT_FINALIZADO,
	       SESSIONCHAT_ACTUALIZADO,
	       SESSIONCHAT_CONTESTADO,
	       SESSIONCHAT_CONTACTO,
	       SESSIONCHAT_OCULTO
	  FROM SESSION_CHAT
	 WHERE IDSESSIONCHAT = pkIDSESSIONCHAT;
END
$$

--
-- Definition for procedure itiss_SESSION_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_SESSION_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SESSION_CHAT_upd(kvIDSESSIONCHAT int(11),
	kvSESSIONCHAT_USUARIOID varchar(200),
	kvSESSIONCHAT_CONVOID int(11),
	kvSESSIONCHAT_INICIADO int(11),
	kvSESSIONCHAT_ESTADO varchar(20),
	kvSESSIONCHAT_FINALIZADO int(11),
	kvSESSIONCHAT_ACTUALIZADO int(11),
	kvSESSIONCHAT_CONTESTADO int(11),
	kvSESSIONCHAT_CONTACTO varchar(3),
	kvSESSIONCHAT_OCULTO varchar(3))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM SESSION_CHAT
	 WHERE IDSESSIONCHAT = kvIDSESSIONCHAT;
	IF lcount = 0 THEN
		INSERT INTO SESSION_CHAT(IDSESSIONCHAT,
				SESSIONCHAT_USUARIOID,
				SESSIONCHAT_CONVOID,
				SESSIONCHAT_INICIADO,
				SESSIONCHAT_ESTADO,
				SESSIONCHAT_FINALIZADO,
				SESSIONCHAT_ACTUALIZADO,
				SESSIONCHAT_CONTESTADO,
				SESSIONCHAT_CONTACTO,
				SESSIONCHAT_OCULTO)
		VALUES (kvIDSESSIONCHAT,
				kvSESSIONCHAT_USUARIOID,
				kvSESSIONCHAT_CONVOID,
				kvSESSIONCHAT_INICIADO,
				kvSESSIONCHAT_ESTADO,
				kvSESSIONCHAT_FINALIZADO,
				kvSESSIONCHAT_ACTUALIZADO,
				kvSESSIONCHAT_CONTESTADO,
				kvSESSIONCHAT_CONTACTO,
				kvSESSIONCHAT_OCULTO);
	ELSE
		UPDATE SESSION_CHAT
		SET IDSESSIONCHAT = kvIDSESSIONCHAT,
			SESSIONCHAT_USUARIOID = kvSESSIONCHAT_USUARIOID,
			SESSIONCHAT_CONVOID = kvSESSIONCHAT_CONVOID,
			SESSIONCHAT_INICIADO = kvSESSIONCHAT_INICIADO,
			SESSIONCHAT_ESTADO = kvSESSIONCHAT_ESTADO,
			SESSIONCHAT_FINALIZADO = kvSESSIONCHAT_FINALIZADO,
			SESSIONCHAT_ACTUALIZADO = kvSESSIONCHAT_ACTUALIZADO,
			SESSIONCHAT_CONTESTADO = kvSESSIONCHAT_CONTESTADO,
			SESSIONCHAT_CONTACTO = kvSESSIONCHAT_CONTACTO,
			SESSIONCHAT_OCULTO = kvSESSIONCHAT_OCULTO
		WHERE IDSESSIONCHAT = kvIDSESSIONCHAT;
	END IF;
END
$$

--
-- Definition for procedure itiss_SUBTIPOS_del
--
DROP PROCEDURE IF EXISTS itiss_SUBTIPOS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SUBTIPOS_del(pkIDSUBTIPO int(11))
BEGIN
	DELETE FROM SUBTIPOS
	 WHERE IDSUBTIPO = pkIDSUBTIPO;
END
$$

--
-- Definition for procedure itiss_SUBTIPOS_lst
--
DROP PROCEDURE IF EXISTS itiss_SUBTIPOS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SUBTIPOS_lst()
BEGIN
	SELECT IDSUBTIPO,
	       IDTIPOS,
	       SUBTIPO_NOMBRE
	  FROM SUBTIPOS;
END
$$

--
-- Definition for procedure itiss_SUBTIPOS_sel
--
DROP PROCEDURE IF EXISTS itiss_SUBTIPOS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SUBTIPOS_sel(pkIDSUBTIPO int(11))
BEGIN
	SELECT IDSUBTIPO,
	       IDTIPOS,
	       SUBTIPO_NOMBRE
	  FROM SUBTIPOS
	 WHERE IDSUBTIPO = pkIDSUBTIPO;
END
$$

--
-- Definition for procedure itiss_SUBTIPOS_upd
--
DROP PROCEDURE IF EXISTS itiss_SUBTIPOS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_SUBTIPOS_upd(kvIDSUBTIPO int(11),
	kvIDTIPOS int(11),
	kvSUBTIPO_NOMBRE varchar(150))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM SUBTIPOS
	 WHERE IDSUBTIPO = kvIDSUBTIPO;
	IF lcount = 0 THEN
		INSERT INTO SUBTIPOS(IDSUBTIPO,
				IDTIPOS,
				SUBTIPO_NOMBRE)
		VALUES (kvIDSUBTIPO,
				kvIDTIPOS,
				kvSUBTIPO_NOMBRE);
	ELSE
		UPDATE SUBTIPOS
		SET IDSUBTIPO = kvIDSUBTIPO,
			IDTIPOS = kvIDTIPOS,
			SUBTIPO_NOMBRE = kvSUBTIPO_NOMBRE
		WHERE IDSUBTIPO = kvIDSUBTIPO;
	END IF;
END
$$

--
-- Definition for procedure itiss_TIPOS_del
--
DROP PROCEDURE IF EXISTS itiss_TIPOS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPOS_del(pkIDTIPOS int(11))
BEGIN
	DELETE FROM TIPOS
	 WHERE IDTIPOS = pkIDTIPOS;
END
$$

--
-- Definition for procedure itiss_TIPOS_lst
--
DROP PROCEDURE IF EXISTS itiss_TIPOS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPOS_lst()
BEGIN
	SELECT IDTIPOS,
	       TIPOS_NOMBRE
	  FROM TIPOS;
END
$$

--
-- Definition for procedure itiss_TIPOS_sel
--
DROP PROCEDURE IF EXISTS itiss_TIPOS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPOS_sel(pkIDTIPOS int(11))
BEGIN
	SELECT IDTIPOS,
	       TIPOS_NOMBRE
	  FROM TIPOS
	 WHERE IDTIPOS = pkIDTIPOS;
END
$$

--
-- Definition for procedure itiss_TIPOS_upd
--
DROP PROCEDURE IF EXISTS itiss_TIPOS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPOS_upd(kvIDTIPOS int(11),
	kvTIPOS_NOMBRE varchar(120))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM TIPOS
	 WHERE IDTIPOS = kvIDTIPOS;
	IF lcount = 0 THEN
		INSERT INTO TIPOS(IDTIPOS,
				TIPOS_NOMBRE)
		VALUES (kvIDTIPOS,
				kvTIPOS_NOMBRE);
	ELSE
		UPDATE TIPOS
		SET IDTIPOS = kvIDTIPOS,
			TIPOS_NOMBRE = kvTIPOS_NOMBRE
		WHERE IDTIPOS = kvIDTIPOS;
	END IF;
END
$$

--
-- Definition for procedure itiss_TIPO_BECA_del
--
DROP PROCEDURE IF EXISTS itiss_TIPO_BECA_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPO_BECA_del(pkIDTIPOBECA int(11))
BEGIN
	DELETE FROM TIPO_BECA
	 WHERE IDTIPOBECA = pkIDTIPOBECA;
END
$$

--
-- Definition for procedure itiss_TIPO_BECA_lst
--
DROP PROCEDURE IF EXISTS itiss_TIPO_BECA_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPO_BECA_lst()
BEGIN
	SELECT IDTIPOBECA,
	       TIPO_BECA
	  FROM TIPO_BECA;
END
$$

--
-- Definition for procedure itiss_TIPO_BECA_sel
--
DROP PROCEDURE IF EXISTS itiss_TIPO_BECA_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPO_BECA_sel(pkIDTIPOBECA int(11))
BEGIN
	SELECT IDTIPOBECA,
	       TIPO_BECA
	  FROM TIPO_BECA
	 WHERE IDTIPOBECA = pkIDTIPOBECA;
END
$$

--
-- Definition for procedure itiss_TIPO_BECA_upd
--
DROP PROCEDURE IF EXISTS itiss_TIPO_BECA_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TIPO_BECA_upd(kvIDTIPOBECA int(11),
	kvTIPO_BECA varchar(50))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM TIPO_BECA
	 WHERE IDTIPOBECA = kvIDTIPOBECA;
	IF lcount = 0 THEN
		INSERT INTO TIPO_BECA(IDTIPOBECA,
				TIPO_BECA)
		VALUES (kvIDTIPOBECA,
				kvTIPO_BECA);
	ELSE
		UPDATE TIPO_BECA
		SET IDTIPOBECA = kvIDTIPOBECA,
			TIPO_BECA = kvTIPO_BECA
		WHERE IDTIPOBECA = kvIDTIPOBECA;
	END IF;
END
$$

--
-- Definition for procedure itiss_TRANSCRIPCION_CHAT_del
--
DROP PROCEDURE IF EXISTS itiss_TRANSCRIPCION_CHAT_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TRANSCRIPCION_CHAT_del(pkIDTRANSCRIPCIONCHAT int(11))
BEGIN
	DELETE FROM TRANSCRIPCION_CHAT
	 WHERE IDTRANSCRIPCIONCHAT = pkIDTRANSCRIPCIONCHAT;
END
$$

--
-- Definition for procedure itiss_TRANSCRIPCION_CHAT_lst
--
DROP PROCEDURE IF EXISTS itiss_TRANSCRIPCION_CHAT_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TRANSCRIPCION_CHAT_lst()
BEGIN
	SELECT IDTRANSCRIPCIONCHAT,
	       TRANSCRIPCIONCHAT_NOMBRE,
	       TRANSCRIPCIONCHAT_MENSAJE,
	       TRANSCRIPCIONCHAT_USUARIO,
	       TRANSCRIPCIONCHAT_CONVOID,
	       TRANSCRIPCIONCHAT_TIEMPO,
	       TRANSCRIPCIONCHAT_CLASE
	  FROM TRANSCRIPCION_CHAT;
END
$$

--
-- Definition for procedure itiss_TRANSCRIPCION_CHAT_sel
--
DROP PROCEDURE IF EXISTS itiss_TRANSCRIPCION_CHAT_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TRANSCRIPCION_CHAT_sel(pkIDTRANSCRIPCIONCHAT int(11))
BEGIN
	SELECT IDTRANSCRIPCIONCHAT,
	       TRANSCRIPCIONCHAT_NOMBRE,
	       TRANSCRIPCIONCHAT_MENSAJE,
	       TRANSCRIPCIONCHAT_USUARIO,
	       TRANSCRIPCIONCHAT_CONVOID,
	       TRANSCRIPCIONCHAT_TIEMPO,
	       TRANSCRIPCIONCHAT_CLASE
	  FROM TRANSCRIPCION_CHAT
	 WHERE IDTRANSCRIPCIONCHAT = pkIDTRANSCRIPCIONCHAT;
END
$$

--
-- Definition for procedure itiss_TRANSCRIPCION_CHAT_upd
--
DROP PROCEDURE IF EXISTS itiss_TRANSCRIPCION_CHAT_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_TRANSCRIPCION_CHAT_upd(kvIDTRANSCRIPCIONCHAT int(11),
	kvTRANSCRIPCIONCHAT_NOMBRE varchar(100),
	kvTRANSCRIPCIONCHAT_MENSAJE varchar(2000),
	kvTRANSCRIPCIONCHAT_USUARIO varchar(100),
	kvTRANSCRIPCIONCHAT_CONVOID int(11),
	kvTRANSCRIPCIONCHAT_TIEMPO varchar(100),
	kvTRANSCRIPCIONCHAT_CLASE varchar(20))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM TRANSCRIPCION_CHAT
	 WHERE IDTRANSCRIPCIONCHAT = kvIDTRANSCRIPCIONCHAT;
	IF lcount = 0 THEN
		INSERT INTO TRANSCRIPCION_CHAT(IDTRANSCRIPCIONCHAT,
				TRANSCRIPCIONCHAT_NOMBRE,
				TRANSCRIPCIONCHAT_MENSAJE,
				TRANSCRIPCIONCHAT_USUARIO,
				TRANSCRIPCIONCHAT_CONVOID,
				TRANSCRIPCIONCHAT_TIEMPO,
				TRANSCRIPCIONCHAT_CLASE)
		VALUES (kvIDTRANSCRIPCIONCHAT,
				kvTRANSCRIPCIONCHAT_NOMBRE,
				kvTRANSCRIPCIONCHAT_MENSAJE,
				kvTRANSCRIPCIONCHAT_USUARIO,
				kvTRANSCRIPCIONCHAT_CONVOID,
				kvTRANSCRIPCIONCHAT_TIEMPO,
				kvTRANSCRIPCIONCHAT_CLASE);
	ELSE
		UPDATE TRANSCRIPCION_CHAT
		SET IDTRANSCRIPCIONCHAT = kvIDTRANSCRIPCIONCHAT,
			TRANSCRIPCIONCHAT_NOMBRE = kvTRANSCRIPCIONCHAT_NOMBRE,
			TRANSCRIPCIONCHAT_MENSAJE = kvTRANSCRIPCIONCHAT_MENSAJE,
			TRANSCRIPCIONCHAT_USUARIO = kvTRANSCRIPCIONCHAT_USUARIO,
			TRANSCRIPCIONCHAT_CONVOID = kvTRANSCRIPCIONCHAT_CONVOID,
			TRANSCRIPCIONCHAT_TIEMPO = kvTRANSCRIPCIONCHAT_TIEMPO,
			TRANSCRIPCIONCHAT_CLASE = kvTRANSCRIPCIONCHAT_CLASE
		WHERE IDTRANSCRIPCIONCHAT = kvIDTRANSCRIPCIONCHAT;
	END IF;
END
$$

--
-- Definition for procedure itiss_USUARIOS_del
--
DROP PROCEDURE IF EXISTS itiss_USUARIOS_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_USUARIOS_del(pkIDUSUARIO int(11))
BEGIN
	DELETE FROM USUARIOS
	 WHERE IDUSUARIO = pkIDUSUARIO;
END
$$

--
-- Definition for procedure itiss_USUARIOS_lst
--
DROP PROCEDURE IF EXISTS itiss_USUARIOS_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_USUARIOS_lst()
BEGIN
	SELECT IDUSUARIO,
	       IDPERFIL,
	       IDESTADOUSUARIO,
	       USUARIO_NOMBRE,
	       USAURIO_LOGIN,
	       USUARIO_CLAVE,
	       USAURIO_AREA,
	       USUARIO_RUT,
	       USUARIO_EMAIL,
	       USUARIO_DISPONIBLECHAT,
	       USUARIO_KEEPALIVE
	  FROM USUARIOS;
END
$$

--
-- Definition for procedure itiss_USUARIOS_sel
--
DROP PROCEDURE IF EXISTS itiss_USUARIOS_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_USUARIOS_sel(pkIDUSUARIO int(11))
BEGIN
	SELECT IDUSUARIO,
	       IDPERFIL,
	       IDESTADOUSUARIO,
	       USUARIO_NOMBRE,
	       USAURIO_LOGIN,
	       USUARIO_CLAVE,
	       USAURIO_AREA,
	       USUARIO_RUT,
	       USUARIO_EMAIL,
	       USUARIO_DISPONIBLECHAT,
	       USUARIO_KEEPALIVE
	  FROM USUARIOS
	 WHERE IDUSUARIO = pkIDUSUARIO;
END
$$

--
-- Definition for procedure itiss_USUARIOS_upd
--
DROP PROCEDURE IF EXISTS itiss_USUARIOS_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_USUARIOS_upd(kvIDUSUARIO int(11),
	kvIDPERFIL int(11),
	kvIDESTADOUSUARIO int(11),
	kvUSUARIO_NOMBRE varchar(100),
	kvUSAURIO_LOGIN varchar(15),
	kvUSUARIO_CLAVE varchar(8),
	kvUSAURIO_AREA varchar(30),
	kvUSUARIO_RUT varchar(10),
	kvUSUARIO_EMAIL varchar(50),
	kvUSUARIO_DISPONIBLECHAT varchar(3),
	kvUSUARIO_KEEPALIVE int(11))
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM USUARIOS
	 WHERE IDUSUARIO = kvIDUSUARIO;
	IF lcount = 0 THEN
		INSERT INTO USUARIOS(IDUSUARIO,
				IDPERFIL,
				IDESTADOUSUARIO,
				USUARIO_NOMBRE,
				USAURIO_LOGIN,
				USUARIO_CLAVE,
				USAURIO_AREA,
				USUARIO_RUT,
				USUARIO_EMAIL,
				USUARIO_DISPONIBLECHAT,
				USUARIO_KEEPALIVE)
		VALUES (kvIDUSUARIO,
				kvIDPERFIL,
				kvIDESTADOUSUARIO,
				kvUSUARIO_NOMBRE,
				kvUSAURIO_LOGIN,
				kvUSUARIO_CLAVE,
				kvUSAURIO_AREA,
				kvUSUARIO_RUT,
				kvUSUARIO_EMAIL,
				kvUSUARIO_DISPONIBLECHAT,
				kvUSUARIO_KEEPALIVE);
	ELSE
		UPDATE USUARIOS
		SET IDUSUARIO = kvIDUSUARIO,
			IDPERFIL = kvIDPERFIL,
			IDESTADOUSUARIO = kvIDESTADOUSUARIO,
			USUARIO_NOMBRE = kvUSUARIO_NOMBRE,
			USAURIO_LOGIN = kvUSAURIO_LOGIN,
			USUARIO_CLAVE = kvUSUARIO_CLAVE,
			USAURIO_AREA = kvUSAURIO_AREA,
			USUARIO_RUT = kvUSUARIO_RUT,
			USUARIO_EMAIL = kvUSUARIO_EMAIL,
			USUARIO_DISPONIBLECHAT = kvUSUARIO_DISPONIBLECHAT,
			USUARIO_KEEPALIVE = kvUSUARIO_KEEPALIVE
		WHERE IDUSUARIO = kvIDUSUARIO;
	END IF;
END
$$

--
-- Definition for procedure itiss_VIVIENDA_del
--
DROP PROCEDURE IF EXISTS itiss_VIVIENDA_del$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_VIVIENDA_del(pkIDVIVIENDA int(11))
BEGIN
	DELETE FROM VIVIENDA
	 WHERE IDVIVIENDA = pkIDVIVIENDA;
END
$$

--
-- Definition for procedure itiss_VIVIENDA_lst
--
DROP PROCEDURE IF EXISTS itiss_VIVIENDA_lst$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_VIVIENDA_lst()
BEGIN
	SELECT IDVIVIENDA,
	       IDPONDVIVIENDA,
	       IDPOSTULACION,
	       NUMERO_GRUPOFAM,
	       DESTINO_FONDO,
	       VIVIENDA_DIRECCION,
	       VIVIENDA_NUMERO,
	       VIVIENDA_DEPTO,
	       VIVIENDA_VILLA,
	       VIVIENDA_COMUNA,
	       VIVIENDA_CIUDAD,
	       VIVIENDA_PROVINCIA,
	       ACEPTA_VIVIENDA
	  FROM VIVIENDA;
END
$$

--
-- Definition for procedure itiss_VIVIENDA_sel
--
DROP PROCEDURE IF EXISTS itiss_VIVIENDA_sel$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_VIVIENDA_sel(pkIDVIVIENDA int(11))
BEGIN
	SELECT IDVIVIENDA,
	       IDPONDVIVIENDA,
	       IDPOSTULACION,
	       NUMERO_GRUPOFAM,
	       DESTINO_FONDO,
	       VIVIENDA_DIRECCION,
	       VIVIENDA_NUMERO,
	       VIVIENDA_DEPTO,
	       VIVIENDA_VILLA,
	       VIVIENDA_COMUNA,
	       VIVIENDA_CIUDAD,
	       VIVIENDA_PROVINCIA,
	       ACEPTA_VIVIENDA
	  FROM VIVIENDA
	 WHERE IDVIVIENDA = pkIDVIVIENDA;
END
$$

--
-- Definition for procedure itiss_VIVIENDA_upd
--
DROP PROCEDURE IF EXISTS itiss_VIVIENDA_upd$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_VIVIENDA_upd(
  IN   `kvIDVIVIENDA`           int,
  IN   `kvIDPONDVIVIENDA`       int,
  IN   `kvIDPOSTULACION`        int,
  IN   `kvDESTINO_FONDO`        varchar(255),
  IN   `kvVIVIENDA_DIRECCION`   varchar(255),
  IN   `kvVIVIENDA_NUMERO`      varchar(255),
  IN   `kvVIVIENDA_DEPTO`       varchar(255),
  IN   `kvVIVIENDA_VILLA`       varchar(255),
  IN   `kvVIVIENDA_COMUNA`      int,
  IN   `kvVIVIENDA_REGION`      int,
  IN   `kvACEPTA_VIVIENDA`      tinyint(1),
  IN   `kvARCHIVO_CONTRATO`     longblob,
  IN   `kvARCHIVO_LIQ1`         longblob,
  IN   `kvARCHIVO_LIQ2`         longblob,
  IN   `kvARCHIVO_LIQ3`         longblob,
  IN   `kvARCHIVO_PROMESA`      longblob,
  IN   `kvARCHIVO_PROPIEDAD`    longblob,
  IN   `kvARCHIVO_DEUDA`        longblob,
  IN   `kvARCHIVO_DECLARACION`  longblob,
  IN   `kvTIPO_DOCUMENTO`       varchar(255),
  OUT  `resultado`              int
)
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM VIVIENDA
	 WHERE IDVIVIENDA = kvIDVIVIENDA;
	IF lcount = 0 THEN
		INSERT INTO VIVIENDA(IDVIVIENDA,
				IDPONDVIVIENDA,
				IDPOSTULACION,
				DESTINO_FONDO,
				VIVIENDA_DIRECCION,
				VIVIENDA_NUMERO,
				VIVIENDA_DEPTO,
				VIVIENDA_VILLA,
				VIVIENDA_COMUNA,
				VIVIENDA_REGION,
				ACEPTA_VIVIENDA,
        TIPO_DOCUMENTO)
		VALUES (kvIDVIVIENDA,
				kvIDPONDVIVIENDA,
				kvIDPOSTULACION,
				kvDESTINO_FONDO,
				kvVIVIENDA_DIRECCION,
				kvVIVIENDA_NUMERO,
				kvVIVIENDA_DEPTO,
				kvVIVIENDA_VILLA,
				kvVIVIENDA_COMUNA,
				kvVIVIENDA_REGION,
				kvACEPTA_VIVIENDA,
        kvTIPO_DOCUMENTO);
				set resultado = 1;
	ELSE
		UPDATE VIVIENDA
		SET DESTINO_FONDO = COALESCE(kvDESTINO_FONDO,DESTINO_FONDO),
			VIVIENDA_DIRECCION = COALESCE(kvVIVIENDA_DIRECCION,VIVIENDA_DIRECCION),
			VIVIENDA_NUMERO =  COALESCE(kvVIVIENDA_NUMERO,VIVIENDA_NUMERO),
			VIVIENDA_DEPTO =  COALESCE(kvVIVIENDA_DEPTO,VIVIENDA_DEPTO),
			VIVIENDA_VILLA =  COALESCE(kvVIVIENDA_VILLA,VIVIENDA_VILLA),
			VIVIENDA_COMUNA =  COALESCE(kvVIVIENDA_COMUNA,VIVIENDA_COMUNA),
			VIVIENDA_REGION =  COALESCE(kvVIVIENDA_REGION,VIVIENDA_REGION),
			ARCHIVO_CONTRATO =  COALESCE(kvARCHIVO_CONTRATO,ARCHIVO_CONTRATO),
			ARCHIVO_LIQ1 =  COALESCE(kvARCHIVO_LIQ1,ARCHIVO_LIQ1),
			ARCHIVO_LIQ2 =  COALESCE(kvARCHIVO_LIQ2,ARCHIVO_LIQ2),
			ARCHIVO_LIQ3 =  COALESCE(kvARCHIVO_LIQ3,ARCHIVO_LIQ3),
			ARCHIVO_PROMESA =  COALESCE(kvARCHIVO_PROMESA,ARCHIVO_PROMESA),
			ARCHIVO_PROPIEDAD =  COALESCE(kvARCHIVO_PROPIEDAD,ARCHIVO_PROPIEDAD),
			ARCHIVO_DEUDA =  COALESCE(kvARCHIVO_DEUDA,ARCHIVO_DEUDA),
			ARCHIVO_DECLARACION =  COALESCE(kvARCHIVO_DECLARACION,ARCHIVO_DECLARACION),
			ACEPTA_VIVIENDA =  COALESCE(kvACEPTA_VIVIENDA,ACEPTA_VIVIENDA),
      TIPO_DOCUMENTO =  COALESCE(kvTIPO_DOCUMENTO,TIPO_DOCUMENTO) 
		WHERE IDVIVIENDA = kvIDVIVIENDA;
		set resultado = 2;
	END IF;
END
$$

--
-- Definition for procedure itiss_VIVIENDA_upd_2
--
DROP PROCEDURE IF EXISTS itiss_VIVIENDA_upd_2$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE itiss_VIVIENDA_upd_2(
  IN   `kvIDVIVIENDA`           int,
  IN   `kvIDPONDVIVIENDA`       int,
  IN   `kvIDPOSTULACION`        int,
  IN   `kvDESTINO_FONDO`        varchar(255),
  IN   `kvVIVIENDA_DIRECCION`   varchar(255),
  IN   `kvVIVIENDA_NUMERO`      varchar(255),
  IN   `kvVIVIENDA_DEPTO`       varchar(255),
  IN   `kvVIVIENDA_VILLA`       varchar(255),
  IN   `kvVIVIENDA_COMUNA`      int,
  IN   `kvVIVIENDA_REGION`      int,
  IN   `kvACEPTA_VIVIENDA`      tinyint(1),
  IN   `kvARCHIVO_CONTRATO`     longblob,
  IN   `kvARCHIVO_LIQ1`         longblob,
  IN   `kvARCHIVO_LIQ2`         longblob,
  IN   `kvARCHIVO_LIQ3`         longblob,
  IN   `kvARCHIVO_PROMESA`      longblob,
  IN   `kvARCHIVO_PROPIEDAD`    longblob,
  IN   `kvARCHIVO_DEUDA`        longblob,
  IN   `kvARCHIVO_DECLARACION`  longblob,
  IN   `kvTIPO_DOCUMENTO`       varchar(255),
  IN   `kvARCHIVO_PROPIEDADBR`    longblob,
  OUT  `resultado`              int
)
BEGIN
	DECLARE lcount INT;
	SELECT count(1) INTO lcount
	  FROM VIVIENDA
	 WHERE IDVIVIENDA = kvIDVIVIENDA;
	IF lcount = 0 THEN
		INSERT INTO VIVIENDA(IDVIVIENDA,
				IDPONDVIVIENDA,
				IDPOSTULACION,
				DESTINO_FONDO,
				VIVIENDA_DIRECCION,
				VIVIENDA_NUMERO,
				VIVIENDA_DEPTO,
				VIVIENDA_VILLA,
				VIVIENDA_COMUNA,
				VIVIENDA_REGION,
				ACEPTA_VIVIENDA,
        TIPO_DOCUMENTO,
        ARCHIVO_PROPIEDADBR)
		VALUES (kvIDVIVIENDA,
				kvIDPONDVIVIENDA,
				kvIDPOSTULACION,
				kvDESTINO_FONDO,
				kvVIVIENDA_DIRECCION,
				kvVIVIENDA_NUMERO,
				kvVIVIENDA_DEPTO,
				kvVIVIENDA_VILLA,
				kvVIVIENDA_COMUNA,
				kvVIVIENDA_REGION,
				kvACEPTA_VIVIENDA,
        kvTIPO_DOCUMENTO,
        kvARCHIVO_PROPIEDADBR);
				set resultado = 1;
	ELSE
		UPDATE VIVIENDA
		SET DESTINO_FONDO = COALESCE(kvDESTINO_FONDO,DESTINO_FONDO),
			VIVIENDA_DIRECCION = COALESCE(kvVIVIENDA_DIRECCION,VIVIENDA_DIRECCION),
			VIVIENDA_NUMERO =  COALESCE(kvVIVIENDA_NUMERO,VIVIENDA_NUMERO),
			VIVIENDA_DEPTO =  COALESCE(kvVIVIENDA_DEPTO,VIVIENDA_DEPTO),
			VIVIENDA_VILLA =  COALESCE(kvVIVIENDA_VILLA,VIVIENDA_VILLA),
			VIVIENDA_COMUNA =  COALESCE(kvVIVIENDA_COMUNA,VIVIENDA_COMUNA),
			VIVIENDA_REGION =  COALESCE(kvVIVIENDA_REGION,VIVIENDA_REGION),
			ARCHIVO_CONTRATO =  COALESCE(kvARCHIVO_CONTRATO,ARCHIVO_CONTRATO),
			ARCHIVO_LIQ1 =  COALESCE(kvARCHIVO_LIQ1,ARCHIVO_LIQ1),
			ARCHIVO_LIQ2 =  COALESCE(kvARCHIVO_LIQ2,ARCHIVO_LIQ2),
			ARCHIVO_LIQ3 =  COALESCE(kvARCHIVO_LIQ3,ARCHIVO_LIQ3),
			ARCHIVO_PROMESA =  COALESCE(kvARCHIVO_PROMESA,ARCHIVO_PROMESA),
			ARCHIVO_PROPIEDAD =  COALESCE(kvARCHIVO_PROPIEDAD,ARCHIVO_PROPIEDAD),
			ARCHIVO_DEUDA =  COALESCE(kvARCHIVO_DEUDA,ARCHIVO_DEUDA),
			ARCHIVO_DECLARACION =  COALESCE(kvARCHIVO_DECLARACION,ARCHIVO_DECLARACION),
			ACEPTA_VIVIENDA =  COALESCE(kvACEPTA_VIVIENDA,ACEPTA_VIVIENDA),
      TIPO_DOCUMENTO =  COALESCE(kvTIPO_DOCUMENTO,TIPO_DOCUMENTO),
      ARCHIVO_PROPIEDADBR =  COALESCE(kvARCHIVO_PROPIEDADBR,ARCHIVO_PROPIEDADBR) 
		WHERE IDVIVIENDA = kvIDVIVIENDA;
		set resultado = 2;
	END IF;
END
$$

--
-- Definition for procedure LLENAR_EDUCACION_P
--
DROP PROCEDURE IF EXISTS LLENAR_EDUCACION_P$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE LLENAR_EDUCACION_P()
BEGIN
  truncate EDUCACION_P;
  INSERT into EDUCACION_P   
   SELECT
      *
    FROM Listar_EDUCACION;
  select 'Proceso de Creación Terminado' as Estado ;
END
$$

--
-- Definition for procedure LLENAR_VIVIENDA_P
--
DROP PROCEDURE IF EXISTS LLENAR_VIVIENDA_P$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE LLENAR_VIVIENDA_P()
BEGIN
  truncate VIVIENDA_P;
  INSERT into VIVIENDA_P   
   SELECT
      *
    FROM Listar_VIVIENDA;
  select 'Proceso de Creación Terminado' as Estado ;
END
$$

--
-- Definition for procedure trae_avance
--
DROP PROCEDURE IF EXISTS trae_avance$$
CREATE DEFINER = 'root'@'localhost'
PROCEDURE trae_avance(IN id INT)
BEGIN
declare estado int;
declare _output TEXT DEFAULT '';
  set estado = (select IDESTADOBECA from POSTULACIONES_WEB where IDPOSTULACION = id);
  SET _output = CONCAT(",", estado);

  if estado = 1 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (8);
    end if;

    if estado = 2 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (3,5,7,10);
    end if;

    if estado = 3 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (4);
    end if;


    if estado = 4 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (6);
    end if;


    if estado = 7 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (3,10);
    end if;

  if estado = 11 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (11);
    end if;

    if estado = 12 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (12);
    end if;

      if estado = 9 then
      select IDESTADOBECA, ESTADO_BECA from ESTADO_BECA where  IDESTADOBECA in (3,7,9,10,5);
    end if;


-- SELECT _output;
END
$$

--
-- Definition for function BASE64_DECODE
--
DROP FUNCTION IF EXISTS BASE64_DECODE$$
CREATE FUNCTION BASE64_DECODE(input BLOB)
  RETURNS blob
  DETERMINISTIC
  SQL SECURITY INVOKER
BEGIN
	DECLARE ret BLOB DEFAULT '';
	DECLARE done TINYINT DEFAULT 0;
 
	IF input IS NULL THEN
		RETURN NULL;
	END IF;
 
each_block:
	WHILE NOT done DO BEGIN
		DECLARE accum_value BIGINT UNSIGNED DEFAULT 0;
		DECLARE in_count TINYINT DEFAULT 0;
		DECLARE out_count TINYINT DEFAULT 3;
 
each_input_char:
		WHILE in_count < 4 DO BEGIN
			DECLARE first_char CHAR(1);
 
			IF LENGTH(input) = 0 THEN
				RETURN ret;
			END IF;
 
			SET first_char = SUBSTRING(input,1,1);
			SET input = SUBSTRING(input,2);
 
			BEGIN
				DECLARE tempval TINYINT UNSIGNED;
				DECLARE error TINYINT DEFAULT 0;
				DECLARE base64_getval CURSOR FOR SELECT val FROM base64_data WHERE c = first_char;
				DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET error = 1;
 
				OPEN base64_getval;
				FETCH base64_getval INTO tempval;
				CLOSE base64_getval;
 
				IF error THEN
					ITERATE each_input_char;
				END IF;
 
				SET accum_value = (accum_value << 6) + tempval;
			END;
 
			SET in_count = in_count + 1;
 
			IF first_char = '=' THEN
				SET done = 1;
				SET out_count = out_count - 1;
			END IF;
		END; END WHILE;
 
		-- We've now accumulated 24 bits; deaccumulate into bytes
 
		-- We have to work from the left, so use the third byte position and shift left
		WHILE out_count > 0 DO BEGIN
			SET ret = CONCAT(ret,CHAR((accum_value & 0xff0000) >> 16));
			SET out_count = out_count - 1;
			SET accum_value = (accum_value << 8) & 0xffffff;
		END; END WHILE;
 
	END; END WHILE;
 
	RETURN ret;
END
$$

--
-- Definition for function BASE64_ENCODE
--
DROP FUNCTION IF EXISTS BASE64_ENCODE$$
CREATE FUNCTION BASE64_ENCODE(input BLOB)
  RETURNS blob
  DETERMINISTIC
  SQL SECURITY INVOKER
BEGIN
	DECLARE ret BLOB DEFAULT '';
	DECLARE done TINYINT DEFAULT 0;
 
	IF input IS NULL THEN
		RETURN NULL;
	END IF;
 
each_block:
	WHILE NOT done DO BEGIN
		DECLARE accum_value BIGINT UNSIGNED DEFAULT 0;
		DECLARE in_count TINYINT DEFAULT 0;
		DECLARE out_count TINYINT;
 
each_input_char:
		WHILE in_count < 3 DO BEGIN
			DECLARE first_char CHAR(1);
 
			IF LENGTH(input) = 0 THEN
				SET done = 1;
				SET accum_value = accum_value << (8 * (3 - in_count));
				LEAVE each_input_char;
			END IF;
 
			SET first_char = SUBSTRING(input,1,1);
			SET input = SUBSTRING(input,2);
 
			SET accum_value = (accum_value << 8) + ASCII(first_char);
 
			SET in_count = in_count + 1;
		END; END WHILE;
 
		-- We've now accumulated 24 bits; deaccumulate into base64 characters
 
		-- We have to work from the left, so use the third byte position and shift left
		CASE
			WHEN in_count = 3 THEN SET out_count = 4;
			WHEN in_count = 2 THEN SET out_count = 3;
			WHEN in_count = 1 THEN SET out_count = 2;
			ELSE RETURN ret;
		END CASE;
 
		WHILE out_count > 0 DO BEGIN
			BEGIN
				DECLARE out_char CHAR(1);
				DECLARE base64_getval CURSOR FOR SELECT c FROM base64_data WHERE val = (accum_value >> 18);
 
				OPEN base64_getval;
				FETCH base64_getval INTO out_char;
				CLOSE base64_getval;
 
				SET ret = CONCAT(ret,out_char);
				SET out_count = out_count - 1;
				SET accum_value = accum_value << 6 & 0xffffff;
			END;
		END; END WHILE;
 
		CASE
			WHEN in_count = 2 THEN SET ret = CONCAT(ret,'=');
			WHEN in_count = 1 THEN SET ret = CONCAT(ret,'==');
			ELSE BEGIN END;
		END CASE;
 
	END; END WHILE;
 
	RETURN ret;
END
$$

--
-- Definition for function dv_rut
--
DROP FUNCTION IF EXISTS dv_rut$$
CREATE DEFINER = 'root'@'localhost'
FUNCTION dv_rut(RUT VARCHAR(12))
  RETURNS int(11)
BEGIN
	DECLARE strlen INT;
	DECLARE i INT;
	DECLARE j INT;
	DECLARE suma NUMERIC;
	DECLARE temprut VARCHAR(12);
	DECLARE verify_dv CHAR(2);
	DECLARE DV CHAR(1);
	SET RUT = REPLACE(REPLACE(RUT, '.', ''),'-','');
	SET DV = SUBSTR(RUT,-1,1);
	SET RUT = SUBSTR(RUT,1,LENGTH(RUT)-1);
	SET i = 1;
  	SET strlen = LENGTH(RUT);
  	SET j = 2;
  	SET suma = 0;
	IF strlen = 8 OR strlen = 7 THEN
		SET temprut = REVERSE(RUT);
		moduloonce: LOOP
		    IF i <= LENGTH(temprut) THEN
    			SET suma = suma + (CONVERT(SUBSTRING(temprut, i, 1),UNSIGNED INTEGER) * j); 
	      		SET i = i + 1;
	      		IF j = 7 THEN
		    		SET j = 2;
	    		ELSE
	    			SET j = j + 1;
    			END IF;
	      		ITERATE moduloonce;
		    END IF;
		    LEAVE moduloonce;
	  	END LOOP moduloonce;
	  	SET verify_dv = 11 - (suma % 11);
	  	IF verify_dv = 11 THEN
	  		SET verify_dv = 0;
	  	ELSEIF verify_dv = 10 THEN 
	  		SET verify_dv = 10;
	  	END IF;
	  	RETURN verify_dv;
	END IF;
	RETURN 0;
END
$$

--
-- Definition for function SPLIT_STR
--
DROP FUNCTION IF EXISTS SPLIT_STR$$
CREATE DEFINER = 'root'@'localhost'
FUNCTION SPLIT_STR(
  x VARCHAR(255),
  delim VARCHAR(12),
  pos INT
)
  RETURNS varchar(255) CHARSET latin1
RETURN REPLACE(SUBSTRING(SUBSTRING_INDEX(x, delim, pos),
       LENGTH(SUBSTRING_INDEX(x, delim, pos -1)) + 1),
       delim, '')
$$

--
-- Definition for function validate_rut
--
DROP FUNCTION IF EXISTS validate_rut$$
CREATE DEFINER = 'root'@'localhost'
FUNCTION validate_rut(RUT VARCHAR(12))
  RETURNS int(11)
BEGIN
	DECLARE strlen INT;
	DECLARE i INT;
	DECLARE j INT;
	DECLARE suma NUMERIC;
	DECLARE temprut VARCHAR(12);
	DECLARE verify_dv CHAR(2);
	DECLARE DV CHAR(1);
	SET RUT = REPLACE(REPLACE(RUT, '.', ''),'-','');
	SET DV = SUBSTR(RUT,-1,1);
	SET RUT = SUBSTR(RUT,1,LENGTH(RUT)-1);
	SET i = 1;
  	SET strlen = LENGTH(RUT);
  	SET j = 2;
  	SET suma = 0;
	IF strlen = 8 OR strlen = 7 THEN
		SET temprut = REVERSE(RUT);
		moduloonce: LOOP
		    IF i <= LENGTH(temprut) THEN
    			SET suma = suma + (CONVERT(SUBSTRING(temprut, i, 1),UNSIGNED INTEGER) * j); 
	      		SET i = i + 1;
	      		IF j = 7 THEN
		    		SET j = 2;
	    		ELSE
	    			SET j = j + 1;
    			END IF;
	      		ITERATE moduloonce;
		    END IF;
		    LEAVE moduloonce;
	  	END LOOP moduloonce;
	  	SET verify_dv = 11 - (suma % 11);
	  	IF verify_dv = 11 THEN
	  		SET verify_dv = 0;
	  	ELSEIF verify_dv = 10 THEN 
	  		SET verify_dv = 'K';
	  	END IF;
	  	IF DV = verify_dv THEN
	  		RETURN 1;
	  	ELSE 
	  		RETURN 0;
	  	END IF;
	END IF;
	RETURN 0;
END
$$

DELIMITER ;

--
-- Definition for view existe_codigo
--
DROP VIEW IF EXISTS existe_codigo CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW existe_codigo
AS
	select `POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`VIVIENDA`.`IDVIVIENDA` AS `id`,'VIVIENDA' AS `tipo`,concat(`POSTULACIONES_WEB`.`IDTIPOBECA`,'2015',`POSTULACIONES_WEB`.`RUT_TRABAJADOR`) AS `ticket` from (`POSTULACIONES_WEB` left join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) where ((`POSTULACIONES_WEB`.`IDESTADOBECA` > 0) and (`VIVIENDA`.`IDVIVIENDA` is not null)) union all select `POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`EDUCACION`.`IDEDUCACION` AS `id`,'EDUCACION' AS `tipo`,concat(`POSTULACIONES_WEB`.`IDTIPOBECA`,'2015',`POSTULACIONES_WEB`.`RUT_TRABAJADOR`) AS `ticket` from (`POSTULACIONES_WEB` left join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) where ((`POSTULACIONES_WEB`.`IDESTADOBECA` > 0) and (`EDUCACION`.`IDEDUCACION` is not null));

--
-- Definition for view LINK_EDITAR_DOCUMENTOS
--
DROP VIEW IF EXISTS LINK_EDITAR_DOCUMENTOS CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW LINK_EDITAR_DOCUMENTOS
AS
	select `becascodelco2017`.`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,concat('k=1&r=',`becascodelco2017`.`POSTULACIONES_WEB`.`RUT_TRABAJADOR`,'&dv=',`becascodelco2017`.`POSTULACIONES_WEB`.`DV_TRABAJADOR`,'&i=',`becascodelco2017`.`POSTULACIONES_WEB`.`IDPOSTULACION`) AS `data1`,concat('http://www.oticdelaconstruccion.cl/fondos2016/estudios_open.php?',`BASE64_ENCODE`(concat('k=1&r=',`becascodelco2017`.`POSTULACIONES_WEB`.`RUT_TRABAJADOR`,'&dv=',`becascodelco2017`.`POSTULACIONES_WEB`.`DV_TRABAJADOR`,'&i=',`becascodelco2017`.`POSTULACIONES_WEB`.`IDPOSTULACION`))) AS `link_me` from (`POSTULACIONES_WEB` join `USUARIOS_SINDOC_NABARCA` on((`becascodelco2017`.`POSTULACIONES_WEB`.`IDPOSTULACION` = `becascodelco2017`.`USUARIOS_SINDOC_NABARCA`.`id`)));

--
-- Definition for view LISTADO_POSTULACIONES_VIVIENDA
--
DROP VIEW IF EXISTS LISTADO_POSTULACIONES_VIVIENDA CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW LISTADO_POSTULACIONES_VIVIENDA
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`TIPO_BECA`.`TIPO_BECA` AS `TIPO_BECA`,`USUARIOS`.`USUARIO_NOMBRE` AS `EVALUADOR`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,length(`VIVIENDA`.`ARCHIVO_CONTRATO`) AS `ARCHIVO_CONTRATO`,length(`VIVIENDA`.`ARCHIVO_LIQ1`) AS `ARCHIVO_LIQ1`,length(`VIVIENDA`.`ARCHIVO_LIQ2`) AS `ARCHIVO_LIQ2`,length(`VIVIENDA`.`ARCHIVO_LIQ3`) AS `ARCHIVO_LIQ3`,length(`VIVIENDA`.`ARCHIVO_PROMESA`) AS `ARCHIVO_PROMESA`,length(`VIVIENDA`.`ARCHIVO_PROPIEDAD`) AS `ARCHIVO_PROPIEDAD`,length(`VIVIENDA`.`ARCHIVO_DEUDA`) AS `ARCHIVO_DEUDA`,length(`VIVIENDA`.`ARCHIVO_DECLARACION`) AS `ARCHIVO_DECLARACION`,`VIVIENDA`.`TIPO_DOCUMENTO` AS `TIPO_DOCUMENTO`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`BITACORAS`.`FECHA_BITACORA` AS `FECHA_BITACORA` from (((((`POSTULACIONES_WEB` join `TIPO_BECA` on((`POSTULACIONES_WEB`.`IDTIPOBECA` = `TIPO_BECA`.`IDTIPOBECA`))) join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `USUARIOS` on((`USUARIOS`.`IDUSUARIO` = `POSTULACIONES_WEB`.`IDEVALUADOR`))) left join `ESTADO_BECA` on((`ESTADO_BECA`.`IDESTADOBECA` = `POSTULACIONES_WEB`.`IDESTADOBECA`))) left join `BITACORAS` on((`BITACORAS`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`)));

--
-- Definition for view listar_busqueda
--
DROP VIEW IF EXISTS listar_busqueda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_busqueda
AS
	select `POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`ESTADO_BECA`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULANTES`.`IDPOSTULANTES` AS `IDPOSTULANTES`,`POSTULANTES`.`POSTULANTE_RUT` AS `POSTULANTE_RUT`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,concat(`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR`,' ',`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR`,' ',`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR`) AS `NOMBRECOMPLETO`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`POSTULACIONES_WEB`.`IDEVALUADOR` AS `IDEVALUADOR`,`USUARIOS`.`USUARIO_NOMBRE` AS `USUARIO_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION` from ((((`POSTULACIONES_WEB` left join `POSTULANTES` on((`POSTULANTES`.`POSTULANTE_RUT` = `POSTULACIONES_WEB`.`RUT_TRABAJADOR`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) left join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `USUARIOS` on((`POSTULACIONES_WEB`.`IDEVALUADOR` = `USUARIOS`.`IDUSUARIO`)));

--
-- Definition for view listar_busqueda_mix
--
DROP VIEW IF EXISTS listar_busqueda_mix CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_busqueda_mix
AS
	select `POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`ESTADO_BECA`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULANTES`.`IDPOSTULANTES` AS `IDPOSTULANTES`,`POSTULANTES`.`POSTULANTE_RUT` AS `POSTULANTE_RUT`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,concat(ifnull(`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR`,''),' ',ifnull(`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR`,''),' ',ifnull(`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR`,'')) AS `NOMBRECOMPLETO`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`POSTULACIONES_WEB`.`IDEVALUADOR` AS `IDEVALUADOR`,`USUARIOS`.`USUARIO_NOMBRE` AS `USUARIO_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `expr1` from (((((`POSTULACIONES_WEB` left join `POSTULANTES` on((`POSTULANTES`.`POSTULANTE_RUT` = `POSTULACIONES_WEB`.`RUT_TRABAJADOR`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) left join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) left join `USUARIOS` on((`POSTULACIONES_WEB`.`IDEVALUADOR` = `USUARIOS`.`IDUSUARIO`))) where (`POSTULACIONES_WEB`.`IDTIPOBECA` = 1);

--
-- Definition for view listar_comunas
--
DROP VIEW IF EXISTS listar_comunas CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_comunas
AS
	select `COMUNAS`.`IDCOMUNAS` AS `IDCOMUNAS`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`IDREGIONES` AS `IDREGIONES` from ((`REGIONES` join `PROVINCIAS` on((`REGIONES`.`IDREGIONES` = `PROVINCIAS`.`IDREGIONES`))) join `COMUNAS` on((`PROVINCIAS`.`IDPROVINCIAS` = `COMUNAS`.`IDPROVINCIAS`)));

--
-- Definition for view listar_datos_ponderacion
--
DROP VIEW IF EXISTS listar_datos_ponderacion CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_datos_ponderacion
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`REGIONES`.`REGION_NUMERO` AS `REGION_NUMERO`,`PONDERACION_VIVIENDA`.`r9` AS `r9`,`PONDERACION_VIVIENDA`.`r19` AS `r19`,`PONDERACION_VIVIENDA`.`tr9` AS `tr9`,`PONDERACION_VIVIENDA`.`tr14` AS `tr14`,`PONDERACION_VIVIENDA`.`tr19` AS `tr19` from ((((`VIVIENDA` join `COMUNAS` on((`VIVIENDA`.`VIVIENDA_COMUNA` = `COMUNAS`.`IDCOMUNAS`))) join `POSTULACIONES_WEB` on((`VIVIENDA`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`))) join `REGIONES` on((`VIVIENDA`.`VIVIENDA_REGION` = `REGIONES`.`IDREGIONES`))) left join `PONDERACION_VIVIENDA` on((`VIVIENDA`.`IDPONDVIVIENDA` = `PONDERACION_VIVIENDA`.`IDPONDVIVIENDA`)));

--
-- Definition for view listar_datos_ponderacion_estudios
--
DROP VIEW IF EXISTS listar_datos_ponderacion_estudios CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_datos_ponderacion_estudios
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`PONDERACION_EDUCACION`.`tr11` AS `tr11`,`PONDERACION_EDUCACION`.`tr20` AS `tr20`,`PONDERACION_EDUCACION`.`tr26` AS `tr26` from ((`POSTULACIONES_WEB` join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) join `PONDERACION_EDUCACION` on((`PONDERACION_EDUCACION`.`IDPONDEDUCACION` = `EDUCACION`.`IDPONDEDUCACION`)));

--
-- Definition for view Listar_EDUCACION
--
DROP VIEW IF EXISTS Listar_EDUCACION CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW Listar_EDUCACION
AS
	select `EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`EDUCACION`.`IDPOSTULACION` AS `IDPOSTULACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,(case when (length(`EDUCACION`.`ARCHIVO_CONTRATO`) > 0) then 1 else 0 end) AS `ARCHIVO_CONTRATO`,(case when (length(`EDUCACION`.`ARCHIVO_LIQ1`) > 0) then 1 else 0 end) AS `ARCHIVO_LIQ1`,(case when (length(`EDUCACION`.`ARCHIVO_LIQ2`) > 0) then 1 else 0 end) AS `ARCHIVO_LIQ2`,(case when (length(`EDUCACION`.`ARCHIVO_LIQ3`) > 0) then 1 else 0 end) AS `ARCHIVO_LIQ3`,(case when (length(`EDUCACION`.`ARCHIVO_CERT_ALUMNO`) > 0) then 1 else 0 end) AS `ARCHIVO_CERT_ALUMNO`,(case when (length(`EDUCACION`.`ARCHIVO_CONC_NOTAS`) > 0) then 1 else 0 end) AS `ARCHIVO_CONC_NOTAS`,(case when (length(`EDUCACION`.`ARCHIVO_CERT_NAC`) > 0) then 1 else 0 end) AS `ARCHIVO_CERT_NAC`,(case when (length(`EDUCACION`.`ARCHIVO_CERT_MATRI`) > 0) then 1 else 0 end) AS `ARCHIVO_CERT_MATRI`,(case when (length(`EDUCACION`.`ARCHIVO_DECLARA`) > 0) then 1 else 0 end) AS `ARCHIVO_DECLARA`,(case when (length(`EDUCACION`.`ARCHIVO_SEGUROCOMP`) > 0) then 1 else 0 end) AS `ARCHIVO_SEGUROCOMP`,`EDUCACION`.`ACEPTA_EDUCACION` AS `ACEPTA_EDUCACION` from `EDUCACION`;

--
-- Definition for view LISTAR_EDUCACION_SIMPLE
--
DROP VIEW IF EXISTS LISTAR_EDUCACION_SIMPLE CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW LISTAR_EDUCACION_SIMPLE
AS
	select `EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`EDUCACION`.`IDPOSTULACION` AS `IDPOSTULACION`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE` from `EDUCACION`;

--
-- Definition for view listar_estado
--
DROP VIEW IF EXISTS listar_estado CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_estado
AS
	select `ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`ESTADO_BECA`.`ESTADO_BECA_GLOSA` AS `ESTADO_BECA_GLOSA`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,concat(`POSTULACIONES_WEB`.`IDTIPOBECA`,'2015',`POSTULACIONES_WEB`.`RUT_TRABAJADOR`) AS `ticket`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE` from ((`POSTULACIONES_WEB` join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`)));

--
-- Definition for view listar_evaluadores_estudios
--
DROP VIEW IF EXISTS listar_evaluadores_estudios CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_evaluadores_estudios
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,`PONDERACION_EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`PONDERACION_EDUCACION`.`OBS_PASO1` AS `OBS_PASO1`,`PONDERACION_EDUCACION`.`OBS_PASO2` AS `OBS_PASO2`,`PONDERACION_EDUCACION`.`OBS_PASO3` AS `OBS_PASO3`,`PONDERACION_EDUCACION`.`OBS_PASO4` AS `OBS_PASO4`,`PONDERACION_EDUCACION`.`OBS_PASO5` AS `OBS_PASO5`,`PONDERACION_EDUCACION`.`r1` AS `r1`,`PONDERACION_EDUCACION`.`r2` AS `r2`,`PONDERACION_EDUCACION`.`r3` AS `r3`,`PONDERACION_EDUCACION`.`r4` AS `r4`,`PONDERACION_EDUCACION`.`r5` AS `r5`,`PONDERACION_EDUCACION`.`r6` AS `r6`,`PONDERACION_EDUCACION`.`r7` AS `r7`,`PONDERACION_EDUCACION`.`r8` AS `r8`,`PONDERACION_EDUCACION`.`r9` AS `r9`,`PONDERACION_EDUCACION`.`r10` AS `r10`,`PONDERACION_EDUCACION`.`r11` AS `r11`,`PONDERACION_EDUCACION`.`r12` AS `r12`,`PONDERACION_EDUCACION`.`r13` AS `r13`,`PONDERACION_EDUCACION`.`r14` AS `r14`,`PONDERACION_EDUCACION`.`r15` AS `r15`,`PONDERACION_EDUCACION`.`r16` AS `r16`,`PONDERACION_EDUCACION`.`r17` AS `r17`,`PONDERACION_EDUCACION`.`r18` AS `r18`,`PONDERACION_EDUCACION`.`r19` AS `r19`,`PONDERACION_EDUCACION`.`r20` AS `r20`,`PONDERACION_EDUCACION`.`r21` AS `r21`,`PONDERACION_EDUCACION`.`r22` AS `r22`,`PONDERACION_EDUCACION`.`r23` AS `r23`,`PONDERACION_EDUCACION`.`r24` AS `r24`,`PONDERACION_EDUCACION`.`r25` AS `r25`,`PONDERACION_EDUCACION`.`r26` AS `r26`,`PONDERACION_EDUCACION`.`r27` AS `r27`,`PONDERACION_EDUCACION`.`r28` AS `r28`,`PONDERACION_EDUCACION`.`r29` AS `r29`,`PONDERACION_EDUCACION`.`r30` AS `r30`,`PONDERACION_EDUCACION`.`r31` AS `r31`,`PONDERACION_EDUCACION`.`r32` AS `r32`,`PONDERACION_EDUCACION`.`tr1` AS `tr1`,`PONDERACION_EDUCACION`.`tr2` AS `tr2`,`PONDERACION_EDUCACION`.`tr3` AS `tr3`,`PONDERACION_EDUCACION`.`tr4` AS `tr4`,`PONDERACION_EDUCACION`.`tr5` AS `tr5`,`PONDERACION_EDUCACION`.`tr6` AS `tr6`,`PONDERACION_EDUCACION`.`tr7` AS `tr7`,`PONDERACION_EDUCACION`.`tr8` AS `tr8`,`PONDERACION_EDUCACION`.`tr9` AS `tr9`,`PONDERACION_EDUCACION`.`tr10` AS `tr10`,`PONDERACION_EDUCACION`.`tr11` AS `tr11`,`PONDERACION_EDUCACION`.`tr12` AS `tr12`,`PONDERACION_EDUCACION`.`tr13` AS `tr13`,`PONDERACION_EDUCACION`.`tr14` AS `tr14`,`PONDERACION_EDUCACION`.`tr15` AS `tr15`,`PONDERACION_EDUCACION`.`tr16` AS `tr16`,`PONDERACION_EDUCACION`.`tr17` AS `tr17`,`PONDERACION_EDUCACION`.`tr18` AS `tr18`,`PONDERACION_EDUCACION`.`tr19` AS `tr19`,`PONDERACION_EDUCACION`.`tr20` AS `tr20`,`PONDERACION_EDUCACION`.`tr21` AS `tr21`,`PONDERACION_EDUCACION`.`tr22` AS `tr22`,`PONDERACION_EDUCACION`.`tr23` AS `tr23`,`PONDERACION_EDUCACION`.`tr24` AS `tr24`,`PONDERACION_EDUCACION`.`tr25` AS `tr25`,`PONDERACION_EDUCACION`.`tr26` AS `tr26`,`PONDERACION_EDUCACION`.`tr27` AS `tr27`,`PONDERACION_EDUCACION`.`tr28` AS `tr28`,`PONDERACION_EDUCACION`.`tr29` AS `tr29`,`PONDERACION_EDUCACION`.`tr30` AS `tr30`,`PONDERACION_EDUCACION`.`tr31` AS `tr31`,`PONDERACION_EDUCACION`.`tr32` AS `tr32`,`PONDERACION_EDUCACION`.`ponderacion` AS `ponderacion` from (((((`POSTULACIONES_WEB` left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) join `PONDERACION_EDUCACION` on((`EDUCACION`.`IDPONDEDUCACION` = `PONDERACION_EDUCACION`.`IDPONDEDUCACION`)));

--
-- Definition for view listar_evaluadores_vivienda
--
DROP VIEW IF EXISTS listar_evaluadores_vivienda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_evaluadores_vivienda
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`COMUNAS_1`.`COMUNA_NOMBRE` AS `expr1`,`REGIONES_1`.`REGION_NOMBRE` AS `expr2`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,`VIVIENDA`.`TIPO_DOCUMENTO` AS `TIPO_DOCUMENTO`,`PONDERACION_VIVIENDA`.`OBS_PASO1` AS `OBS_PASO1`,`PONDERACION_VIVIENDA`.`OBS_PASO2` AS `OBS_PASO2`,`PONDERACION_VIVIENDA`.`OBS_PASO3` AS `OBS_PASO3`,`PONDERACION_VIVIENDA`.`OBS_PASO4` AS `OBS_PASO4`,`PONDERACION_VIVIENDA`.`OBS_PASO5` AS `OBS_PASO5`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`PONDERACION_VIVIENDA`.`r1` AS `r1`,`PONDERACION_VIVIENDA`.`r2` AS `r2`,`PONDERACION_VIVIENDA`.`r3` AS `r3`,`PONDERACION_VIVIENDA`.`r4` AS `r4`,`PONDERACION_VIVIENDA`.`r5` AS `r5`,`PONDERACION_VIVIENDA`.`r6` AS `r6`,`PONDERACION_VIVIENDA`.`r7` AS `r7`,`PONDERACION_VIVIENDA`.`r8` AS `r8`,`PONDERACION_VIVIENDA`.`r9` AS `r9`,`PONDERACION_VIVIENDA`.`r10` AS `r10`,`PONDERACION_VIVIENDA`.`r11` AS `r11`,`PONDERACION_VIVIENDA`.`r12` AS `r12`,`PONDERACION_VIVIENDA`.`r14` AS `r14`,`PONDERACION_VIVIENDA`.`r15` AS `r15`,`PONDERACION_VIVIENDA`.`r16` AS `r16`,`PONDERACION_VIVIENDA`.`r17` AS `r17`,`PONDERACION_VIVIENDA`.`r13` AS `r13`,`PONDERACION_VIVIENDA`.`r18` AS `r18`,`PONDERACION_VIVIENDA`.`r19` AS `r19`,`PONDERACION_VIVIENDA`.`r20` AS `r20`,`PONDERACION_VIVIENDA`.`r21` AS `r21`,`PONDERACION_VIVIENDA`.`r22` AS `r22`,`PONDERACION_VIVIENDA`.`r23` AS `r23`,`PONDERACION_VIVIENDA`.`r24` AS `r24`,`PONDERACION_VIVIENDA`.`r25` AS `r25`,`PONDERACION_VIVIENDA`.`r26` AS `r26`,`PONDERACION_VIVIENDA`.`r27` AS `r27`,`PONDERACION_VIVIENDA`.`r28` AS `r28`,`PONDERACION_VIVIENDA`.`r29` AS `r29`,`PONDERACION_VIVIENDA`.`r30` AS `r30`,`PONDERACION_VIVIENDA`.`r31` AS `r31`,`PONDERACION_VIVIENDA`.`r32` AS `r32`,`PONDERACION_VIVIENDA`.`r33` AS `r33`,`PONDERACION_VIVIENDA`.`tr1` AS `tr1`,`PONDERACION_VIVIENDA`.`tr2` AS `tr2`,`PONDERACION_VIVIENDA`.`tr3` AS `tr3`,`PONDERACION_VIVIENDA`.`tr4` AS `tr4`,`PONDERACION_VIVIENDA`.`tr5` AS `tr5`,`PONDERACION_VIVIENDA`.`tr6` AS `tr6`,`PONDERACION_VIVIENDA`.`tr7` AS `tr7`,`PONDERACION_VIVIENDA`.`tr8` AS `tr8`,`PONDERACION_VIVIENDA`.`tr9` AS `tr9`,`PONDERACION_VIVIENDA`.`tr10` AS `tr10`,`PONDERACION_VIVIENDA`.`tr11` AS `tr11`,`PONDERACION_VIVIENDA`.`tr12` AS `tr12`,`PONDERACION_VIVIENDA`.`tr13` AS `tr13`,`PONDERACION_VIVIENDA`.`tr14` AS `tr14`,`PONDERACION_VIVIENDA`.`tr15` AS `tr15`,`PONDERACION_VIVIENDA`.`tr16` AS `tr16`,`PONDERACION_VIVIENDA`.`tr17` AS `tr17`,`PONDERACION_VIVIENDA`.`tr18` AS `tr18`,`PONDERACION_VIVIENDA`.`tr19` AS `tr19`,`PONDERACION_VIVIENDA`.`tr20` AS `tr20`,`PONDERACION_VIVIENDA`.`tr21` AS `tr21`,`PONDERACION_VIVIENDA`.`tr22` AS `tr22`,`PONDERACION_VIVIENDA`.`tr23` AS `tr23`,`PONDERACION_VIVIENDA`.`tr24` AS `tr24`,`PONDERACION_VIVIENDA`.`tr25` AS `tr25`,`PONDERACION_VIVIENDA`.`tr26` AS `tr26`,`PONDERACION_VIVIENDA`.`tr27` AS `tr27`,`PONDERACION_VIVIENDA`.`tr28` AS `tr28`,`PONDERACION_VIVIENDA`.`tr29` AS `tr29`,`PONDERACION_VIVIENDA`.`tr30` AS `tr30`,`PONDERACION_VIVIENDA`.`tr31` AS `tr31`,`PONDERACION_VIVIENDA`.`tr32` AS `tr32`,`PONDERACION_VIVIENDA`.`tr33` AS `tr33`,`PONDERACION_VIVIENDA`.`ponderacion` AS `ponderacion`,`PONDERACION_VIVIENDA`.`fecha_mod` AS `fecha_mod`,`PONDERACION_VIVIENDA`.`agente` AS `agente` from (((((((`POSTULACIONES_WEB` left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `PONDERACION_VIVIENDA` on((`VIVIENDA`.`IDPONDVIVIENDA` = `PONDERACION_VIVIENDA`.`IDPONDVIVIENDA`))) left join `COMUNAS` `COMUNAS_1` on((`COMUNAS_1`.`IDCOMUNAS` = `VIVIENDA`.`VIVIENDA_COMUNA`))) left join `REGIONES` `REGIONES_1` on((`REGIONES_1`.`IDREGIONES` = `VIVIENDA`.`VIVIENDA_REGION`)));

--
-- Definition for view listar_evaluadores_vivienda00
--
DROP VIEW IF EXISTS listar_evaluadores_vivienda00 CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_evaluadores_vivienda00
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`COMUNAS_1`.`COMUNA_NOMBRE` AS `expr1`,`REGIONES_1`.`REGION_NOMBRE` AS `expr2`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,`VIVIENDA`.`TIPO_DOCUMENTO` AS `TIPO_DOCUMENTO`,`PONDERACION_VIVIENDA`.`OBS_PASO1` AS `OBS_PASO1`,`PONDERACION_VIVIENDA`.`OBS_PASO2` AS `OBS_PASO2`,`PONDERACION_VIVIENDA`.`OBS_PASO3` AS `OBS_PASO3`,`PONDERACION_VIVIENDA`.`OBS_PASO4` AS `OBS_PASO4`,`PONDERACION_VIVIENDA`.`OBS_PASO5` AS `OBS_PASO5`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA` from (((((((`POSTULACIONES_WEB` left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `PONDERACION_VIVIENDA` on((`VIVIENDA`.`IDPONDVIVIENDA` = `PONDERACION_VIVIENDA`.`IDPONDVIVIENDA`))) left join `COMUNAS` `COMUNAS_1` on((`COMUNAS_1`.`IDCOMUNAS` = `VIVIENDA`.`VIVIENDA_COMUNA`))) left join `REGIONES` `REGIONES_1` on((`REGIONES_1`.`IDREGIONES` = `VIVIENDA`.`VIVIENDA_REGION`)));

--
-- Definition for view listar_historicos_gestion
--
DROP VIEW IF EXISTS listar_historicos_gestion CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_historicos_gestion
AS
	select `GESTION`.`IDGESTION` AS `IDGESTION`,`TIPOS`.`TIPOS_NOMBRE` AS `TIPOS_NOMBRE`,`SUBTIPOS`.`SUBTIPO_NOMBRE` AS `SUBTIPO_NOMBRE`,`RESOLUCION`.`RESOLUCION_NOMBRE` AS `RESOLUCION_NOMBRE`,`USUARIOS`.`USUARIO_NOMBRE` AS `USUARIO_NOMBRE`,`GESTION`.`FECHA_GESTION` AS `FECHA_GESTION`,`GESTION`.`FONO_GESTION` AS `FONO_GESTION`,`GESTION`.`IDPOSTULANTES` AS `IDPOSTULANTES`,`GESTION`.`GLOSA_GESTION` AS `GLOSA_GESTION` from ((((`GESTION` left join `TIPOS` on((`GESTION`.`IDTIPOS` = `TIPOS`.`IDTIPOS`))) left join `SUBTIPOS` on((`GESTION`.`IDSUBTIPO` = `SUBTIPOS`.`IDSUBTIPO`))) left join `RESOLUCION` on((`GESTION`.`IDRESOLUCION` = `RESOLUCION`.`IDRESOLUCION`))) left join `USUARIOS` on((`GESTION`.`IDUSUARIO` = `USUARIOS`.`IDUSUARIO`)));

--
-- Definition for view listar_maestro_contactos
--
DROP VIEW IF EXISTS listar_maestro_contactos CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_maestro_contactos
AS
	select `CONTACTOS`.`IDCONTACTO` AS `IDCONTACTO`,`CONTACTOS`.`CONTACTO_RUT` AS `CONTACTO_RUT`,`CONTACTOS`.`CONTACTO_DV` AS `CONTACTO_DV`,`CONTACTOS`.`CONTACTO_NOMBRE` AS `CONTACTO_NOMBRE`,`CONTACTOS`.`CONTACTO_GLOSA` AS `CONTACTO_GLOSA` from `CONTACTOS`;

--
-- Definition for view listar_maestro_educacion_sinarchivo
--
DROP VIEW IF EXISTS listar_maestro_educacion_sinarchivo CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_maestro_educacion_sinarchivo
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,`EDUCACION`.`ACEPTA_EDUCACION` AS `ACEPTA_EDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION` from ((((`POSTULACIONES_WEB` left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`)));

--
-- Definition for view listar_maestro_gestion
--
DROP VIEW IF EXISTS listar_maestro_gestion CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_maestro_gestion
AS
	select `VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,`VIVIENDA`.`ARCHIVO_CONTRATO` AS `ARCHIVO_CONTRATO`,`VIVIENDA`.`ARCHIVO_LIQ1` AS `ARCHIVO_LIQ1`,`VIVIENDA`.`ARCHIVO_LIQ2` AS `ARCHIVO_LIQ2`,`VIVIENDA`.`ARCHIVO_LIQ3` AS `ARCHIVO_LIQ3`,`VIVIENDA`.`ARCHIVO_PROMESA` AS `ARCHIVO_PROMESA`,`VIVIENDA`.`ARCHIVO_PROPIEDAD` AS `ARCHIVO_PROPIEDAD`,`VIVIENDA`.`ARCHIVO_DEUDA` AS `ARCHIVO_DEUDA`,`VIVIENDA`.`ARCHIVO_DECLARACION` AS `ARCHIVO_DECLARACION`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES` from (`POSTULACIONES_WEB` join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`)));

--
-- Definition for view listar_maestro_postulaciones
--
DROP VIEW IF EXISTS listar_maestro_postulaciones CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_maestro_postulaciones
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,`VIVIENDA`.`ARCHIVO_CONTRATO` AS `ARCHIVO_CONTRATO`,`VIVIENDA`.`ARCHIVO_LIQ1` AS `ARCHIVO_LIQ1`,`VIVIENDA`.`ARCHIVO_LIQ2` AS `ARCHIVO_LIQ2`,`VIVIENDA`.`ARCHIVO_LIQ3` AS `ARCHIVO_LIQ3`,`VIVIENDA`.`ARCHIVO_PROMESA` AS `ARCHIVO_PROMESA`,`VIVIENDA`.`ARCHIVO_PROPIEDAD` AS `ARCHIVO_PROPIEDAD`,`VIVIENDA`.`ARCHIVO_PROPIEDADBR` AS `ARCHIVO_PROPIEDADBR`,`VIVIENDA`.`ARCHIVO_DEUDA` AS `ARCHIVO_DEUDA`,`VIVIENDA`.`ARCHIVO_DECLARACION` AS `ARCHIVO_DECLARACION`,`COMUNAS1`.`COMUNA_NOMBRE` AS `COMUNA_VIVIENDA`,`REGIONES1`.`REGION_NOMBRE` AS `REGION_VIVIENDA` from ((((((`POSTULACIONES_WEB` join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `COMUNAS` `COMUNAS1` on((`VIVIENDA`.`VIVIENDA_COMUNA` = `COMUNAS1`.`IDCOMUNAS`))) left join `REGIONES` `REGIONES1` on((`VIVIENDA`.`VIVIENDA_REGION` = `REGIONES1`.`IDREGIONES`)));

--
-- Definition for view listar_maestro_postulaciones_educacion
--
DROP VIEW IF EXISTS listar_maestro_postulaciones_educacion CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_maestro_postulaciones_educacion
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,`EDUCACION`.`ARCHIVO_CONTRATO` AS `ARCHIVO_CONTRATO`,`EDUCACION`.`ARCHIVO_LIQ1` AS `ARCHIVO_LIQ1`,`EDUCACION`.`ARCHIVO_LIQ2` AS `ARCHIVO_LIQ2`,`EDUCACION`.`ARCHIVO_LIQ3` AS `ARCHIVO_LIQ3`,`EDUCACION`.`ARCHIVO_CERT_ALUMNO` AS `ARCHIVO_CERT_ALUMNO`,`EDUCACION`.`ARCHIVO_CONC_NOTAS` AS `ARCHIVO_CONC_NOTAS`,`EDUCACION`.`ARCHIVO_CERT_NAC` AS `ARCHIVO_CERT_NAC`,`EDUCACION`.`ARCHIVO_CERT_MATRI` AS `ARCHIVO_CERT_MATRI`,`EDUCACION`.`ARCHIVO_DECLARA` AS `ARCHIVO_DECLARA`,`EDUCACION`.`ARCHIVO_SEGUROCOMP` AS `ARCHIVO_SEGUROCOMP`,`EDUCACION`.`ACEPTA_EDUCACION` AS `ACEPTA_EDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION` from ((((`POSTULACIONES_WEB` left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`)));

--
-- Definition for view listar_maestro_postulaciones_educacion_login
--
DROP VIEW IF EXISTS listar_maestro_postulaciones_educacion_login CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_maestro_postulaciones_educacion_login
AS
	select `COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,`EDUCACION`.`ACEPTA_EDUCACION` AS `ACEPTA_EDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION` from ((((`POSTULACIONES_WEB` left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`)));

--
-- Definition for view listar_observacion_estudios
--
DROP VIEW IF EXISTS listar_observacion_estudios CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_observacion_estudios
AS
	select `EDUCACION`.`IDPOSTULACION` AS `IDPOSTULACION`,`PONDERACION_EDUCACION`.`OBS_PASO1` AS `GLOSA` from (`EDUCACION` join `PONDERACION_EDUCACION` on((`EDUCACION`.`IDPONDEDUCACION` = `PONDERACION_EDUCACION`.`IDPONDEDUCACION`)));

--
-- Definition for view listar_observacion_vivienda
--
DROP VIEW IF EXISTS listar_observacion_vivienda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_observacion_vivienda
AS
	select `VIVIENDA`.`IDPOSTULACION` AS `IDPOSTULACION`,`PONDERACION_VIVIENDA`.`OBS_PASO1` AS `OBS_PASO1` from (`VIVIENDA` join `PONDERACION_VIVIENDA` on((`VIVIENDA`.`IDPONDVIVIENDA` = `PONDERACION_VIVIENDA`.`IDPONDVIVIENDA`)));

--
-- Definition for view Listar_Ponderacion_Estudios
--
DROP VIEW IF EXISTS Listar_Ponderacion_Estudios CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW Listar_Ponderacion_Estudios
AS
	select `EDUCACION`.`IDPOSTULACION` AS `IDPOSTULACION`,`PONDERACION_EDUCACION`.`ponderacion` AS `ponderacion`,`PONDERACION_EDUCACION`.`fecha_mod` AS `fecha_mod`,`PONDERACION_EDUCACION`.`agente` AS `agente`,`USUARIOS`.`USUARIO_NOMBRE` AS `USUARIO_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`POSTULACIONES_WEB`.`FECHA_CREACION` AS `FECHA_CREACION`,`POSTULACIONES_WEB`.`IDEVALUADOR` AS `IDEVALUADOR` from (((`EDUCACION` left join `PONDERACION_EDUCACION` on((`EDUCACION`.`IDPONDEDUCACION` = `PONDERACION_EDUCACION`.`IDPONDEDUCACION`))) join `POSTULACIONES_WEB` on((`EDUCACION`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`))) left join `USUARIOS` on((`USUARIOS`.`IDUSUARIO` = `POSTULACIONES_WEB`.`IDEVALUADOR`)));

--
-- Definition for view Listar_Ponderacion_Vivienda
--
DROP VIEW IF EXISTS Listar_Ponderacion_Vivienda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW Listar_Ponderacion_Vivienda
AS
	select `PONDERACION_VIVIENDA`.`ponderacion` AS `ponderacion`,`PONDERACION_VIVIENDA`.`fecha_mod` AS `fecha_mod`,`PONDERACION_VIVIENDA`.`agente` AS `agente`,`USUARIOS`.`USUARIO_NOMBRE` AS `USUARIO_NOMBRE`,`VIVIENDA`.`IDPOSTULACION` AS `IDPOSTULACION` from ((`VIVIENDA` left join `PONDERACION_VIVIENDA` on((`VIVIENDA`.`IDPONDVIVIENDA` = `PONDERACION_VIVIENDA`.`IDPONDVIVIENDA`))) left join `USUARIOS` on((`USUARIOS`.`IDUSUARIO` = `PONDERACION_VIVIENDA`.`agente`)));

--
-- Definition for view listar_postulaciones_estudios
--
DROP VIEW IF EXISTS listar_postulaciones_estudios CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_postulaciones_estudios
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,`EDUCACION`.`ARCHIVO_CONTRATO` AS `ARCHIVO_CONTRATO`,`EDUCACION`.`ARCHIVO_LIQ1` AS `ARCHIVO_LIQ1`,`EDUCACION`.`ARCHIVO_LIQ2` AS `ARCHIVO_LIQ2`,`EDUCACION`.`ARCHIVO_LIQ3` AS `ARCHIVO_LIQ3`,`EDUCACION`.`ARCHIVO_CERT_ALUMNO` AS `ARCHIVO_CERT_ALUMNO`,`EDUCACION`.`ARCHIVO_CONC_NOTAS` AS `ARCHIVO_CONC_NOTAS`,`EDUCACION`.`ARCHIVO_CERT_NAC` AS `ARCHIVO_CERT_NAC`,`EDUCACION`.`ARCHIVO_CERT_MATRI` AS `ARCHIVO_CERT_MATRI`,`EDUCACION`.`ARCHIVO_DECLARA` AS `ARCHIVO_DECLARA`,`EDUCACION`.`ARCHIVO_SEGUROCOMP` AS `ARCHIVO_SEGUROCOMP`,`EDUCACION`.`ACEPTA_EDUCACION` AS `ACEPTA_EDUCACION`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION` from (((`POSTULACIONES_WEB` join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`)));

--
-- Definition for view listar_postulaciones_estudios_mod
--
DROP VIEW IF EXISTS listar_postulaciones_estudios_mod CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'127.0.0.1'
VIEW listar_postulaciones_estudios_mod
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`EDUCACION`.`HIJOSEDSUP_TRABAJADOR` AS `HIJOSEDSUP_TRABAJADOR`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`CARRERA_POSTULANTE` AS `CARRERA_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`SEXO_POSTULANTE` AS `SEXO_POSTULANTE`,`EDUCACION`.`ARCHIVO_CONTRATO` AS `ARCHIVO_CONTRATO`,`EDUCACION`.`ARCHIVO_LIQ1` AS `ARCHIVO_LIQ1`,`EDUCACION`.`ARCHIVO_LIQ2` AS `ARCHIVO_LIQ2`,`EDUCACION`.`ARCHIVO_LIQ3` AS `ARCHIVO_LIQ3`,`EDUCACION`.`ARCHIVO_CERT_ALUMNO` AS `ARCHIVO_CERT_ALUMNO`,`EDUCACION`.`ARCHIVO_CONC_NOTAS` AS `ARCHIVO_CONC_NOTAS`,`EDUCACION`.`ARCHIVO_CERT_NAC` AS `ARCHIVO_CERT_NAC`,`EDUCACION`.`ARCHIVO_CERT_MATRI` AS `ARCHIVO_CERT_MATRI`,`EDUCACION`.`ARCHIVO_DECLARA` AS `ARCHIVO_DECLARA`,`EDUCACION`.`ARCHIVO_SEGUROCOMP` AS `ARCHIVO_SEGUROCOMP`,`EDUCACION`.`ACEPTA_EDUCACION` AS `ACEPTA_EDUCACION`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION` from (((`POSTULACIONES_WEB` join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`)));

--
-- Definition for view listar_postulaciones_panel_educacion
--
DROP VIEW IF EXISTS listar_postulaciones_panel_educacion CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_postulaciones_panel_educacion
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`FECHA_CREACION` AS `FECHA_CREACION`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION` from ((`ESTADO_BECA` join `POSTULACIONES_WEB` on((`ESTADO_BECA`.`IDESTADOBECA` = `POSTULACIONES_WEB`.`IDESTADOBECA`))) join `EDUCACION` on((`EDUCACION`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`)));

--
-- Definition for view listar_postulaciones_panel_vivienda
--
DROP VIEW IF EXISTS listar_postulaciones_panel_vivienda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_postulaciones_panel_vivienda
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`FECHA_CREACION` AS `FECHA_CREACION`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION` from ((`ESTADO_BECA` join `POSTULACIONES_WEB` on((`ESTADO_BECA`.`IDESTADOBECA` = `POSTULACIONES_WEB`.`IDESTADOBECA`))) join `VIVIENDA` on((`VIVIENDA`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`)));

--
-- Definition for view LISTAR_POSTULACIONES_SINPONDERACION
--
DROP VIEW IF EXISTS LISTAR_POSTULACIONES_SINPONDERACION CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW LISTAR_POSTULACIONES_SINPONDERACION
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`PONDERACION_VIVIENDA`.`ponderacion` AS `ponderacion`,`PONDERACION_VIVIENDA`.`fecha_mod` AS `fecha_mod`,`PONDERACION_VIVIENDA`.`agente` AS `agente`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`PONDERACION_VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA` from (((`POSTULACIONES_WEB` join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) join `PONDERACION_VIVIENDA` on((`VIVIENDA`.`IDPONDVIVIENDA` = `PONDERACION_VIVIENDA`.`IDPONDVIVIENDA`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) where ((`POSTULACIONES_WEB`.`IDTIPOBECA` = 1) and isnull(`PONDERACION_VIVIENDA`.`ponderacion`));

--
-- Definition for view listar_postulaciones_vivienda
--
DROP VIEW IF EXISTS listar_postulaciones_vivienda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_postulaciones_vivienda
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,`VIVIENDA`.`ARCHIVO_CONTRATO` AS `ARCHIVO_CONTRATO`,`VIVIENDA`.`ARCHIVO_LIQ1` AS `ARCHIVO_LIQ1`,`VIVIENDA`.`ARCHIVO_LIQ2` AS `ARCHIVO_LIQ2`,`VIVIENDA`.`ARCHIVO_LIQ3` AS `ARCHIVO_LIQ3`,`VIVIENDA`.`ARCHIVO_PROMESA` AS `ARCHIVO_PROMESA`,`VIVIENDA`.`ARCHIVO_PROPIEDAD` AS `ARCHIVO_PROPIEDAD`,`VIVIENDA`.`ARCHIVO_DEUDA` AS `ARCHIVO_DEUDA`,`VIVIENDA`.`ARCHIVO_DECLARACION` AS `ARCHIVO_DECLARACION`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`VIVIENDA`.`TIPO_DOCUMENTO` AS `TIPO_DOCUMENTO`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION`,`POSTULACIONES_WEB`.`IDEVALUADOR` AS `IDEVALUADOR`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`VIVIENDA`.`ARCHIVO_PROPIEDADBR` AS `ARCHIVO_PROPIEDADBR` from (((`POSTULACIONES_WEB` join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`)));

--
-- Definition for view listar_postulaciones_vivienda_mailing
--
DROP VIEW IF EXISTS listar_postulaciones_vivienda_mailing CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_postulaciones_vivienda_mailing
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`RUT_EMPRESA` AS `RUT_EMPRESA`,`POSTULACIONES_WEB`.`DV_EMPRESA` AS `DV_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`CORREO_EMPRESA` AS `CORREO_EMPRESA`,`POSTULACIONES_WEB`.`FONO_EMPRESA` AS `FONO_EMPRESA`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`DV_TRABAJADOR` AS `DV_TRABAJADOR`,`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR` AS `NOMBRE_TRABAJADOR`,`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR` AS `PATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR` AS `MATERNO_TRABAJADOR`,`POSTULACIONES_WEB`.`FECHA_NACIMIENTO` AS `FECHA_NACIMIENTO`,`POSTULACIONES_WEB`.`SEXO` AS `SEXO`,`POSTULACIONES_WEB`.`DIRECCION` AS `DIRECCION`,`POSTULACIONES_WEB`.`NUM_DIRECCION` AS `NUM_DIRECCION`,`POSTULACIONES_WEB`.`DEPTO_DIRECCION` AS `DEPTO_DIRECCION`,`POSTULACIONES_WEB`.`VILLA_DIRECCION` AS `VILLA_DIRECCION`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FONO_TRABAJADOR` AS `FONO_TRABAJADOR`,`POSTULACIONES_WEB`.`CELU_TRABAJADOR` AS `CELU_TRABAJADOR`,`POSTULACIONES_WEB`.`REGION_TRABAJADOR` AS `REGION_TRABAJADOR`,`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` AS `COMUNA_TRABAJADOR`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,trim(isnull(`VIVIENDA`.`ARCHIVO_CONTRATO`)) AS `ARCHIVO_CONTRATO`,trim(isnull(`VIVIENDA`.`ARCHIVO_LIQ1`)) AS `ARCHIVO_LIQ1`,trim(isnull(`VIVIENDA`.`ARCHIVO_LIQ2`)) AS `ARCHIVO_LIQ2`,trim(isnull(`VIVIENDA`.`ARCHIVO_LIQ3`)) AS `ARCHIVO_LIQ3`,trim(isnull(`VIVIENDA`.`ARCHIVO_PROMESA`)) AS `ARCHIVO_PROMESA`,trim(isnull(`VIVIENDA`.`ARCHIVO_PROPIEDAD`)) AS `ARCHIVO_PROPIEDAD`,trim(isnull(`VIVIENDA`.`ARCHIVO_DEUDA`)) AS `ARCHIVO_DEUDA`,trim(isnull(`VIVIENDA`.`ARCHIVO_DECLARACION`)) AS `ARCHIVO_DECLARACION`,trim(isnull(`VIVIENDA`.`ARCHIVO_PROPIEDADBR`)) AS `ARCHIVO_PROPIEDADBR`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`ESTADO_CIVIL` AS `ESTADO_CIVIL`,`POSTULACIONES_WEB`.`INTEGRANTES` AS `INTEGRANTES`,`VIVIENDA`.`TIPO_DOCUMENTO` AS `TIPO_DOCUMENTO`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION`,`POSTULACIONES_WEB`.`IDEVALUADOR` AS `IDEVALUADOR`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION` from ((((`POSTULACIONES_WEB` join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `COMUNAS` on((`POSTULACIONES_WEB`.`COMUNA_TRABAJADOR` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`POSTULACIONES_WEB`.`REGION_TRABAJADOR` = `REGIONES`.`IDREGIONES`))) join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`)));

--
-- Definition for view listar_resumen_basico
--
DROP VIEW IF EXISTS listar_resumen_basico CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW listar_resumen_basico
AS
	select `ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,concat(`POSTULACIONES_WEB`.`NOMBRE_TRABAJADOR`,' ',`POSTULACIONES_WEB`.`PATERNO_TRABAJADOR`,' ',`POSTULACIONES_WEB`.`MATERNO_TRABAJADOR`) AS `NOMBRETRABAJADOR`,concat(`POSTULACIONES_WEB`.`RUT_EMPRESA`,'-',`POSTULACIONES_WEB`.`DV_EMPRESA`) AS `RUTEMPRESA`,`POSTULACIONES_WEB`.`TIPO_EMPRESA` AS `TIPO_EMPRESA`,`POSTULACIONES_WEB`.`RAZONSOCIAL` AS `RAZONSOCIAL`,`POSTULACIONES_WEB`.`FECHA_CONTRATO` AS `FECHA_CONTRATO`,`POSTULACIONES_WEB`.`CONTRATO` AS `CONTRATO`,`POSTULACIONES_WEB`.`DIVISION` AS `DIVISION`,concat(`POSTULACIONES_WEB`.`RUT_TRABAJADOR`,'-',`POSTULACIONES_WEB`.`DV_TRABAJADOR`) AS `RUTEMPLEADO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,`EDUCACION`.`ENSENA_POSTULANTE` AS `ENSENA_POSTULANTE`,`EDUCACION`.`ANTENSENA_POSTULANTE` AS `ANTENSENA_POSTULANTE`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`COMUNAS`.`COMUNA_NOMBRE` AS `COMUNA_NOMBRE`,`REGIONES`.`REGION_NOMBRE` AS `REGION_NOMBRE`,`POSTULACIONES_WEB`.`RENTA_TRABAJADOR` AS `RENTA_TRABAJADOR`,`POSTULACIONES_WEB`.`CORREO_TRABAJADOR` AS `CORREO_TRABAJADOR`,`POSTULACIONES_WEB`.`FECHA_POSTULACION` AS `FECHA_POSTULACION`,`POSTULACIONES_WEB`.`FECHA_MODIFICACION` AS `FECHA_MODIFICACION`,`POSTULACIONES_WEB`.`IDEVALUADOR` AS `IDEVALUADOR`,`USUARIOS`.`USUARIO_NOMBRE` AS `USUARIO_NOMBRE`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,`EDUCACION`.`NOMBRE_POSTULANTE` AS `NOMBRE_POSTULANTE`,`EDUCACION`.`PATERNO_POSTULANTE` AS `PATERNO_POSTULANTE`,`EDUCACION`.`MATERNO_POSTULANTE` AS `MATERNO_POSTULANTE`,`EDUCACION`.`PROMEDIONOTAS_POSTULANTE` AS `PROMEDIONOTAS_POSTULANTE`,`EDUCACION`.`ESTABLECIMIENTO_POSTULANTE` AS `ESTABLECIMIENTO_POSTULANTE`,`EDUCACION`.`NACIMIENTO_POSTULANTE` AS `NACIMIENTO_POSTULANTE`,`EDUCACION`.`TIPO_POSTULANTE` AS `TIPO_POSTULANTE` from ((((((`POSTULACIONES_WEB` join `ESTADO_BECA` on((`POSTULACIONES_WEB`.`IDESTADOBECA` = `ESTADO_BECA`.`IDESTADOBECA`))) left join `VIVIENDA` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `VIVIENDA`.`IDPOSTULACION`))) left join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) left join `COMUNAS` on((`VIVIENDA`.`VIVIENDA_COMUNA` = `COMUNAS`.`IDCOMUNAS`))) left join `REGIONES` on((`VIVIENDA`.`VIVIENDA_REGION` = `REGIONES`.`IDREGIONES`))) left join `USUARIOS` on((`POSTULACIONES_WEB`.`IDEVALUADOR` = `USUARIOS`.`IDUSUARIO`)));

--
-- Definition for view Listar_VIVIENDA
--
DROP VIEW IF EXISTS Listar_VIVIENDA CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW Listar_VIVIENDA
AS
	select `VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`IDPOSTULACION` AS `IDPOSTULACION`,`VIVIENDA`.`ACEPTA_VIVIENDA` AS `ACEPTA_VIVIENDA`,`VIVIENDA`.`DESTINO_FONDO` AS `DESTINO_FONDO`,`VIVIENDA`.`VIVIENDA_DIRECCION` AS `VIVIENDA_DIRECCION`,`VIVIENDA`.`VIVIENDA_NUMERO` AS `VIVIENDA_NUMERO`,`VIVIENDA`.`VIVIENDA_DEPTO` AS `VIVIENDA_DEPTO`,`VIVIENDA`.`VIVIENDA_VILLA` AS `VIVIENDA_VILLA`,`VIVIENDA`.`VIVIENDA_COMUNA` AS `VIVIENDA_COMUNA`,`VIVIENDA`.`VIVIENDA_REGION` AS `VIVIENDA_REGION`,(case when (length(`VIVIENDA`.`ARCHIVO_CONTRATO`) > 0) then 1 else 0 end) AS `ARCHIVO_CONTRATO`,(case when (length(`VIVIENDA`.`ARCHIVO_LIQ1`) > 0) then 1 else 0 end) AS `ARCHIVO_LIQ1`,(case when (length(`VIVIENDA`.`ARCHIVO_LIQ2`) > 0) then 1 else 0 end) AS `ARCHIVO_LIQ2`,(case when (length(`VIVIENDA`.`ARCHIVO_LIQ3`) > 0) then 1 else 0 end) AS `ARCHIVO_LIQ3`,(case when (length(`VIVIENDA`.`ARCHIVO_PROMESA`) > 0) then 1 else 0 end) AS `ARCHIVO_PROMESA`,(case when (length(`VIVIENDA`.`ARCHIVO_PROPIEDAD`) > 0) then 1 else 0 end) AS `ARCHIVO_PROPIEDAD`,(case when (length(`VIVIENDA`.`ARCHIVO_DEUDA`) > 0) then 1 else 0 end) AS `ARCHIVO_DEUDA`,(case when (length(`VIVIENDA`.`ARCHIVO_DECLARACION`) > 0) then 1 else 0 end) AS `ARCHIVO_DECLARACION`,`VIVIENDA`.`TIPO_DOCUMENTO` AS `TIPO_DOCUMENTO`,(case when (length(`VIVIENDA`.`ARCHIVO_PROPIEDADBR`) > 0) then 1 else 0 end) AS `ARCHIVO_PROPIEDADBR` from `VIVIENDA`;

--
-- Definition for view RECALCULAR_PONDERACION_ESTUDIOS
--
DROP VIEW IF EXISTS RECALCULAR_PONDERACION_ESTUDIOS CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW RECALCULAR_PONDERACION_ESTUDIOS
AS
	select `PONDERACION_EDUCACION`.`tr20` AS `tr20`,`PONDERACION_EDUCACION`.`tr11` AS `tr11`,`PONDERACION_EDUCACION`.`tr26` AS `tr26`,`ESTADO_BECA`.`ESTADO_BECA` AS `ESTADO_BECA`,`POSTULACIONES_WEB`.`IDESTADOBECA` AS `IDESTADOBECA`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`PONDERACION_EDUCACION`.`IDPONDEDUCACION` AS `IDPONDEDUCACION`,`PONDERACION_EDUCACION`.`ponderacion` AS `ponderacion`,`PONDERACION_EDUCACION`.`ponderacion_2` AS `ponderacion_2` from (((`POSTULACIONES_WEB` join `EDUCACION` on((`POSTULACIONES_WEB`.`IDPOSTULACION` = `EDUCACION`.`IDPOSTULACION`))) join `PONDERACION_EDUCACION` on((`EDUCACION`.`IDPONDEDUCACION` = `PONDERACION_EDUCACION`.`IDPONDEDUCACION`))) join `ESTADO_BECA` on((`ESTADO_BECA`.`IDESTADOBECA` = `POSTULACIONES_WEB`.`IDESTADOBECA`))) where (`POSTULACIONES_WEB`.`IDESTADOBECA` = 10);

--
-- Definition for view RECALCULAR_PONDERACION_VIVIENDA2016
--
DROP VIEW IF EXISTS RECALCULAR_PONDERACION_VIVIENDA2016 CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW RECALCULAR_PONDERACION_VIVIENDA2016
AS
	select `VIVIENDA`.`IDPOSTULACION` AS `IDPOSTULACION`,`VIVIENDA`.`IDPONDVIVIENDA` AS `IDPONDVIVIENDA`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA` from `VIVIENDA` where (`VIVIENDA`.`IDPOSTULACION` in (16607,15445,14793,14251,12541,17445,17215,17167,16797,17035,16857,9737,8789,16707,16503,16441,16419,16389,16365,16247,16241,16211,16117,15925,2466,3790,8103,15655,3962,15429,3925,15255,14979,14945,14859,14807,14783,14703,14377,14347,14301,13989,13933,13923,2257,13201,11751,11095,11015,271));

--
-- Definition for view RESULTADOS_FINALES_BECAS_ESTUDIOS_2016
--
DROP VIEW IF EXISTS RESULTADOS_FINALES_BECAS_ESTUDIOS_2016 CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW RESULTADOS_FINALES_BECAS_ESTUDIOS_2016
AS
	select `becascodelco2017`.`POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`SPLIT_STR`(`becascodelco2017`.`RESULTADOS_ESTUDIOS_2016`.`RUT_T`,'-',1) AS `RUT_TRABAJADOR`,`becascodelco2017`.`RESULTADOS_ESTUDIOS_2016`.`RUT_T` AS `RUT_T`,`becascodelco2017`.`RESULTADOS_ESTUDIOS_2016`.`RUT_P` AS `RUT_P`,`becascodelco2017`.`RESULTADOS_ESTUDIOS_2016`.`ESTADO_ADJ` AS `ESTADO_ADJ`,`becascodelco2017`.`POSTULACIONES_WEB`.`FECHA_CREACION` AS `FECHA_CREACION` from (`RESULTADOS_ESTUDIOS_2016` join `POSTULACIONES_WEB` on((`becascodelco2017`.`RESULTADOS_ESTUDIOS_2016`.`IDPOST` = `becascodelco2017`.`POSTULACIONES_WEB`.`IDPOSTULACION`))) where (`becascodelco2017`.`POSTULACIONES_WEB`.`IDTIPOBECA` = 2);

--
-- Definition for view RESULTADOS_FINALES_BECAS_VIVIENDA_2017
--
DROP VIEW IF EXISTS RESULTADOS_FINALES_BECAS_VIVIENDA_2017 CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW RESULTADOS_FINALES_BECAS_VIVIENDA_2017
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`SPLIT_STR`(`RESULTADOS_VIVIENDA_2017`.`RUT_T`,'-',1) AS `RUT_TRABAJADOR`,`RESULTADOS_VIVIENDA_2017`.`RUT_T` AS `RUT_T`,`RESULTADOS_VIVIENDA_2017`.`RUT_T` AS `RUT_P`,`RESULTADOS_VIVIENDA_2017`.`ESTADO_ADJ` AS `ESTADO_ADJ`,`POSTULACIONES_WEB`.`FECHA_CREACION` AS `FECHA_CREACION` from (`RESULTADOS_VIVIENDA_2017` join `POSTULACIONES_WEB` on((`RESULTADOS_VIVIENDA_2017`.`IDPOS` = `POSTULACIONES_WEB`.`IDPOSTULACION`))) where (`POSTULACIONES_WEB`.`IDTIPOBECA` = 1);

--
-- Definition for view rut_postulantes_malos
--
DROP VIEW IF EXISTS rut_postulantes_malos CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW rut_postulantes_malos
AS
	select `EDUCACION`.`IDPOSTULACION` AS `IDPOSTULACION`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`DV_POSTULANTE` AS `DV_POSTULANTE`,length(`EDUCACION`.`RUT_POSTULANTE`) AS `largo`,`validate_rut`(concat(`EDUCACION`.`RUT_POSTULANTE`,'-',`EDUCACION`.`DV_POSTULANTE`)) AS `rest`,`dv_rut`(concat(`EDUCACION`.`RUT_POSTULANTE`,'-',`EDUCACION`.`DV_POSTULANTE`)) AS `restdv` from `EDUCACION` where ((`validate_rut`(concat(`EDUCACION`.`RUT_POSTULANTE`,'-',`EDUCACION`.`DV_POSTULANTE`)) = 0) and (`EDUCACION`.`DV_POSTULANTE` is not null)) order by length(`EDUCACION`.`RUT_POSTULANTE`) desc;

--
-- Definition for view validar_existe_rut
--
DROP VIEW IF EXISTS validar_existe_rut CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW validar_existe_rut
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`EDUCACION`.`RUT_POSTULANTE` AS `RUT_POSTULANTE`,`EDUCACION`.`IDEDUCACION` AS `IDEDUCACION`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA` from (`POSTULACIONES_WEB` left join `EDUCACION` on((`EDUCACION`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`))) where (`POSTULACIONES_WEB`.`IDTIPOBECA` = 2);

--
-- Definition for view validar_existe_rut_vivienda
--
DROP VIEW IF EXISTS validar_existe_rut_vivienda CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW validar_existe_rut_vivienda
AS
	select `POSTULACIONES_WEB`.`IDPOSTULACION` AS `IDPOSTULACION`,`POSTULACIONES_WEB`.`RUT_TRABAJADOR` AS `RUT_TRABAJADOR`,`POSTULACIONES_WEB`.`IDTIPOBECA` AS `IDTIPOBECA`,`VIVIENDA`.`IDVIVIENDA` AS `IDVIVIENDA` from (`POSTULACIONES_WEB` left join `VIVIENDA` on((`VIVIENDA`.`IDPOSTULACION` = `POSTULACIONES_WEB`.`IDPOSTULACION`))) where (`POSTULACIONES_WEB`.`IDTIPOBECA` = 1);

--
-- Definition for view view1
--
DROP VIEW IF EXISTS view1 CASCADE;
CREATE OR REPLACE 
	DEFINER = 'root'@'localhost'
VIEW view1
AS
	select `LINK_EDITAR_DOCUMENTOS`.`IDPOSTULACION` AS `IDPOSTULACION`,convert(`LINK_EDITAR_DOCUMENTOS`.`link_me` using utf8) AS `ruta` from `LINK_EDITAR_DOCUMENTOS`;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;